#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3082
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Cards
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="cards")]
	public partial class DataBase : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCardType(CardType instance);
    partial void UpdateCardType(CardType instance);
    partial void DeleteCardType(CardType instance);
    partial void InsertSuitType(SuitType instance);
    partial void UpdateSuitType(SuitType instance);
    partial void DeleteSuitType(SuitType instance);
    #endregion
		
		public DataBase(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataBase(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataBase(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataBase(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CardType> CardType
		{
			get
			{
				return this.GetTable<CardType>();
			}
		}
		
		public System.Data.Linq.Table<SuitType> SuitType
		{
			get
			{
				return this.GetTable<SuitType>();
			}
		}
		
		[Function(Name="dbo.Sproc_Deck")]
		public ISingleResult<Sproc_DeckResult> Sproc_Deck([Parameter(Name="Books", DbType="Int")] System.Nullable<int> books)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), books);
			return ((ISingleResult<Sproc_DeckResult>)(result.ReturnValue));
		}
	}
	
	[Table(Name="dbo.CardType")]
	public partial class CardType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CardTypeID;
		
		private System.Nullable<int> _Value;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCardTypeIDChanging(string value);
    partial void OnCardTypeIDChanged();
    partial void OnValueChanging(System.Nullable<int> value);
    partial void OnValueChanged();
    #endregion
		
		public CardType()
		{
			OnCreated();
		}
		
		[Column(Storage="_CardTypeID", DbType="Char(2) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CardTypeID
		{
			get
			{
				return this._CardTypeID;
			}
			set
			{
				if ((this._CardTypeID != value))
				{
					this.OnCardTypeIDChanging(value);
					this.SendPropertyChanging();
					this._CardTypeID = value;
					this.SendPropertyChanged("CardTypeID");
					this.OnCardTypeIDChanged();
				}
			}
		}
		
		[Column(Storage="_Value", DbType="Int")]
		public System.Nullable<int> Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.SuitType")]
	public partial class SuitType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SuitTypeID;
		
		private System.Nullable<int> _Value;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSuitTypeIDChanging(string value);
    partial void OnSuitTypeIDChanged();
    partial void OnValueChanging(System.Nullable<int> value);
    partial void OnValueChanged();
    #endregion
		
		public SuitType()
		{
			OnCreated();
		}
		
		[Column(Storage="_SuitTypeID", DbType="Char(1) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SuitTypeID
		{
			get
			{
				return this._SuitTypeID;
			}
			set
			{
				if ((this._SuitTypeID != value))
				{
					this.OnSuitTypeIDChanging(value);
					this.SendPropertyChanging();
					this._SuitTypeID = value;
					this.SendPropertyChanged("SuitTypeID");
					this.OnSuitTypeIDChanged();
				}
			}
		}
		
		[Column(Storage="_Value", DbType="Int")]
		public System.Nullable<int> Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class Sproc_DeckResult
	{
		
		private string _CardTypeID;
		
		private System.Nullable<int> _Value;
		
		private string _SuitTypeID;
		
		private System.Nullable<int> _SuitValue;
		
		public Sproc_DeckResult()
		{
		}
		
		[Column(Storage="_CardTypeID", DbType="Char(2)")]
		public string CardTypeID
		{
			get
			{
				return this._CardTypeID;
			}
			set
			{
				if ((this._CardTypeID != value))
				{
					this._CardTypeID = value;
				}
			}
		}
		
		[Column(Storage="_Value", DbType="Int")]
		public System.Nullable<int> Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this._Value = value;
				}
			}
		}
		
		[Column(Storage="_SuitTypeID", DbType="Char(1)")]
		public string SuitTypeID
		{
			get
			{
				return this._SuitTypeID;
			}
			set
			{
				if ((this._SuitTypeID != value))
				{
					this._SuitTypeID = value;
				}
			}
		}
		
		[Column(Storage="_SuitValue", DbType="Int")]
		public System.Nullable<int> SuitValue
		{
			get
			{
				return this._SuitValue;
			}
			set
			{
				if ((this._SuitValue != value))
				{
					this._SuitValue = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
