<?xml version="1.0" ?>
<!--
****************************************************************
** Copyright (c) Microsoft Corporation. All rights reserved. **
****************************************************************
The example phone numbers, social security numbers, and credit card numbers depicted
in the examples herein are fictitious.  No association with any real company, organization,
product, domain name, email address, logo, person, places, or events is intended or should be
inferred.
-->
<grammar xml:lang="en-US" version="1.0" xmlns="http://www.w3.org/2001/06/grammar" tag-format="semantics-ms/1.0">
	<!-- Yes No
 -->
	<!-- $YesNo._value: string -->
	<rule id="YesNo" scope="public">
		<example> yes </example>
		<example> sure </example>
		<example> no </example>
		<example> I don't think so </example>
		<one-of>
			<item>
				<ruleref uri="#Yes" />
			</item>
			<item>
				<ruleref uri="#No" />
			</item>
		</one-of>
		<tag> $ = $$ </tag>
	</rule>
	<!-- $YesNoCancel._value: string -->
	<rule id="YesNoCancel" scope="public">
		<example> yes </example>
		<example> sure </example>
		<example> no </example>
		<example> I don't think so </example>
		<example> cancel </example>
		<one-of>
			<item>
				<ruleref uri="#Yes" />
			</item>
			<item>
				<ruleref uri="#No" />
			</item>
			<item>
				<ruleref uri="#Cancel" />
			</item>
		</one-of>
		<tag> $ = $$ </tag>
	</rule>
	<!-- $Yes._value: string ("Yes") -->
	<rule id="Yes" scope="public">
		<example> yes </example>
		<example> yes please </example>
		<example> correct </example>
		<example> sure </example>
		<example> ok </example>
		<item>
			<one-of>
				<item> yes </item>
				<item> yeah </item>
				<item> yeh </item>
				<item> ya </item>
				<item> yup </item>
				<item> yep </item>
				<item> indeed </item>
				<item> positive </item>
				<item> ok </item>
				<item> sure </item>
				<item> affirmative </item>
				<item> agreed </item>
				<item> right </item>
				<item> correct </item>
			</one-of>
			<item repeat="0-1"> please </item>
		</item>
		<tag> $._value = "Yes"; $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $No._value: string ("No") -->
	<rule id="No" scope="public">
		<example> no </example>
		<example> negative </example>
		<example> no I wouldn't </example>
		<example> I do not </example>
		<example> I don't think so </example>
		<one-of>
			<item>
				<one-of>
					<item> no </item>
					<item> nay </item>
					<item> nah </item>
					<item> nope </item>
					<item> negative </item>
				</one-of>
				<item repeat="0-1"> 
				I
				<one-of>
						<item> wouldn't </item>
						<item> would not </item>
						<item> do not </item>
						<item> don't </item>
						<item> don't think so </item>
					</one-of>
			</item>
			</item>
			<item>
			I
			<one-of>
					<item> wouldn't </item>
					<item> would not </item>
					<item> do not </item>
					<item> don't </item>
					<item> don't think so </item>
				</one-of>
		</item>
		</one-of>
		<tag> $._value = "No"; $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $Cancel._value: string ("Cancel") -->
	<rule id="Cancel" scope="public">
		<example> cancel </example>
		<example> wait a minute </example>
		<example> hold it </example>
		<example> exit </example>
		<example> I'm not sure </example>
		<item>
			<one-of>
				<item> wait </item>
				<item> stop </item>
				<item> just a 
				<one-of>
						<item> minute </item>
						<item> moment </item>
					</one-of>
			</item>
				<item> wait a 
				<one-of>
						<item> minute </item>
						<item> moment </item>
					</one-of>
			</item>
				<item> I'm not sure </item>
				<item> hold it </item>
				<item> go back </item>
				<item> cancel </item>
				<item> hold on </item>
				<item> exit </item>
			</one-of>
		</item>
		<tag> $._value = "Cancel"; $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- Numerals
 -->
	<!-- integer

$integer._value: integer -->
	<rule id="integer" scope="public">
		<example> zero </example>
		<example> three </example>
		<example> plus ten </example>
		<example> negative five </example>
		<example> minus two hundred and two </example>
		<tag> $._value = 1 </tag>
		<item>
			<item repeat="0-1">
				<ruleref uri="#numeral_sign" />
				<tag> $._value = ($$._value =='+'? 1 : -1 ) </tag>
			</item>
			<item>
				<ruleref uri="#natural_number" />
				<tag> $._value = $._value * $$._value </tag>
			</item>
		</item>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $numeral_sign._value: string -->
	<rule id="numeral_sign">
		<example> plus </example>
		<example> negative </example>
		<example> minus </example>
		<one-of>
			<item> negative <tag> $._value = '-' </tag> </item>
			<item> minus <tag> $._value = '-' </tag> </item>
			<item> positive <tag> $._value = '+' </tag> </item>
			<item> plus <tag> $._value = '+' </tag> </item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $natural_number._value: integer -->
	<rule id="natural_number" scope="public">
		<example> zero </example>
		<example> three </example>
		<example> ten </example>
		<example> two hundred and two </example>
		<ruleref uri="#cardinal" />
		<tag> $._value = $$._value; $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $common_natural_number._value: integer -->
	<rule id="common_natural_number">
		<example> a </example>
		<example> an </example>
		<example> one </example>
		<example> two hundred </example>
		<one-of>
			<item>
				<ruleref uri="#natural_number" />
				<tag> $._value = $$._value </tag>
			</item>
			<item> a <tag> $._value = 1 </tag> </item>
			<item> an <tag> $._value = 1 </tag> </item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $floating_point._value: float -->
	<rule id="floating_point" scope="public">
		<example> minus zero point five two </example>
		<example> minus point two </example>
		<example> three decimal zero </example>
		<example> decimal one two three zero zero five </example>
		<example> minus two point twelve </example>
		<item>
			<tag> $._value = '' </tag>
			<item repeat="0-1">
				<ruleref uri="#numeral_sign" />
				<tag> $._value = $$._value </tag>
			</item>
			<item repeat="0-1">
				<ruleref uri="#natural_number" />
				<tag> $._value = $._value + $$._value </tag>
			</item>
			<one-of>
				<item> point </item>
				<item> decimal </item>
			</one-of>
			<item>
				<ruleref uri="#digit_list" />
				<tag> $._value = parseFloat( $._value + "." + $$._value ) </tag>
			</item>
		</item>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- fraction

Can be expressed as either "three over four" or "three fourths". Numerator and denominator both are allowed to be in the range (-1e15, 1e15).
 -->
	<!-- $fraction._value: float -->
	<rule id="fraction" scope="public">
		<example> two quarters </example>
		<example> two and one fourth </example>
		<example> minus three sixteenths </example>
		<example> minus one and three over five </example>
		<tag> sign = 1; whole = 0; numerator = 1; denominator = 0; fraction = 0; </tag>
		<item repeat="0-1">
			<!-- Optional sign-->
			<ruleref uri="#numeral_sign" />
			<tag> sign = ($$._value == "+")? 1: -1 </tag>
		</item>
		<one-of>
			<item>
				<ruleref uri="#natural_number" />
				<tag> numerator = $$._value </tag>
				<one-of>
					<item>
						and
						<tag> whole = numerator; numerator = 1; </tag>
						<one-of>
							<item>
								<ruleref uri="#natural_number" />
								<tag> numerator = $$._value </tag>
								<one-of>
									<item>
										<one-of>
											<item> over </item>
											<item> slash </item>
										</one-of>
										<ruleref uri="#natural_number" />
										<tag> denominator = $$._value </tag>
										<tag> fraction = numerator * 1.0 / denominator </tag>
									</item>
									<item>
										<ruleref uri="#denominator_plural" />
										<tag> denominator = $$._value </tag>
										<tag> fraction = numerator * 1.0 / denominator </tag>
									</item>
								</one-of>
							</item>
							<item>
								one
								<ruleref uri="#denominator_singular" />
								<tag> denominator = $$._value </tag>
								<tag> fraction = numerator * 1.0 / denominator </tag>
							</item>
							<item>
								<ruleref uri="#popular_simple_fractions" />
								<tag> fraction = $$._value </tag>
							</item>
						</one-of>
					</item>
					<item>
						<one-of>
							<item> over </item>
							<item> slash </item>
						</one-of>
						<ruleref uri="#natural_number" />
						<tag> denominator = $$._value </tag>
						<tag> fraction = numerator * 1.0 / denominator </tag>
					</item>
					<item>
						<ruleref uri="#denominator_plural" />
						<tag> denominator = $$._value </tag>
						<tag> fraction = numerator * 1.0 / denominator </tag>
					</item>
				</one-of>
			</item>
			<item>
				one
				<ruleref uri="#denominator_singular" />
				<tag> denominator = $$._value </tag>
				<tag> fraction = numerator * 1.0 / denominator </tag>
		</item>
			<item>
				<ruleref uri="#popular_simple_fractions" />
				<tag> fraction = $$._value </tag>
			</item>
		</one-of>
		<tag> $._value = parseFloat(sign * ( whole + fraction)) </tag>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- denominator_singular

Like an ordinal_2_to_1e15; no "first".
 -->
	<!-- $denominator_singular._value: integer -->
	<rule id="denominator_singular" scope="public">
		<example> second </example>
		<example> nineteenth </example>
		<example> ninetieth </example>
		<example> twenty second </example>
		<example> two hundred and twelfth </example>
		<example> two hundredth </example>
		<example> two thousandth </example>
		<example> nine thousand nine hundredth </example>
		<example> nine thousand nine hundred and ninth </example>
		<example> ninety one thousand nine hundredth </example>
		<example> ninety one million nine hundredth </example>
		<example> nine trillionth </example>
		<example> nine hundred ninety billionth </example>
		<example> one hundred twenty three trillion four hundred and fifty six billion seven hundred eighty nine million twelve thousand three hundred and forty fifth </example>
		<tag> $._value = 0 </tag>
		<one-of>
			<item>
				<ruleref uri="#ordinal_postfix_2_to_90" />
				<tag> $._value = $$._value </tag>
			</item>
			<item>
				<!-- A number [20-90] -->
				<ruleref uri="#tensfrag" />
				<tag> $._value = $$._value * 10 </tag>
				<one-of>
					<item>
						<ruleref uri="#digit_nonzero_ord" />
						<tag> $._value = $._value + $$._value </tag>
					</item>
					<item>
						<item repeat="0-1">
							<ruleref uri="#digit_nonzero" />
							<tag> $._value = $._value + $$._value </tag>
						</item>
						<one-of>
							<item>
								<ruleref uri="#trillion_and_down_ord" />
								<tag> $._value = $._value * 1000000000000 + $$._value </tag>
							</item>
							<item>
								<ruleref uri="#billion_and_down_ord" />
								<tag> $._value = $._value * 1000000000 + $$._value </tag>
							</item>
							<item>
								<ruleref uri="#million_and_down_ord" />
								<tag> $._value = $._value * 1000000 + $$._value </tag>
							</item>
							<item>
								<ruleref uri="#thousand_and_down_ord" />
								<tag> $._value = $._value * 1000 + $$._value </tag>
							</item>
							<item>
								<ruleref uri="#hundred_and_down_ord" />
								<tag> $._value = $._value * 100 + $$._value </tag>
							</item>
						</one-of>
					</item>
				</one-of>
			</item>
			<item>
				<!-- A number [10-19] -->
				<ruleref uri="#teens" />
				<tag> $._value = $$._value </tag>
				<one-of>
					<item>
						<ruleref uri="#trillion_and_down_ord" />
						<tag> $._value = $._value * 1000000000000 + $$._value </tag>
					</item>
					<item>
						<ruleref uri="#billion_and_down_ord" />
						<tag> $._value = $._value * 1000000000 + $$._value </tag>
					</item>
					<item>
						<ruleref uri="#million_and_down_ord" />
						<tag> $._value = $._value * 1000000 + $$._value </tag>
					</item>
					<item>
						<ruleref uri="#thousand_and_down_ord" />
						<tag> $._value = $._value * 1000 + $$._value </tag>
					</item>
					<item>
						<ruleref uri="#hundred_and_down_ord" />
						<tag> $._value = $._value * 100 + $$._value </tag>
					</item>
				</one-of>
			</item>
			<item>
				<ruleref uri="#digit_nonzero" />
				<tag> $._value = $$._value </tag>
				<one-of>
					<item>
						<ruleref uri="#trillion_and_down_ord" />
						<tag> $._value = $._value * 1000000000000 + $$._value </tag>
					</item>
					<item>
						<ruleref uri="#billion_and_down_ord" />
						<tag> $._value = $._value * 1000000000 + $$._value </tag>
					</item>
					<item>
						<ruleref uri="#million_and_down_ord" />
						<tag> $._value = $._value * 1000000 + $$._value </tag>
					</item>
					<item>
						<ruleref uri="#thousand_and_down_ord" />
						<tag> $._value = $._value * 1000 + $$._value </tag>
					</item>
					<item>
						<ruleref uri="#hundred_of_1e15" />
						<tag> $._value = $._value * $$.scale + $$._value </tag>
					</item>
				</one-of>
			</item>
			<item>
			a
			<ruleref uri="#hundred_of_1e15" />
			<tag> $._value = $$.scale + $$._value </tag>
		</item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- denominator_plural 

Like an ordinal_3_to_1e15_plural; no "firsts", "seconds".
 -->
	<!-- $denominator_plural._value: integer -->
	<rule id="denominator_plural" scope="public">
		<example> thirds </example>
		<example> nineteenths </example>
		<example> ninetieths </example>
		<example> twenty seconds </example>
		<example> two hundred and twelfths </example>
		<example> two hundredths </example>
		<example> two thousandths </example>
		<example> nine thousand nine hundredths </example>
		<example> nine thousand nine hundred and ninths </example>
		<example> ninety one thousand nine hundredths </example>
		<example> ninety one million nine hundredths </example>
		<example> nine trillionths </example>
		<example> nine hundred ninety billionths </example>
		<example> one hundred twenty three trillion four hundred and fifty six billion seven hundred eighty nine million twelve thousand three hundred and forty fifths </example>
		<tag> $._value = 0 </tag>
		<one-of>
			<item>
				<ruleref uri="#ordinal_postfix_3_to_90_plural" />
				<tag> $._value = $$._value </tag>
			</item>
			<item>
				<!-- A number [20-90] -->
				<ruleref uri="#tensfrag" />
				<tag> $._value = $$._value * 10 </tag>
				<one-of>
					<item>
						<ruleref uri="#digit_nonzero_ord_plural" />
						<tag> $._value = $._value + $$._value </tag>
					</item>
					<item>
						<item repeat="0-1">
							<ruleref uri="#digit_nonzero" />
							<tag> $._value = $._value + $$._value </tag>
						</item>
						<one-of>
							<item>
								<ruleref uri="#trillion_and_down_ord_plural" />
								<tag> $._value = $._value * 1000000000000 + $$._value </tag>
							</item>
							<item>
								<ruleref uri="#billion_and_down_ord_plural" />
								<tag> $._value = $._value * 1000000000 + $$._value </tag>
							</item>
							<item>
								<ruleref uri="#million_and_down_ord_plural" />
								<tag> $._value = $._value * 1000000 + $$._value </tag>
							</item>
							<item>
								<ruleref uri="#thousand_and_down_ord_plural" />
								<tag> $._value = $._value * 1000 + $$._value </tag>
							</item>
							<item>
								<ruleref uri="#hundred_and_down_ord_plural" />
								<tag> $._value = $._value * 100 + $$._value </tag>
							</item>
						</one-of>
					</item>
				</one-of>
			</item>
			<item>
				<!-- A number [10-19] -->
				<ruleref uri="#teens" />
				<tag> $._value = $$._value </tag>
				<one-of>
					<item>
						<ruleref uri="#trillion_and_down_ord_plural" />
						<tag> $._value = $._value * 1000000000000 + $$._value </tag>
					</item>
					<item>
						<ruleref uri="#billion_and_down_ord_plural" />
						<tag> $._value = $._value * 1000000000 + $$._value </tag>
					</item>
					<item>
						<ruleref uri="#million_and_down_ord_plural" />
						<tag> $._value = $._value * 1000000 + $$._value </tag>
					</item>
					<item>
						<ruleref uri="#thousand_and_down_ord_plural" />
						<tag> $._value = $._value * 1000 + $$._value </tag>
					</item>
					<item>
						<ruleref uri="#hundred_and_down_ord_plural" />
						<tag> $._value = $._value * 100 + $$._value </tag>
					</item>
				</one-of>
			</item>
			<item>
				<ruleref uri="#digit_nonzero" />
				<tag> $._value = $$._value </tag>
				<one-of>
					<item>
						<ruleref uri="#trillion_and_down_ord_plural" />
						<tag> $._value = $._value * 1000000000000 + $$._value </tag>
					</item>
					<item>
						<ruleref uri="#billion_and_down_ord_plural" />
						<tag> $._value = $._value * 1000000000 + $$._value </tag>
					</item>
					<item>
						<ruleref uri="#million_and_down_ord_plural" />
						<tag> $._value = $._value * 1000000 + $$._value </tag>
					</item>
					<item>
						<ruleref uri="#thousand_and_down_ord_plural" />
						<tag> $._value = $._value * 1000 + $$._value </tag>
					</item>
					<item>
						<ruleref uri="#hundred_of_1e15_plural" />
						<tag> $._value = $._value * $$.scale + $$._value </tag>
					</item>
				</one-of>
			</item>
			<item>
			a
			<ruleref uri="#hundred_of_1e15_plural" />
			<tag> $._value = $$.scale + $$._value </tag>
		</item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $popular_simple_fractions._value: float -->
	<rule id="popular_simple_fractions" scope="public">
		<example> a quarter </example>
		<example> two quarters </example>
		<example> three quarters </example>
		<example> one half </example>
		<one-of>
			<item>
				<one-of>
					<item> a </item>
					<item> one </item>
				</one-of>
				<one-of>
					<item> quarter <tag> $._value = 0.25 </tag> </item>
					<item> half <tag> $._value = 0.5 </tag> </item>
				</one-of>
			</item>
			<item>
			two quarters 
			<tag> $._value = 0.5 </tag>
		</item>
			<item> 
			three quarters
			<tag> $._value = 0.75 </tag>
		</item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $tensfrag._value: integer -->
	<rule id="tensfrag" scope="public">
		<example> twenty </example>
		<example> thirty </example>
		<example> ninety </example>
		<one-of>
			<item> twenty <tag> $._value = 2 </tag> </item>
			<item> thirty <tag> $._value = 3 </tag></item>
			<item> forty <tag> $._value = 4 </tag></item>
			<item> fifty <tag> $._value = 5 </tag></item>
			<item> sixty <tag> $._value = 6 </tag></item>
			<item> seventy <tag> $._value = 7 </tag></item>
			<item> eighty <tag> $._value = 8 </tag></item>
			<item> ninety <tag> $._value = 9 </tag></item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $onesfrag._value: integer -->
	<rule id="onesfrag" scope="public">
		<one-of>
			<item>
				<ruleref uri="#digit_nonzero" />
			</item>
			<item>
				<ruleref uri="#teens" />
			</item>
		</one-of>
		<tag> $ = $$ </tag>
	</rule>
	<!-- $teens._value: integer -->
	<rule id="teens" scope="public">
		<example> ten </example>
		<example> eleven </example>
		<example> nineteen </example>
		<one-of>
			<item> ten <tag> $._value = 10 </tag> </item>
			<item> eleven <tag> $._value = 11 </tag> </item>
			<item> twelve <tag> $._value = 12 </tag> </item>
			<item> thirteen <tag> $._value = 13 </tag> </item>
			<item> fourteen <tag> $._value = 14 </tag> </item>
			<item> fifteen <tag> $._value = 15 </tag> </item>
			<item> sixteen <tag> $._value = 16 </tag> </item>
			<item> seventeen <tag> $._value = 17 </tag> </item>
			<item> eighteen <tag> $._value = 18 </tag> </item>
			<item> nineteen <tag> $._value = 19 </tag> </item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- number

Either an integer or a floating number.
 -->
	<!-- $number._value : float -->
	<rule id="number" scope="public">
		<example> one point three </example>
		<example> one point three hundred million </example>
		<example> a quarter million </example>
		<tag> whole = 0; sign = 1; numerator = 1; </tag>
		<item repeat="0-1">
			<!-- Optional sign-->
			<ruleref uri="#numeral_sign" />
			<tag> sign = ($$._value == "+")? 1: -1 </tag>
		</item>
		<one-of>
			<item>
				<ruleref uri="#natural_number" />
				<tag> numerator = $$._value; whole = numerator; </tag>
				<one-of>
					<item>
						and
						<tag> whole = numerator; numerator = 1; </tag>
						<one-of>
							<item>
								<ruleref uri="#natural_number" />
								<tag> numerator = $$._value </tag>
								<one-of>
									<item>
										<one-of>
											<item> over </item>
											<item> slash </item>
										</one-of>
										<ruleref uri="#natural_number" />
										<tag> denominator = $$._value </tag>
										<tag> fraction = numerator * 1.0 / denominator </tag>
									</item>
									<item>
										<ruleref uri="#denominator_plural" />
										<tag> denominator = $$._value </tag>
										<tag> fraction = numerator * 1.0 / denominator </tag>
									</item>
								</one-of>
							</item>
							<item>
								one
								<ruleref uri="#denominator_singular" />
								<tag> denominator = $$._value </tag>
								<tag> fraction = numerator * 1.0 / denominator </tag>
							</item>
							<item>
								<ruleref uri="#popular_simple_fractions" />
								<tag> fraction = $$._value </tag>
							</item>
						</one-of>
					</item>
					<item>
						<one-of>
							<item> over </item>
							<item> slash </item>
						</one-of>
						<ruleref uri="#natural_number" />
						<tag> denominator = $$._value </tag>
						<tag> fraction = numerator * 1.0 / denominator </tag>
					</item>
					<item>
						<ruleref uri="#denominator_plural" />
						<tag> denominator = $$._value </tag>
						<tag> fraction = numerator * 1.0 / denominator </tag>
					</item>
					<item>
						<one-of>
							<item> point </item>
							<item> decimal </item>
						</one-of>
						<ruleref uri="#digit_list" />
						<tag> whole = numerator; fraction = parseFloat( "0." + $$._value); </tag>
					</item>
					<item>
						<tag> numerator; fraction = 0.0; </tag>
					</item>
				</one-of>
			</item>
			<item>
				one
				<ruleref uri="#denominator_singular" />
				<tag> denominator = $$._value </tag>
				<tag> fraction = numerator * 1.0 / denominator </tag>
		</item>
			<item>
				<ruleref uri="#popular_simple_fractions" />
				<tag> fraction = $$._value </tag>
			</item>
			<item>
				<one-of>
					<item> point </item>
					<item> decimal </item>
				</one-of>
				<ruleref uri="#digit_list" />
				<tag> fraction = parseFloat( "0." + $$._value); </tag>
			</item>
		</one-of>
		<tag> $._value = sign * ( whole + fraction) </tag>
		<item repeat="0-2">
			<ruleref uri="#numeral_units" />
			<tag> $._value = $._value * $$._value </tag>
		</item>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $common_number_0_to_99._value: integer -->
	<rule id="common_number_0_to_99">
		<example> zero </example>
		<example> one </example>
		<example> eleven </example>
		<example> twenty </example>
		<example> ninety nine </example>
		<one-of>
			<item> zero <tag> $._value = 0 </tag> </item>
			<item>
				<!-- A number between 1 and 19 -->
				<ruleref uri="#onesfrag" />
				<tag> $._value = $$._value </tag>
			</item>
			<item>
				<!-- A "tens" number (20, 30,...) -->
				<ruleref uri="#tensfrag" />
				<tag> $._value = $$._value * 10 </tag>
				<item repeat="0-1">
					<!-- Can be followed by a nonzero digit -->
					<ruleref uri="#digit_nonzero" />
					<tag> $._value = $._value + $$._value </tag>
				</item>
			</item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $common_number_0_to_99a._value: integer -->
	<rule id="common_number_0_to_99a">
		<example> a </example>
		<example> an </example>
		<example> zero </example>
		<example> one </example>
		<example> eleven </example>
		<example> twenty </example>
		<example> ninety nine </example>
		<one-of>
			<item> a <tag> $._value = 1 </tag> </item>
			<item> an <tag> $._value = 1 </tag> </item>
			<item>
				<ruleref uri="#common_number_0_to_99" />
				<tag> $._value = $$._value </tag>
			</item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $numeral_units._value: integer -->
	<rule id="numeral_units">
		<example> trillions </example>
		<example> million </example>
		<example> hundreds </example>
		<one-of>
			<item> trillion <tag> $._value = 1000000000000 </tag> </item>
			<item> trillions <tag> $._value = 1000000000000 </tag> </item>
			<item> billion <tag> $._value = 1000000000 </tag> </item>
			<item> billions <tag> $._value = 1000000000 </tag> </item>
			<item> million <tag> $._value = 1000000 </tag> </item>
			<item> millions <tag> $._value = 1000000 </tag> </item>
			<item> thousand <tag> $._value = 1000 </tag> </item>
			<item> thousands <tag> $._value = 1000 </tag> </item>
			<item> hundred <tag> $._value = 100 </tag> </item>
			<item> hundreds <tag> $._value = 100 </tag> </item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- Cardinals
 -->
	<!-- cardinal

A cardinal is defined here as a number in [0, 1e15), properly 
formed (not spoken digit by digit).
 -->
	<!-- $cardinal._value: integer -->
	<rule id="cardinal" scope="public">
		<one-of>
			<item> zero <tag> $._value = 0; </tag> </item>
			<item>
				<ruleref uri="#cardinal_1_to_1e15" />
				<tag> $ = $$ </tag>
			</item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- cardinal_smaller_than_one_million

Natural numbers in [0,1e6). This is built for the NaturalNumber application control.
 -->
	<!-- $cardinal_smaller_than_one_million._value: integer -->
	<rule id="cardinal_smaller_than_one_million" scope="public">
		<example> zero </example>
		<example> eleven </example>
		<example> two hundred and thirteen </example>
		<example> sixty five hundred and twelve </example>
		<example> nine hundred and ninety nine thousand two hundred and fifty </example>
		<one-of>
			<item> zero <tag> $._value = 0; </tag> </item>
			<item>
				<ruleref uri="#cardinal_1_to_1e6" />
				<tag> $ = $$ </tag>
			</item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- cardinal_999

This is defined as a number in [0,1000).
 -->
	<!-- $cardinal_999._value: integer -->
	<rule id="cardinal_999" scope="public">
		<one-of>
			<item> zero <tag> $._value = 0; </tag> </item>
			<item>
				<ruleref uri="#cardinal_1_to_1e3" />
				<tag> $ = $$ </tag>
			</item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- cardinal_1_to_1e15 [1,1e15)
 -->
	<!-- $cardinal_1_to_1e15._value: integer -->
	<rule id="cardinal_1_to_1e15" scope="public">
		<example> one </example>
		<example> nine hundred and ninety nine trillion nine hundred and ninety nine billion nine hundred and ninety nine million nine hundred and ninety nine thousand nine hundred and ninety nine </example>
		<one-of>
			<item>
				<ruleref uri="#prefix_1_to_9_and_100_to_999" />
				<tag> $._value = $$._value </tag>
				<one-of>
					<item>
						<ruleref uri="#trillion_and_down" />
						<tag> $._value = $._value * 1000000000000 + $$._value </tag>
					</item>
					<item>
						<ruleref uri="#billion_and_down" />
						<tag> $._value = $._value * 1000000000 + $$._value </tag>
					</item>
					<item>
						<ruleref uri="#million_and_down" />
						<tag> $._value = $._value * 1000000 + $$._value </tag>
					</item>
					<item>
						<ruleref uri="#thousand_and_down" />
						<tag> $._value = $._value * 1000 + $$._value </tag>
					</item>
					<item></item>
				</one-of>
			</item>
			<item>
				<ruleref uri="#cardinal_10_to_99" />
				<tag> $._value = $$._value </tag>
				<one-of>
					<item>
						<ruleref uri="#trillion_and_down" />
						<tag> $._value = $._value * 1000000000000 + $$._value </tag>
					</item>
					<item>
						<ruleref uri="#billion_and_down" />
						<tag> $._value = $._value * 1000000000 + $$._value </tag>
					</item>
					<item>
						<ruleref uri="#million_and_down" />
						<tag> $._value = $._value * 1000000 + $$._value </tag>
					</item>
					<item>
						<ruleref uri="#thousand_and_down" />
						<tag> $._value = $._value * 1000 + $$._value </tag>
					</item>
					<item>
						<ruleref uri="#hundred_and_down" />
						<tag> $._value = $._value * 100 + $$._value </tag>
					</item>
					<item></item>
				</one-of>
			</item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- cardinal_1_to_1e12 [1,1e12)
 -->
	<!-- $cardinal_1_to_1e12._value: integer -->
	<rule id="cardinal_1_to_1e12" scope="public">
		<example> one </example>
		<example> nine hundred and ninety nine billion nine hundred and ninety nine million nine hundred and ninety nine thousand nine hundred and ninety nine </example>
		<one-of>
			<item>
				<ruleref uri="#prefix_1_to_9_and_100_to_999" />
				<tag> $._value = $$._value </tag>
				<one-of>
					<item>
						<ruleref uri="#billion_and_down" />
						<tag> $._value = $._value * 1000000000 + $$._value </tag>
					</item>
					<item>
						<ruleref uri="#million_and_down" />
						<tag> $._value = $._value * 1000000 + $$._value </tag>
					</item>
					<item>
						<ruleref uri="#thousand_and_down" />
						<tag> $._value = $._value * 1000 + $$._value </tag>
					</item>
					<item></item>
				</one-of>
			</item>
			<item>
				<ruleref uri="#cardinal_10_to_99" />
				<tag> $._value = $$._value </tag>
				<one-of>
					<item>
						<ruleref uri="#billion_and_down" />
						<tag> $._value = $._value * 1000000000 + $$._value </tag>
					</item>
					<item>
						<ruleref uri="#million_and_down" />
						<tag> $._value = $._value * 1000000 + $$._value </tag>
					</item>
					<item>
						<ruleref uri="#thousand_and_down" />
						<tag> $._value = $._value * 1000 + $$._value </tag>
					</item>
					<item>
						<ruleref uri="#hundred_and_down" />
						<tag> $._value = $._value * 100 + $$._value </tag>
					</item>
					<item></item>
				</one-of>
			</item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- cardinal_1_to_1e9 [1,1e9)
 -->
	<!-- $cardinal_1_to_1e9._value: integer -->
	<rule id="cardinal_1_to_1e9" scope="public">
		<example> one </example>
		<example> nine hundred and ninety nine million nine hundred and ninety nine thousand nine hundred and ninety nine </example>
		<one-of>
			<item>
				<ruleref uri="#prefix_1_to_9_and_100_to_999" />
				<tag> $._value = $$._value </tag>
				<one-of>
					<item>
						<ruleref uri="#million_and_down" />
						<tag> $._value = $._value * 1000000 + $$._value </tag>
					</item>
					<item>
						<ruleref uri="#thousand_and_down" />
						<tag> $._value = $._value * 1000 + $$._value </tag>
					</item>
					<item></item>
				</one-of>
			</item>
			<item>
				<ruleref uri="#cardinal_10_to_99" />
				<tag> $._value = $$._value </tag>
				<one-of>
					<item>
						<ruleref uri="#million_and_down" />
						<tag> $._value = $._value * 1000000 + $$._value </tag>
					</item>
					<item>
						<ruleref uri="#thousand_and_down" />
						<tag> $._value = $._value * 1000 + $$._value </tag>
					</item>
					<item>
						<ruleref uri="#hundred_and_down" />
						<tag> $._value = $._value * 100 + $$._value </tag>
					</item>
					<item></item>
				</one-of>
			</item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- cardinal_1_to_1e6 [1,1e6)
 -->
	<!-- $cardinal_1_to_1e6._value: integer -->
	<rule id="cardinal_1_to_1e6" scope="public">
		<example> one </example>
		<example> nine hundred and ninety nine thousand nine hundred and ninety nine </example>
		<one-of>
			<item>
				<ruleref uri="#prefix_1_to_9_and_100_to_999" />
				<tag> $._value = $$._value </tag>
				<item repeat="0-1">
					<ruleref uri="#thousand_and_down" />
					<tag> $._value = $._value * 1000 + $$._value </tag>
				</item>
			</item>
			<item>
				<ruleref uri="#cardinal_10_to_99" />
				<tag> $._value = $$._value </tag>
				<one-of>
					<item>
						<ruleref uri="#thousand_and_down" />
						<tag> $._value = $._value * 1000 + $$._value </tag>
					</item>
					<item>
						<ruleref uri="#hundred_and_down" />
						<tag> $._value = $._value * 100 + $$._value </tag>
					</item>
					<item></item>
				</one-of>
			</item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- cardinal_1_to_1e3
 -->
	<!-- $cardinal_1_to_1e3._value: integer -->
	<rule id="cardinal_1_to_1e3" scope="public">
		<example> one </example>
		<example> two </example>
		<example> nineteen </example>
		<example> ninety </example>
		<example> twenty two </example>
		<example> two hundred and twelve </example>
		<tag> $._value = 0 </tag>
		<one-of>
			<item>
				<ruleref uri="#prefix_1_to_9_and_100_to_999" />
				<tag> $._value = $$._value </tag>
			</item>
			<item>
				<!-- A number [10-99] -->
				<ruleref uri="#cardinal_10_to_99" />
				<tag> $._value = $$._value </tag>
			</item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $prefix_1_to_9_and_100_to_999._value : integer ([1-9],[100-999]) -->
	<rule id="prefix_1_to_9_and_100_to_999">
		<one-of>
			<item>
				<ruleref uri="#digit_nonzero" />
				<tag> $._value = $$._value </tag>
				<item repeat="0-1">
					<ruleref uri="#hundred_and_down" />
					<tag> $._value = $._value * 100 + $$._value </tag>
				</item>
			</item>
			<item>
			a
			<ruleref uri="#hundred_and_down" />
			<tag> $._value = 100 + $$._value </tag>
		</item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $trillion_and_down: integer ([0-999999999999]) -->
	<rule id="trillion_and_down">
	trillion
	<tag> $._value = 0 </tag>
	<one-of>
			<item>
				<ruleref uri="#cardinal_1_to_1e12" />
				<tag> $._value = $$._value </tag>
			</item>
			<item>
			and
			<ruleref uri="#cardinal_1_to_99" />
			<tag> $._value = $$._value </tag>
		</item>
			<item></item>
		</one-of>
	<tag> $._attributes.text = $recognized.text; </tag>
</rule>
	<!-- $billion_and_down: integer ([0-999999999]) -->
	<rule id="billion_and_down">
	billion
	<tag> $._value = 0 </tag>
	<one-of>
			<item>
				<ruleref uri="#cardinal_1_to_1e9" />
				<tag> $._value = $$._value </tag>
			</item>
			<item>
			and
			<ruleref uri="#cardinal_1_to_99" />
			<tag> $._value = $$._value </tag>
		</item>
			<item></item>
		</one-of>
	<tag> $._attributes.text = $recognized.text; </tag>
</rule>
	<!-- $million_and_down: integer ([0-999999]) -->
	<rule id="million_and_down">
	million
	<tag> $._value = 0 </tag>
	<one-of>
			<item>
				<ruleref uri="#cardinal_1_to_1e6" />
				<tag> $._value = $$._value </tag>
			</item>
			<item>
			and
			<ruleref uri="#cardinal_1_to_99" />
			<tag> $._value = $$._value </tag>
		</item>
			<item></item>
		</one-of>
	<tag> $._attributes.text = $recognized.text; </tag>
</rule>
	<!-- $thousand_and_down: integer ([0-999]) -->
	<rule id="thousand_and_down">
	thousand
	<tag> $._value = 0 </tag>
	<one-of>
			<item>
				<ruleref uri="#cardinal_1_to_1e3" />
				<tag> $._value = $$._value </tag>
			</item>
			<item>
			and
			<ruleref uri="#cardinal_1_to_99" />
			<tag> $._value = $$._value </tag>
		</item>
			<item></item>
		</one-of>
	<tag> $._attributes.text = $recognized.text; </tag>
</rule>
	<!-- $hundred_and_down: integer ([0-99]) -->
	<rule id="hundred_and_down">
	hundred
	<tag> $._value = 0 </tag>
	<item repeat="0-1">
			<item repeat="0-1"> and </item>
			<ruleref uri="#cardinal_1_to_99" />
			<tag> $._value = $$._value </tag>
		</item>
	<tag> $._attributes.text = $recognized.text; </tag>
</rule>
	<!-- $cardinal_1_to_99._value: integer -->
	<rule id="cardinal_1_to_99">
		<example> one </example>
		<example> two </example>
		<example> nineteen </example>
		<example> ninety </example>
		<example> twenty two </example>
		<one-of>
			<item>
				<ruleref uri="#cardinal_10_to_99" />
			</item>
			<item>
				<ruleref uri="#digit_nonzero" />
			</item>
		</one-of>
		<tag> $ = $$ </tag>
	</rule>
	<!-- $cardinal_10_to_99._value: integer -->
	<rule id="cardinal_10_to_99">
		<example> eleven </example>
		<example> nineteen </example>
		<example> ninety </example>
		<example> twenty two </example>
		<tag> $._value = 0 </tag>
		<one-of>
			<item>
				<ruleref uri="#tensfrag" />
				<tag> $._value = $._value + $$._value * 10 </tag>
				<item repeat="0-1">
					<ruleref uri="#digit_nonzero" />
					<tag> $._value = $._value + $$._value </tag>
				</item>
			</item>
			<item>
				<ruleref uri="#teens" />
				<tag> $._value = $._value + $$._value </tag>
			</item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- Digits and Letters
 -->
	<!--$teens_and_tens_ord._value: integer -->
	<rule id="teens_and_tens_ord">
		<example> tenth </example>
		<example> nineteenth </example>
		<example> ninetieth </example>
		<one-of>
			<item> tenth <tag> $._value = 10 </tag> </item>
			<item> eleventh <tag> $._value = 11 </tag> </item>
			<item> twelfth <tag> $._value = 12 </tag> </item>
			<item> thirteenth <tag> $._value = 13 </tag> </item>
			<item> fourteenth <tag> $._value = 14 </tag> </item>
			<item> fifteenth <tag> $._value = 15 </tag> </item>
			<item> sixteenth <tag> $._value = 16 </tag> </item>
			<item> seventeenth <tag> $._value = 17 </tag> </item>
			<item> eighteenth <tag> $._value = 18 </tag> </item>
			<item> nineteenth <tag> $._value = 19 </tag> </item>
			<item> twentieth <tag> $._value = 20 </tag> </item>
			<item> thirtieth <tag> $._value = 30 </tag> </item>
			<item> fortieth <tag> $._value = 40 </tag> </item>
			<item> fiftieth <tag> $._value = 50 </tag> </item>
			<item> sixtieth <tag> $._value = 60 </tag> </item>
			<item> seventieth <tag> $._value = 70 </tag> </item>
			<item> eightieth <tag> $._value = 80 </tag> </item>
			<item> ninetieth <tag> $._value = 90 </tag> </item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!--$teens_and_tens_ord_plural._value: integer -->
	<rule id="teens_and_tens_ord_plural">
		<example> tenths </example>
		<example> nineteenths </example>
		<example> ninetieths </example>
		<one-of>
			<item> tenths <tag> $._value = 10 </tag> </item>
			<item> elevenths <tag> $._value = 11 </tag> </item>
			<item> twelfths <tag> $._value = 12 </tag> </item>
			<item> thirteenths <tag> $._value = 13 </tag> </item>
			<item> fourteenths <tag> $._value = 14 </tag> </item>
			<item> fifteenths <tag> $._value = 15 </tag> </item>
			<item> sixteenths <tag> $._value = 16 </tag> </item>
			<item> seventeenths <tag> $._value = 17 </tag> </item>
			<item> eighteenths <tag> $._value = 18 </tag> </item>
			<item> nineteenths <tag> $._value = 19 </tag> </item>
			<item> twentieths <tag> $._value = 20 </tag> </item>
			<item> thirtieths <tag> $._value = 30 </tag> </item>
			<item> fortieths <tag> $._value = 40 </tag> </item>
			<item> fiftieths <tag> $._value = 50 </tag> </item>
			<item> sixtieths <tag> $._value = 60 </tag> </item>
			<item> seventieths <tag> $._value = 70 </tag> </item>
			<item> eightieths <tag> $._value = 80 </tag> </item>
			<item> ninetieths <tag> $._value = 90 </tag> </item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- Ordinals
 -->
	<!-- ordinal

An ordinal is defined here as a number in [0, 1e15), properly formed (not spoken digit by digit).
 -->
	<rule id="ordinal" scope="public">
		<ruleref uri="#ordinal_1_to_1e15" />
		<tag> $ = $$ </tag>
	</rule>
	<!--$digit_nonzero_ord._value: integer -->
	<rule id="digit_nonzero_ord">
		<example> first </example>
		<example> ninth </example>
		<one-of>
			<item> first <tag> $._value = 1 </tag> </item>
			<item> second <tag> $._value = 2 </tag> </item>
			<item> third <tag> $._value = 3 </tag> </item>
			<item> fourth <tag> $._value = 4 </tag> </item>
			<item> fifth <tag> $._value = 5 </tag> </item>
			<item> sixth <tag> $._value = 6 </tag> </item>
			<item> seventh <tag> $._value = 7 </tag> </item>
			<item> eighth <tag> $._value = 8 </tag> </item>
			<item> ninth <tag> $._value = 9 </tag> </item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!--$digit_nonzero_ord_plural._value: integer -->
	<rule id="digit_nonzero_ord_plural">
		<example> firsts </example>
		<example> ninths </example>
		<one-of>
			<item> firsts <tag> $._value = 1 </tag> </item>
			<item> seconds <tag> $._value = 2 </tag> </item>
			<item> thirds <tag> $._value = 3 </tag> </item>
			<item> fourths <tag> $._value = 4 </tag> </item>
			<item> fifths <tag> $._value = 5 </tag> </item>
			<item> sixths <tag> $._value = 6 </tag> </item>
			<item> sevenths <tag> $._value = 7 </tag> </item>
			<item> eighths <tag> $._value = 8 </tag> </item>
			<item> ninths <tag> $._value = 9 </tag> </item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- ordinal_1_to_1e15
 -->
	<!-- $ordinal_1_to_1e15._value: integer -->
	<rule id="ordinal_1_to_1e15" scope="public">
		<example> first </example>
		<example> second </example>
		<example> nineteenth </example>
		<example> ninetieth </example>
		<example> twenty second </example>
		<example> two hundred and twelfth </example>
		<example> two hundredth </example>
		<example> two thousandth </example>
		<example> nine thousand nine hundredth </example>
		<example> nine thousand nine hundred and ninth </example>
		<example> ninety one thousand nine hundredth </example>
		<example> ninety one million nine hundredth </example>
		<example> nine trillionth </example>
		<example> nine hundred ninety billionth </example>
		<example> one hundred twenty three trillion four hundred and fifty six billion seven hundred eighty nine million twelve thousand three hundred and forty fifth </example>
		<tag> $._value = 0 </tag>
		<one-of>
			<item>
			first
			<tag> $._value = 1 </tag>
		</item>
			<item>
				<ruleref uri="#denominator_singular" />
				<tag> $._value = $$._value </tag>
			</item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- ordinal_1_to_1e12
 -->
	<!-- $ordinal_1_to_1e12._value: integer -->
	<rule id="ordinal_1_to_1e12" scope="public">
		<example> first </example>
		<example> second </example>
		<example> nineteenth </example>
		<example> ninetieth </example>
		<example> twenty second </example>
		<example> two hundred and twelfth </example>
		<example> two hundredth </example>
		<example> two thousandth </example>
		<example> nine thousand nine hundredth </example>
		<example> nine thousand nine hundred and ninth </example>
		<example> ninety one thousand nine hundredth </example>
		<example> ninety one million nine hundredth </example>
		<example> nine millionth </example>
		<example> nine hundred ninety billionth </example>
		<tag> $._value = 0 </tag>
		<one-of>
			<item>
				<ruleref uri="#ordinal_postfix_1_to_90" />
				<tag> $._value = $$._value </tag>
			</item>
			<item>
				<!-- A number [20-90] -->
				<ruleref uri="#tensfrag" />
				<tag> $._value = $$._value * 10 </tag>
				<one-of>
					<item>
						<ruleref uri="#digit_nonzero_ord" />
						<tag> $._value = $._value + $$._value </tag>
					</item>
					<item>
						<item repeat="0-1">
							<ruleref uri="#digit_nonzero" />
							<tag> $._value = $._value + $$._value </tag>
						</item>
						<one-of>
							<item>
								<ruleref uri="#billion_and_down_ord" />
								<tag> $._value = $._value * 1000000000 + $$._value </tag>
							</item>
							<item>
								<ruleref uri="#million_and_down_ord" />
								<tag> $._value = $._value * 1000000 + $$._value </tag>
							</item>
							<item>
								<ruleref uri="#thousand_and_down_ord" />
								<tag> $._value = $._value * 1000 + $$._value </tag>
							</item>
							<item>
								<ruleref uri="#hundred_and_down_ord" />
								<tag> $._value = $._value * 100 + $$._value </tag>
							</item>
						</one-of>
					</item>
				</one-of>
			</item>
			<item>
				<!-- A number [10-19] -->
				<ruleref uri="#teens" />
				<tag> $._value = $$._value </tag>
				<one-of>
					<item>
						<ruleref uri="#billion_and_down_ord" />
						<tag> $._value = $._value * 1000000000 + $$._value </tag>
					</item>
					<item>
						<ruleref uri="#million_and_down_ord" />
						<tag> $._value = $._value * 1000000 + $$._value </tag>
					</item>
					<item>
						<ruleref uri="#thousand_and_down_ord" />
						<tag> $._value = $._value * 1000 + $$._value </tag>
					</item>
					<item>
						<ruleref uri="#hundred_and_down_ord" />
						<tag> $._value = $._value * 100 + $$._value </tag>
					</item>
				</one-of>
			</item>
			<item>
				<ruleref uri="#digit_nonzero" />
				<tag> $._value = $$._value </tag>
				<one-of>
					<item>
						<ruleref uri="#billion_and_down_ord" />
						<tag> $._value = $._value * 1000000000 + $$._value </tag>
					</item>
					<item>
						<ruleref uri="#million_and_down_ord" />
						<tag> $._value = $._value * 1000000 + $$._value </tag>
					</item>
					<item>
						<ruleref uri="#thousand_and_down_ord" />
						<tag> $._value = $._value * 1000 + $$._value </tag>
					</item>
					<item>
						<ruleref uri="#hundred_of_1e12" />
						<tag> $._value = $._value * $$.scale + $$._value </tag>
					</item>
				</one-of>
			</item>
			<item>
			a
			<ruleref uri="#hundred_of_1e12" />
			<tag> $._value = $$.scale + $$._value </tag>
		</item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- ordinal_1_to_1e12_plural
 -->
	<!-- $ordinal_1_to_1e12_plural._value: integer -->
	<rule id="ordinal_1_to_1e12_plural" scope="public">
		<example> firsts </example>
		<example> thirds </example>
		<example> nineteenths </example>
		<example> ninetieths </example>
		<example> twenty seconds </example>
		<example> two hundred and twelfths </example>
		<example> two hundredths </example>
		<example> two thousandths </example>
		<example> nine thousand nine hundredths </example>
		<example> nine thousand nine hundred and ninths </example>
		<example> ninety one thousand nine hundredths </example>
		<example> ninety one million nine hundredths </example>
		<example> nine millionths </example>
		<example> nine hundred ninety billionths </example>
		<tag> $._value = 0 </tag>
		<one-of>
			<item>
				<ruleref uri="#ordinal_postfix_1_to_90_plural" />
				<tag> $._value = $$._value </tag>
			</item>
			<item>
				<!-- A number [20-90] -->
				<ruleref uri="#tensfrag" />
				<tag> $._value = $$._value * 10 </tag>
				<one-of>
					<item>
						<ruleref uri="#digit_nonzero_ord_plural" />
						<tag> $._value = $._value + $$._value </tag>
					</item>
					<item>
						<item repeat="0-1">
							<ruleref uri="#digit_nonzero" />
							<tag> $._value = $._value + $$._value </tag>
						</item>
						<one-of>
							<item>
								<ruleref uri="#billion_and_down_ord_plural" />
								<tag> $._value = $._value * 1000000000 + $$._value </tag>
							</item>
							<item>
								<ruleref uri="#million_and_down_ord_plural" />
								<tag> $._value = $._value * 1000000 + $$._value </tag>
							</item>
							<item>
								<ruleref uri="#thousand_and_down_ord_plural" />
								<tag> $._value = $._value * 1000 + $$._value </tag>
							</item>
							<item>
								<ruleref uri="#hundred_and_down_ord_plural" />
								<tag> $._value = $._value * 100 + $$._value </tag>
							</item>
						</one-of>
					</item>
				</one-of>
			</item>
			<item>
				<!-- A number [10-19] -->
				<ruleref uri="#teens" />
				<tag> $._value = $$._value </tag>
				<one-of>
					<item>
						<ruleref uri="#billion_and_down_ord_plural" />
						<tag> $._value = $._value * 1000000000 + $$._value </tag>
					</item>
					<item>
						<ruleref uri="#million_and_down_ord_plural" />
						<tag> $._value = $._value * 1000000 + $$._value </tag>
					</item>
					<item>
						<ruleref uri="#thousand_and_down_ord_plural" />
						<tag> $._value = $._value * 1000 + $$._value </tag>
					</item>
					<item>
						<ruleref uri="#hundred_and_down_ord_plural" />
						<tag> $._value = $._value * 100 + $$._value </tag>
					</item>
				</one-of>
			</item>
			<item>
				<ruleref uri="#digit_nonzero" />
				<tag> $._value = $$._value </tag>
				<one-of>
					<item>
						<ruleref uri="#billion_and_down_ord_plural" />
						<tag> $._value = $._value * 1000000000 + $$._value </tag>
					</item>
					<item>
						<ruleref uri="#million_and_down_ord_plural" />
						<tag> $._value = $._value * 1000000 + $$._value </tag>
					</item>
					<item>
						<ruleref uri="#thousand_and_down_ord_plural" />
						<tag> $._value = $._value * 1000 + $$._value </tag>
					</item>
					<item>
						<ruleref uri="#hundred_of_1e12_plural" />
						<tag> $._value = $._value * $$.scale + $$._value </tag>
					</item>
				</one-of>
			</item>
			<item>
			a
			<ruleref uri="#hundred_of_1e12_plural" />
			<tag> $._value = $$.scale + $$._value </tag>
		</item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- ordinal_1_to_1e9
 -->
	<!-- $ordinal_1_to_1e9._value: integer -->
	<rule id="ordinal_1_to_1e9" scope="public">
		<example> first </example>
		<example> second </example>
		<example> nineteenth </example>
		<example> ninetieth </example>
		<example> twenty second </example>
		<example> two hundred and twelfth </example>
		<example> two hundredth </example>
		<example> two thousandth </example>
		<example> nine thousand nine hundredth </example>
		<example> nine thousand nine hundred and ninth </example>
		<example> ninety one thousand nine hundredth </example>
		<example> ninety one million nine hundredth </example>
		<example> nine millionth </example>
		<tag> $._value = 0 </tag>
		<one-of>
			<item>
				<ruleref uri="#ordinal_postfix_1_to_90" />
				<tag> $._value = $$._value </tag>
			</item>
			<item>
				<!-- A number [20-90] -->
				<ruleref uri="#tensfrag" />
				<tag> $._value = $$._value * 10 </tag>
				<one-of>
					<item>
						<ruleref uri="#digit_nonzero_ord" />
						<tag> $._value = $._value + $$._value </tag>
					</item>
					<item>
						<item repeat="0-1">
							<ruleref uri="#digit_nonzero" />
							<tag> $._value = $._value + $$._value </tag>
						</item>
						<one-of>
							<item>
								<ruleref uri="#million_and_down_ord" />
								<tag> $._value = $._value * 1000000 + $$._value </tag>
							</item>
							<item>
								<ruleref uri="#thousand_and_down_ord" />
								<tag> $._value = $._value * 1000 + $$._value </tag>
							</item>
							<item>
								<ruleref uri="#hundred_and_down_ord" />
								<tag> $._value = $._value * 100 + $$._value </tag>
							</item>
						</one-of>
					</item>
				</one-of>
			</item>
			<item>
				<!-- A number [10-19] -->
				<ruleref uri="#teens" />
				<tag> $._value = $$._value </tag>
				<one-of>
					<item>
						<ruleref uri="#million_and_down_ord" />
						<tag> $._value = $._value * 1000000 + $$._value </tag>
					</item>
					<item>
						<ruleref uri="#thousand_and_down_ord" />
						<tag> $._value = $._value * 1000 + $$._value </tag>
					</item>
					<item>
						<ruleref uri="#hundred_and_down_ord" />
						<tag> $._value = $._value * 100 + $$._value </tag>
					</item>
				</one-of>
			</item>
			<item>
				<ruleref uri="#digit_nonzero" />
				<tag> $._value = $$._value </tag>
				<one-of>
					<item>
						<ruleref uri="#million_and_down_ord" />
						<tag> $._value = $._value * 1000000 + $$._value </tag>
					</item>
					<item>
						<ruleref uri="#thousand_and_down_ord" />
						<tag> $._value = $._value * 1000 + $$._value </tag>
					</item>
					<item>
						<ruleref uri="#hundred_of_1e9" />
						<tag> $._value = $._value * $$.scale + $$._value </tag>
					</item>
				</one-of>
			</item>
			<item>
			a
			<ruleref uri="#hundred_of_1e9" />
			<tag> $._value = $$.scale + $$._value </tag>
		</item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- ordinal_1_to_1e9_plural
 -->
	<!-- $ordinal_1_to_1e9_plural._value: integer -->
	<rule id="ordinal_1_to_1e9_plural" scope="public">
		<example> firsts </example>
		<example> thirds </example>
		<example> nineteenths </example>
		<example> ninetieths </example>
		<example> twenty seconds </example>
		<example> two hundred and twelfths </example>
		<example> two hundredths </example>
		<example> two thousandths </example>
		<example> nine thousand nine hundredths </example>
		<example> nine thousand nine hundred and ninths </example>
		<example> ninety one thousand nine hundredths </example>
		<example> ninety one million nine hundredths </example>
		<example> nine millionths </example>
		<tag> $._value = 0 </tag>
		<one-of>
			<item>
				<ruleref uri="#ordinal_postfix_1_to_90_plural" />
				<tag> $._value = $$._value </tag>
			</item>
			<item>
				<!-- A number [20-90] -->
				<ruleref uri="#tensfrag" />
				<tag> $._value = $$._value * 10 </tag>
				<one-of>
					<item>
						<ruleref uri="#digit_nonzero_ord_plural" />
						<tag> $._value = $._value + $$._value </tag>
					</item>
					<item>
						<item repeat="0-1">
							<ruleref uri="#digit_nonzero" />
							<tag> $._value = $._value + $$._value </tag>
						</item>
						<one-of>
							<item>
								<ruleref uri="#million_and_down_ord_plural" />
								<tag> $._value = $._value * 1000000 + $$._value </tag>
							</item>
							<item>
								<ruleref uri="#thousand_and_down_ord_plural" />
								<tag> $._value = $._value * 1000 + $$._value </tag>
							</item>
							<item>
								<ruleref uri="#hundred_and_down_ord_plural" />
								<tag> $._value = $._value * 100 + $$._value </tag>
							</item>
						</one-of>
					</item>
				</one-of>
			</item>
			<item>
				<!-- A number [10-19] -->
				<ruleref uri="#teens" />
				<tag> $._value = $$._value </tag>
				<one-of>
					<item>
						<ruleref uri="#million_and_down_ord_plural" />
						<tag> $._value = $._value * 1000000 + $$._value </tag>
					</item>
					<item>
						<ruleref uri="#thousand_and_down_ord_plural" />
						<tag> $._value = $._value * 1000 + $$._value </tag>
					</item>
					<item>
						<ruleref uri="#hundred_and_down_ord_plural" />
						<tag> $._value = $._value * 100 + $$._value </tag>
					</item>
				</one-of>
			</item>
			<item>
				<ruleref uri="#digit_nonzero" />
				<tag> $._value = $$._value </tag>
				<one-of>
					<item>
						<ruleref uri="#million_and_down_ord_plural" />
						<tag> $._value = $._value * 1000000 + $$._value </tag>
					</item>
					<item>
						<ruleref uri="#thousand_and_down_ord_plural" />
						<tag> $._value = $._value * 1000 + $$._value </tag>
					</item>
					<item>
						<ruleref uri="#hundred_of_1e9_plural" />
						<tag> $._value = $._value * $$.scale + $$._value </tag>
					</item>
				</one-of>
			</item>
			<item>
			a
			<ruleref uri="#hundred_of_1e9_plural" />
			<tag> $._value = $$.scale + $$._value </tag>
		</item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- ordinal_1_to_1e6
 -->
	<!-- $ordinal_1_to_1e6._value: integer -->
	<rule id="ordinal_1_to_1e6" scope="public">
		<example> first </example>
		<example> second </example>
		<example> nineteenth </example>
		<example> ninetieth </example>
		<example> twenty second </example>
		<example> two hundred and twelfth </example>
		<example> two hundredth </example>
		<example> two thousandth </example>
		<example> nine thousand nine hundredth </example>
		<example> nine thousand nine hundred and ninth </example>
		<example> ninety one thousand nine hundredth </example>
		<tag> $._value = 0 </tag>
		<one-of>
			<item>
				<ruleref uri="#ordinal_postfix_1_to_90" />
				<tag> $._value = $$._value </tag>
			</item>
			<item>
				<!-- A number [20-90] -->
				<ruleref uri="#tensfrag" />
				<tag> $._value = $$._value * 10 </tag>
				<one-of>
					<item>
						<ruleref uri="#digit_nonzero_ord" />
						<tag> $._value = $._value + $$._value </tag>
					</item>
					<item>
						<item repeat="0-1">
							<ruleref uri="#digit_nonzero" />
							<tag> $._value = $._value + $$._value </tag>
						</item>
						<one-of>
							<item>
								<ruleref uri="#thousand_and_down_ord" />
								<tag> $._value = $._value * 1000 + $$._value </tag>
							</item>
							<item>
								<ruleref uri="#hundred_and_down_ord" />
								<tag> $._value = $._value * 100 + $$._value </tag>
							</item>
						</one-of>
					</item>
				</one-of>
			</item>
			<item>
				<!-- A number [10-19] -->
				<ruleref uri="#teens" />
				<tag> $._value = $$._value </tag>
				<one-of>
					<item>
						<ruleref uri="#thousand_and_down_ord" />
						<tag> $._value = $._value * 1000 + $$._value </tag>
					</item>
					<item>
						<ruleref uri="#hundred_and_down_ord" />
						<tag> $._value = $._value * 100 + $$._value </tag>
					</item>
				</one-of>
			</item>
			<item>
				<ruleref uri="#digit_nonzero" />
				<tag> $._value = $$._value </tag>
				<one-of>
					<item>
						<ruleref uri="#thousand_and_down_ord" />
						<tag> $._value = $._value * 1000 + $$._value </tag>
					</item>
					<item>
						<ruleref uri="#hundred_of_1e6" />
						<tag> $._value = $._value * $$.scale + $$._value </tag>
					</item>
				</one-of>
			</item>
			<item>
			a
			<ruleref uri="#hundred_of_1e6" />
			<tag> $._value = $$.scale + $$._value </tag>
		</item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- ordinal_1_to_1e6_plural
 -->
	<!-- $ordinal_1_to_1e6_plural._value: integer -->
	<rule id="ordinal_1_to_1e6_plural" scope="public">
		<example> firsts </example>
		<example> thirds </example>
		<example> nineteenths </example>
		<example> ninetieths </example>
		<example> twenty seconds </example>
		<example> two hundred and twelfths </example>
		<example> two hundredths </example>
		<example> two thousandths </example>
		<example> nine thousand nine hundredths </example>
		<example> nine thousand nine hundred and ninths </example>
		<example> ninety one thousand nine hundredths </example>
		<tag> $._value = 0 </tag>
		<one-of>
			<item>
				<ruleref uri="#ordinal_postfix_1_to_90_plural" />
				<tag> $._value = $$._value </tag>
			</item>
			<item>
				<!-- A number [20-90] -->
				<ruleref uri="#tensfrag" />
				<tag> $._value = $$._value * 10 </tag>
				<one-of>
					<item>
						<ruleref uri="#digit_nonzero_ord_plural" />
						<tag> $._value = $._value + $$._value </tag>
					</item>
					<item>
						<item repeat="0-1">
							<ruleref uri="#digit_nonzero" />
							<tag> $._value = $._value + $$._value </tag>
						</item>
						<one-of>
							<item>
								<ruleref uri="#thousand_and_down_ord_plural" />
								<tag> $._value = $._value * 1000 + $$._value </tag>
							</item>
							<item>
								<ruleref uri="#hundred_and_down_ord_plural" />
								<tag> $._value = $._value * 100 + $$._value </tag>
							</item>
						</one-of>
					</item>
				</one-of>
			</item>
			<item>
				<!-- A number [10-19] -->
				<ruleref uri="#teens" />
				<tag> $._value = $$._value </tag>
				<one-of>
					<item>
						<ruleref uri="#thousand_and_down_ord_plural" />
						<tag> $._value = $._value * 1000 + $$._value </tag>
					</item>
					<item>
						<ruleref uri="#hundred_and_down_ord_plural" />
						<tag> $._value = $._value * 100 + $$._value </tag>
					</item>
				</one-of>
			</item>
			<item>
				<ruleref uri="#digit_nonzero" />
				<tag> $._value = $$._value </tag>
				<one-of>
					<item>
						<ruleref uri="#thousand_and_down_ord_plural" />
						<tag> $._value = $._value * 1000 + $$._value </tag>
					</item>
					<item>
						<ruleref uri="#hundred_of_1e6_plural" />
						<tag> $._value = $._value * $$.scale + $$._value </tag>
					</item>
				</one-of>
			</item>
			<item>
			a
			<ruleref uri="#hundred_of_1e6_plural" />
			<tag> $._value = $$.scale + $$._value </tag>
		</item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $hundred_of_1e15._value: integer 
$hundred_of_1e15.scale: integer -->
	<!-- five (hundred and twelve trillion ninety first)
$._value = 12000000000091, $.scale = 100000000000000
 -->
	<rule id="hundred_of_1e15">
		<example> hundredth </example>
		<example> hundred and first </example>
		<example> hundred and eleventh </example>
		<example> hundred and ninety first </example>
		<example> hundred and ninety two trillion and first </example>
		<tag> $.scale = 100 </tag>
		<one-of>
			<item>
			hundredth
			<tag> $._value = 0 </tag>
		</item>
			<item>
			hundred
			<one-of>
					<item>
						<ruleref uri="#trillion_and_down_ord" />
						<tag> $._value = $$._value </tag>
						<tag> $.scale = 100000000000000 </tag>
					</item>
					<item>
						<ruleref uri="#billion_and_down_ord" />
						<tag> $._value = $$._value </tag>
						<tag> $.scale = 100000000000 </tag>
					</item>
					<item>
						<ruleref uri="#million_and_down_ord" />
						<tag> $._value = $$._value </tag>
						<tag> $.scale = 100000000 </tag>
					</item>
					<item>
						<ruleref uri="#thousand_and_down_ord" />
						<tag> $._value = $$._value </tag>
						<tag> $.scale = 100000 </tag>
					</item>
					<item>
						<item repeat="0-1"> and </item>
						<one-of>
							<item>
								<ruleref uri="#ordinal_postfix_1_to_90" />
								<tag> $._value = $$._value </tag>
							</item>
							<item>
								<ruleref uri="#tensfrag" />
								<tag> $._value = $$._value * 10 </tag>
								<one-of>
									<item>
										<ruleref uri="#digit_nonzero_ord" />
										<tag> $._value = $._value + $$._value </tag>
									</item>
									<item>
										<item repeat="0-1">
											<ruleref uri="#digit_nonzero" />
											<tag> $._value = $._value + $$._value </tag>
										</item>
										<one-of>
											<item>
												<ruleref uri="#trillion_and_down_ord" />
												<tag> $._value = $._value * 1000000000000 + $$._value </tag>
												<tag> $.scale = 100000000000000 </tag>
											</item>
											<item>
												<ruleref uri="#billion_and_down_ord" />
												<tag> $._value = $._value * 1000000000 + $$._value </tag>
												<tag> $.scale = 100000000000 </tag>
											</item>
											<item>
												<ruleref uri="#million_and_down_ord" />
												<tag> $._value = $._value * 1000000 + $$._value </tag>
												<tag> $.scale = 100000000 </tag>
											</item>
											<item>
												<ruleref uri="#thousand_and_down_ord" />
												<tag> $._value = $._value * 1000 + $$._value </tag>
												<tag> $.scale = 100000 </tag>
											</item>
										</one-of>
									</item>
								</one-of>
							</item>
							<item>
								<ruleref uri="#onesfrag" />
								<tag> $._value = $$._value </tag>
								<one-of>
									<item>
										<ruleref uri="#trillion_and_down_ord" />
										<tag> $._value = $._value * 1000000000000 + $$._value </tag>
										<tag> $.scale = 100000000000000 </tag>
									</item>
									<item>
										<ruleref uri="#billion_and_down_ord" />
										<tag> $._value = $._value * 1000000000 + $$._value </tag>
										<tag> $.scale = 100000000000 </tag>
									</item>
									<item>
										<ruleref uri="#million_and_down_ord" />
										<tag> $._value = $._value * 1000000 + $$._value </tag>
										<tag> $.scale = 100000000 </tag>
									</item>
									<item>
										<ruleref uri="#thousand_and_down_ord" />
										<tag> $._value = $._value * 1000 + $$._value </tag>
										<tag> $.scale = 100000 </tag>
									</item>
								</one-of>
							</item>
						</one-of>
					</item>
				</one-of>
		</item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $hundred_of_1e15_plural._value: integer 
$hundred_of_1e15_plural.scale: integer -->
	<!-- five (hundred and twelve trillion ninety firsts)
$._value = 12000000000091, $.scale = 100000000000000
 -->
	<rule id="hundred_of_1e15_plural">
		<example> hundredths </example>
		<example> hundred and firsts </example>
		<example> hundred and elevenths </example>
		<example> hundred and ninety firsts </example>
		<example> hundred and ninety two trillion and firsts </example>
		<tag> $.scale = 100 </tag>
		<one-of>
			<item>
			hundredths
			<tag> $._value = 0 </tag>
		</item>
			<item>
			hundred
			<one-of>
					<item>
						<ruleref uri="#trillion_and_down_ord_plural" />
						<tag> $._value = $$._value </tag>
						<tag> $.scale = 100000000000000 </tag>
					</item>
					<item>
						<ruleref uri="#billion_and_down_ord_plural" />
						<tag> $._value = $$._value </tag>
						<tag> $.scale = 100000000000 </tag>
					</item>
					<item>
						<ruleref uri="#million_and_down_ord_plural" />
						<tag> $._value = $$._value </tag>
						<tag> $.scale = 100000000 </tag>
					</item>
					<item>
						<ruleref uri="#thousand_and_down_ord_plural" />
						<tag> $._value = $$._value </tag>
						<tag> $.scale = 100000 </tag>
					</item>
					<item>
						<item repeat="0-1"> and </item>
						<one-of>
							<item>
								<ruleref uri="#ordinal_postfix_1_to_90_plural" />
								<tag> $._value = $$._value </tag>
							</item>
							<item>
								<ruleref uri="#tensfrag" />
								<tag> $._value = $$._value * 10 </tag>
								<one-of>
									<item>
										<ruleref uri="#digit_nonzero_ord_plural" />
										<tag> $._value = $._value + $$._value </tag>
									</item>
									<item>
										<item repeat="0-1">
											<ruleref uri="#digit_nonzero" />
											<tag> $._value = $._value + $$._value </tag>
										</item>
										<one-of>
											<item>
												<ruleref uri="#trillion_and_down_ord_plural" />
												<tag> $._value = $._value * 1000000000000 + $$._value </tag>
												<tag> $.scale = 100000000000000 </tag>
											</item>
											<item>
												<ruleref uri="#billion_and_down_ord_plural" />
												<tag> $._value = $._value * 1000000000 + $$._value </tag>
												<tag> $.scale = 100000000000 </tag>
											</item>
											<item>
												<ruleref uri="#million_and_down_ord_plural" />
												<tag> $._value = $._value * 1000000 + $$._value </tag>
												<tag> $.scale = 100000000 </tag>
											</item>
											<item>
												<ruleref uri="#thousand_and_down_ord_plural" />
												<tag> $._value = $._value * 1000 + $$._value </tag>
												<tag> $.scale = 100000 </tag>
											</item>
										</one-of>
									</item>
								</one-of>
							</item>
							<item>
								<ruleref uri="#onesfrag" />
								<tag> $._value = $$._value </tag>
								<one-of>
									<item>
										<ruleref uri="#trillion_and_down_ord_plural" />
										<tag> $._value = $._value * 1000000000000 + $$._value </tag>
										<tag> $.scale = 100000000000000 </tag>
									</item>
									<item>
										<ruleref uri="#billion_and_down_ord_plural" />
										<tag> $._value = $._value * 1000000000 + $$._value </tag>
										<tag> $.scale = 100000000000 </tag>
									</item>
									<item>
										<ruleref uri="#million_and_down_ord_plural" />
										<tag> $._value = $._value * 1000000 + $$._value </tag>
										<tag> $.scale = 100000000 </tag>
									</item>
									<item>
										<ruleref uri="#thousand_and_down_ord_plural" />
										<tag> $._value = $._value * 1000 + $$._value </tag>
										<tag> $.scale = 100000 </tag>
									</item>
								</one-of>
							</item>
						</one-of>
					</item>
				</one-of>
		</item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $hundred_of_1e12._value: integer 
$hundred_of_1e12.scale: integer -->
	<!-- five (hundred and twelve billion ninety first)
$._value = 12000000091, $.scale = 100000000000
 -->
	<rule id="hundred_of_1e12">
		<example> hundredth </example>
		<example> hundred and first </example>
		<example> hundred and eleventh </example>
		<example> hundred and ninety first </example>
		<example> hundred and ninety two billion and first </example>
		<tag> $.scale = 100 </tag>
		<one-of>
			<item>
			hundredth
			<tag> $._value = 0 </tag>
		</item>
			<item>
			hundred
			<one-of>
					<item>
						<ruleref uri="#billion_and_down_ord" />
						<tag> $._value = $$._value </tag>
						<tag> $.scale = 100000000000 </tag>
					</item>
					<item>
						<ruleref uri="#million_and_down_ord" />
						<tag> $._value = $$._value </tag>
						<tag> $.scale = 100000000 </tag>
					</item>
					<item>
						<ruleref uri="#thousand_and_down_ord" />
						<tag> $._value = $$._value </tag>
						<tag> $.scale = 100000 </tag>
					</item>
					<item>
						<item repeat="0-1"> and </item>
						<one-of>
							<item>
								<ruleref uri="#ordinal_postfix_1_to_90" />
								<tag> $._value = $$._value </tag>
							</item>
							<item>
								<ruleref uri="#tensfrag" />
								<tag> $._value = $$._value * 10 </tag>
								<one-of>
									<item>
										<ruleref uri="#digit_nonzero_ord" />
										<tag> $._value = $._value + $$._value </tag>
									</item>
									<item>
										<item repeat="0-1">
											<ruleref uri="#digit_nonzero" />
											<tag> $._value = $._value + $$._value </tag>
										</item>
										<one-of>
											<item>
												<ruleref uri="#billion_and_down_ord" />
												<tag> $._value = $._value * 1000000000 + $$._value </tag>
												<tag> $.scale = 100000000000 </tag>
											</item>
											<item>
												<ruleref uri="#million_and_down_ord" />
												<tag> $._value = $._value * 1000000 + $$._value </tag>
												<tag> $.scale = 100000000 </tag>
											</item>
											<item>
												<ruleref uri="#thousand_and_down_ord" />
												<tag> $._value = $._value * 1000 + $$._value </tag>
												<tag> $.scale = 100000 </tag>
											</item>
										</one-of>
									</item>
								</one-of>
							</item>
							<item>
								<ruleref uri="#onesfrag" />
								<tag> $._value = $$._value </tag>
								<one-of>
									<item>
										<ruleref uri="#billion_and_down_ord" />
										<tag> $._value = $._value * 1000000000 + $$._value </tag>
										<tag> $.scale = 100000000000 </tag>
									</item>
									<item>
										<ruleref uri="#million_and_down_ord" />
										<tag> $._value = $._value * 1000000 + $$._value </tag>
										<tag> $.scale = 100000000 </tag>
									</item>
									<item>
										<ruleref uri="#thousand_and_down_ord" />
										<tag> $._value = $._value * 1000 + $$._value </tag>
										<tag> $.scale = 100000 </tag>
									</item>
								</one-of>
							</item>
						</one-of>
					</item>
				</one-of>
		</item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $hundred_of_1e12_plural._value: integer 
$hundred_of_1e12_plural.scale: integer -->
	<!-- five (hundred and twelve billion ninety firsts)
$._value = 12000000091, $.scale = 100000000000
 -->
	<rule id="hundred_of_1e12_plural">
		<example> hundredths </example>
		<example> hundred and firsts </example>
		<example> hundred and elevenths </example>
		<example> hundred and ninety firsts </example>
		<example> hundred and ninety two billion and firsts </example>
		<tag> $.scale = 100 </tag>
		<one-of>
			<item>
			hundredths
			<tag> $._value = 0 </tag>
		</item>
			<item>
			hundred
			<one-of>
					<item>
						<ruleref uri="#billion_and_down_ord_plural" />
						<tag> $._value = $$._value </tag>
						<tag> $.scale = 100000000000 </tag>
					</item>
					<item>
						<ruleref uri="#million_and_down_ord_plural" />
						<tag> $._value = $$._value </tag>
						<tag> $.scale = 100000000 </tag>
					</item>
					<item>
						<ruleref uri="#thousand_and_down_ord_plural" />
						<tag> $._value = $$._value </tag>
						<tag> $.scale = 100000 </tag>
					</item>
					<item>
						<item repeat="0-1"> and </item>
						<one-of>
							<item>
								<ruleref uri="#ordinal_postfix_1_to_90_plural" />
								<tag> $._value = $$._value </tag>
							</item>
							<item>
								<ruleref uri="#tensfrag" />
								<tag> $._value = $$._value * 10 </tag>
								<one-of>
									<item>
										<ruleref uri="#digit_nonzero_ord_plural" />
										<tag> $._value = $._value + $$._value </tag>
									</item>
									<item>
										<item repeat="0-1">
											<ruleref uri="#digit_nonzero" />
											<tag> $._value = $._value + $$._value </tag>
										</item>
										<one-of>
											<item>
												<ruleref uri="#billion_and_down_ord_plural" />
												<tag> $._value = $._value * 1000000000 + $$._value </tag>
												<tag> $.scale = 100000000000 </tag>
											</item>
											<item>
												<ruleref uri="#million_and_down_ord_plural" />
												<tag> $._value = $._value * 1000000 + $$._value </tag>
												<tag> $.scale = 100000000 </tag>
											</item>
											<item>
												<ruleref uri="#thousand_and_down_ord_plural" />
												<tag> $._value = $._value * 1000 + $$._value </tag>
												<tag> $.scale = 100000 </tag>
											</item>
										</one-of>
									</item>
								</one-of>
							</item>
							<item>
								<ruleref uri="#onesfrag" />
								<tag> $._value = $$._value </tag>
								<one-of>
									<item>
										<ruleref uri="#billion_and_down_ord_plural" />
										<tag> $._value = $._value * 1000000000 + $$._value </tag>
										<tag> $.scale = 100000000000 </tag>
									</item>
									<item>
										<ruleref uri="#million_and_down_ord_plural" />
										<tag> $._value = $._value * 1000000 + $$._value </tag>
										<tag> $.scale = 100000000 </tag>
									</item>
									<item>
										<ruleref uri="#thousand_and_down_ord_plural" />
										<tag> $._value = $._value * 1000 + $$._value </tag>
										<tag> $.scale = 100000 </tag>
									</item>
								</one-of>
							</item>
						</one-of>
					</item>
				</one-of>
		</item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $hundred_of_1e9._value: integer 
$hundred_of_1e9.scale: integer -->
	<!-- five (hundred and twelve million ninety first)
$._value = 12000091, $.scale = 100000000
 -->
	<rule id="hundred_of_1e9">
		<example> hundredth </example>
		<example> hundred and first </example>
		<example> hundred and eleventh </example>
		<example> hundred and ninety first </example>
		<example> hundred and ninety two million and first </example>
		<tag> $.scale = 100 </tag>
		<one-of>
			<item>
			hundredth
			<tag> $._value = 0 </tag>
		</item>
			<item>
			hundred
			<one-of>
					<item>
						<ruleref uri="#million_and_down_ord" />
						<tag> $._value = $$._value </tag>
						<tag> $.scale = 100000000 </tag>
					</item>
					<item>
						<ruleref uri="#thousand_and_down_ord" />
						<tag> $._value = $$._value </tag>
						<tag> $.scale = 100000 </tag>
					</item>
					<item>
						<item repeat="0-1"> and </item>
						<one-of>
							<item>
								<ruleref uri="#ordinal_postfix_1_to_90" />
								<tag> $._value = $$._value </tag>
							</item>
							<item>
								<ruleref uri="#tensfrag" />
								<tag> $._value = $$._value * 10 </tag>
								<one-of>
									<item>
										<ruleref uri="#digit_nonzero_ord" />
										<tag> $._value = $._value + $$._value </tag>
									</item>
									<item>
										<item repeat="0-1">
											<ruleref uri="#digit_nonzero" />
											<tag> $._value = $._value + $$._value </tag>
										</item>
										<one-of>
											<item>
												<ruleref uri="#million_and_down_ord" />
												<tag> $._value = $._value * 1000000 + $$._value </tag>
												<tag> $.scale = 100000000 </tag>
											</item>
											<item>
												<ruleref uri="#thousand_and_down_ord" />
												<tag> $._value = $._value * 1000 + $$._value </tag>
												<tag> $.scale = 100000 </tag>
											</item>
										</one-of>
									</item>
								</one-of>
							</item>
							<item>
								<ruleref uri="#onesfrag" />
								<tag> $._value = $$._value </tag>
								<one-of>
									<item>
										<ruleref uri="#million_and_down_ord" />
										<tag> $._value = $._value * 1000000 + $$._value </tag>
										<tag> $.scale = 100000000 </tag>
									</item>
									<item>
										<ruleref uri="#thousand_and_down_ord" />
										<tag> $._value = $._value * 1000 + $$._value </tag>
										<tag> $.scale = 100000 </tag>
									</item>
								</one-of>
							</item>
						</one-of>
					</item>
				</one-of>
		</item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $hundred_of_1e9_plural._value: integer 
$hundred_of_1e9_plural.scale: integer -->
	<!-- five (hundred and twelve million ninety firsts)
$._value = 12000091, $.scale = 100000000
 -->
	<rule id="hundred_of_1e9_plural">
		<example> hundredths </example>
		<example> hundred and firsts </example>
		<example> hundred and elevenths </example>
		<example> hundred and ninety firsts </example>
		<example> hundred and ninety two million and firsts </example>
		<tag> $.scale = 100 </tag>
		<one-of>
			<item>
			hundredths
			<tag> $._value = 0 </tag>
		</item>
			<item>
			hundred
			<one-of>
					<item>
						<ruleref uri="#million_and_down_ord_plural" />
						<tag> $._value = $$._value </tag>
						<tag> $.scale = 100000000 </tag>
					</item>
					<item>
						<ruleref uri="#thousand_and_down_ord_plural" />
						<tag> $._value = $$._value </tag>
						<tag> $.scale = 100000 </tag>
					</item>
					<item>
						<item repeat="0-1"> and </item>
						<one-of>
							<item>
								<ruleref uri="#ordinal_postfix_1_to_90_plural" />
								<tag> $._value = $$._value </tag>
							</item>
							<item>
								<ruleref uri="#tensfrag" />
								<tag> $._value = $$._value * 10 </tag>
								<one-of>
									<item>
										<ruleref uri="#digit_nonzero_ord_plural" />
										<tag> $._value = $._value + $$._value </tag>
									</item>
									<item>
										<item repeat="0-1">
											<ruleref uri="#digit_nonzero" />
											<tag> $._value = $._value + $$._value </tag>
										</item>
										<one-of>
											<item>
												<ruleref uri="#million_and_down_ord_plural" />
												<tag> $._value = $._value * 1000000 + $$._value </tag>
												<tag> $.scale = 100000000 </tag>
											</item>
											<item>
												<ruleref uri="#thousand_and_down_ord_plural" />
												<tag> $._value = $._value * 1000 + $$._value </tag>
												<tag> $.scale = 100000 </tag>
											</item>
										</one-of>
									</item>
								</one-of>
							</item>
							<item>
								<ruleref uri="#onesfrag" />
								<tag> $._value = $$._value </tag>
								<one-of>
									<item>
										<ruleref uri="#million_and_down_ord_plural" />
										<tag> $._value = $._value * 1000000 + $$._value </tag>
										<tag> $.scale = 100000000 </tag>
									</item>
									<item>
										<ruleref uri="#thousand_and_down_ord_plural" />
										<tag> $._value = $._value * 1000 + $$._value </tag>
										<tag> $.scale = 100000 </tag>
									</item>
								</one-of>
							</item>
						</one-of>
					</item>
				</one-of>
		</item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $hundred_of_1e6._value: integer 
$hundred_of_1e6.scale: integer -->
	<!-- five (hundred and twelve thousand ninety first)
$._value = 12091, $.scale = 100000
 -->
	<rule id="hundred_of_1e6">
		<example> hundredth </example>
		<example> hundred and first </example>
		<example> hundred and eleventh </example>
		<example> hundred and ninety first </example>
		<example> hundred and ninety two thousand and first </example>
		<tag> $.scale = 100 </tag>
		<one-of>
			<item>
			hundredth
			<tag> $._value = 0 </tag>
		</item>
			<item>
			hundred
			<one-of>
					<item>
						<ruleref uri="#thousand_and_down_ord" />
						<tag> $._value = $$._value </tag>
						<tag> $.scale = 100000 </tag>
					</item>
					<item>
						<item repeat="0-1"> and </item>
						<one-of>
							<item>
								<ruleref uri="#ordinal_postfix_1_to_90" />
								<tag> $._value = $$._value </tag>
							</item>
							<item>
								<ruleref uri="#tensfrag" />
								<tag> $._value = $$._value * 10 </tag>
								<one-of>
									<item>
										<ruleref uri="#digit_nonzero_ord" />
										<tag> $._value = $._value + $$._value </tag>
									</item>
									<item>
										<item repeat="0-1">
											<ruleref uri="#digit_nonzero" />
											<tag> $._value = $._value + $$._value </tag>
										</item>
										<ruleref uri="#thousand_and_down_ord" />
										<tag> $._value = $._value * 1000 + $$._value </tag>
										<tag> $.scale = 100000 </tag>
									</item>
								</one-of>
							</item>
							<item>
								<ruleref uri="#onesfrag" />
								<tag> $._value = $$._value </tag>
								<ruleref uri="#thousand_and_down_ord" />
								<tag> $._value = $._value * 1000 + $$._value </tag>
								<tag> $.scale = 100000 </tag>
							</item>
						</one-of>
					</item>
				</one-of>
		</item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $hundred_of_1e6_plural._value: integer 
$hundred_of_1e6_plural.scale: integer -->
	<!-- five (hundred and twelve thousand ninety firsts)
$._value = 12091, $.scale = 100000
 -->
	<rule id="hundred_of_1e6_plural">
		<example> hundredths </example>
		<example> hundred and firsts </example>
		<example> hundred and elevenths </example>
		<example> hundred and ninety firsts </example>
		<example> hundred and ninety two thousand and firsts </example>
		<tag> $.scale = 100 </tag>
		<one-of>
			<item>
			hundredths
			<tag> $._value = 0 </tag>
		</item>
			<item>
			hundred
			<one-of>
					<item>
						<ruleref uri="#thousand_and_down_ord_plural" />
						<tag> $._value = $$._value </tag>
						<tag> $.scale = 100000 </tag>
					</item>
					<item>
						<item repeat="0-1"> and </item>
						<one-of>
							<item>
								<ruleref uri="#ordinal_postfix_1_to_90_plural" />
								<tag> $._value = $$._value </tag>
							</item>
							<item>
								<ruleref uri="#tensfrag" />
								<tag> $._value = $$._value * 10 </tag>
								<one-of>
									<item>
										<ruleref uri="#digit_nonzero_ord_plural" />
										<tag> $._value = $._value + $$._value </tag>
									</item>
									<item>
										<item repeat="0-1">
											<ruleref uri="#digit_nonzero" />
											<tag> $._value = $._value + $$._value </tag>
										</item>
										<ruleref uri="#thousand_and_down_ord_plural" />
										<tag> $._value = $._value * 1000 + $$._value </tag>
										<tag> $.scale = 100000 </tag>
									</item>
								</one-of>
							</item>
							<item>
								<ruleref uri="#onesfrag" />
								<tag> $._value = $$._value </tag>
								<ruleref uri="#thousand_and_down_ord_plural" />
								<tag> $._value = $._value * 1000 + $$._value </tag>
								<tag> $.scale = 100000 </tag>
							</item>
						</one-of>
					</item>
				</one-of>
		</item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- ordinal_1_to_1e3
 -->
	<!-- $ordinal_1_to_1e3._value: integer -->
	<rule id="ordinal_1_to_1e3" scope="public">
		<example> first </example>
		<example> second </example>
		<example> nineteenth </example>
		<example> ninetieth </example>
		<example> twenty second </example>
		<example> two hundred and twelfth </example>
		<example> two hundredth </example>
		<tag> $._value = 0 </tag>
		<one-of>
			<item>
				<ruleref uri="#ordinal_1_to_99" />
				<tag> $._value = $$._value </tag>
			</item>
			<item>
				<!-- A number [100-900] -->
				<one-of>
					<item>
						<ruleref uri="#digit_nonzero" />
						<tag> $._value = $$._value </tag>
					</item>
					<item> 
					a
					<tag> $._value = 1 </tag>
				</item>
				</one-of>
				<ruleref uri="#hundred_and_down_ord" />
				<tag> $._value = $._value * 100 + $$._value </tag>
			</item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- ordinal_1_to_1e3_plural
 -->
	<!-- $ordinal_1_to_1e3_plural._value: integer -->
	<rule id="ordinal_1_to_1e3_plural" scope="public">
		<example> firsts </example>
		<example> seconds </example>
		<example> nineteenths </example>
		<example> ninetieths </example>
		<example> twenty seconds </example>
		<example> two hundred and twelfths </example>
		<example> two hundredths </example>
		<tag> $._value = 0 </tag>
		<one-of>
			<item>
				<ruleref uri="#ordinal_1_to_99_plural" />
				<tag> $._value = $$._value </tag>
			</item>
			<item>
				<!-- A number [100-900] -->
				<one-of>
					<item>
						<ruleref uri="#digit_nonzero" />
						<tag> $._value = $$._value </tag>
					</item>
					<item> 
					a
					<tag> $._value = 1 </tag>
				</item>
				</one-of>
				<ruleref uri="#hundred_and_down_ord_plural" />
				<tag> $._value = $._value * 100 + $$._value </tag>
			</item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $trillion_and_down_ord._value: integer -->
	<rule id="trillion_and_down_ord">
		<example> trillionth </example>
		<example> trillion and first </example>
		<example> trillion nine hundredth </example>
		<example> trillion nine hundred millionth </example>
		<example> trillion five billion two hundred and eleventh </example>
		<one-of>
			<item> 
			trillion
			<one-of>
					<item>
						<ruleref uri="#ordinal_1_to_1e12" />
						<tag> $._value = $$._value </tag>
					</item>
					<item> 
					and
					<ruleref uri="#ordinal_1_to_99" />
					<tag> $._value = $$._value </tag>
				</item>
				</one-of>
		</item>
			<item> 
			trillionth
			<tag> $._value = 0 </tag>
		</item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $trillion_and_down_ord_plural._value: integer -->
	<rule id="trillion_and_down_ord_plural">
		<example> trillionths </example>
		<example> trillion and firsts </example>
		<example> trillion nine hundredths </example>
		<example> trillion nine hundred millionths </example>
		<example> trillion five billion two hundred and elevenths </example>
		<one-of>
			<item> 
			trillion
			<one-of>
					<item>
						<ruleref uri="#ordinal_1_to_1e12_plural" />
						<tag> $._value = $$._value </tag>
					</item>
					<item> 
					and
					<ruleref uri="#ordinal_1_to_99_plural" />
					<tag> $._value = $$._value </tag>
				</item>
				</one-of>
		</item>
			<item> 
			trillionths
			<tag> $._value = 0 </tag>
		</item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $billion_and_down_ord._value: integer -->
	<rule id="billion_and_down_ord">
		<example> billionth </example>
		<example> billion and first </example>
		<example> billion nine hundredth </example>
		<example> billion nine hundred millionth </example>
		<example> billion five million two hundred and eleventh </example>
		<one-of>
			<item> 
			billion
			<one-of>
					<item>
						<ruleref uri="#ordinal_1_to_1e9" />
						<tag> $._value = $$._value </tag>
					</item>
					<item> 
					and
					<ruleref uri="#ordinal_1_to_99" />
					<tag> $._value = $$._value </tag>
				</item>
				</one-of>
		</item>
			<item> 
			billionth
			<tag> $._value = 0 </tag>
		</item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $billion_and_down_ord_plural._value: integer -->
	<rule id="billion_and_down_ord_plural">
		<example> billionths </example>
		<example> billion and firsts </example>
		<example> billion nine hundredths </example>
		<example> billion nine hundred millionths </example>
		<example> billion five million two hundred and elevenths </example>
		<one-of>
			<item> 
			billion
			<one-of>
					<item>
						<ruleref uri="#ordinal_1_to_1e9_plural" />
						<tag> $._value = $$._value </tag>
					</item>
					<item> 
					and
					<ruleref uri="#ordinal_1_to_99_plural" />
					<tag> $._value = $$._value </tag>
				</item>
				</one-of>
		</item>
			<item> 
			billionths
			<tag> $._value = 0 </tag>
		</item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $million_and_down_ord._value: integer -->
	<rule id="million_and_down_ord">
		<example> millionth </example>
		<example> million and first </example>
		<example> million nine hundredth </example>
		<example> million nine hundred thousandth </example>
		<example> million five thousand two hundred and eleventh </example>
		<one-of>
			<item> 
			million
			<one-of>
					<item>
						<ruleref uri="#ordinal_1_to_1e6" />
						<tag> $._value = $$._value </tag>
					</item>
					<item> 
					and
					<ruleref uri="#ordinal_1_to_99" />
					<tag> $._value = $$._value </tag>
				</item>
				</one-of>
		</item>
			<item> 
			millionth
			<tag> $._value = 0 </tag>
		</item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $million_and_down_ord_plural._value: integer -->
	<rule id="million_and_down_ord_plural">
		<example> millionths </example>
		<example> million and firsts </example>
		<example> million nine hundredths </example>
		<example> million nine hundred thousandths </example>
		<example> million five thousand two hundred and elevenths </example>
		<one-of>
			<item> 
			million
			<one-of>
					<item>
						<ruleref uri="#ordinal_1_to_1e6_plural" />
						<tag> $._value = $$._value </tag>
					</item>
					<item> 
					and
					<ruleref uri="#ordinal_1_to_99_plural" />
					<tag> $._value = $$._value </tag>
				</item>
				</one-of>
		</item>
			<item> 
			millionths
			<tag> $._value = 0 </tag>
		</item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $thousand_and_down_ord._value: integer -->
	<rule id="thousand_and_down_ord">
		<example> thousandth </example>
		<example> thousand and first </example>
		<example> thousand and ninety first </example>
		<example> thousand two hundred and eleventh </example>
		<one-of>
			<item> 
			thousand
			<one-of>
					<item>
						<ruleref uri="#ordinal_1_to_1e3" />
						<tag> $._value = $$._value </tag>
					</item>
					<item> 
					and
					<ruleref uri="#ordinal_1_to_99" />
					<tag> $._value = $$._value </tag>
				</item>
				</one-of>
		</item>
			<item> 
			thousandth
			<tag> $._value = 0 </tag>
		</item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $thousand_and_down_ord_plural._value: integer -->
	<rule id="thousand_and_down_ord_plural">
		<example> thousandths </example>
		<example> thousand and firsts </example>
		<example> thousand and ninety firsts </example>
		<example> thousand two hundred and elevenths </example>
		<one-of>
			<item> 
			thousand
			<one-of>
					<item>
						<ruleref uri="#ordinal_1_to_1e3_plural" />
						<tag> $._value = $$._value </tag>
					</item>
					<item> 
					and
					<ruleref uri="#ordinal_1_to_99_plural" />
					<tag> $._value = $$._value </tag>
				</item>
				</one-of>
		</item>
			<item> 
			thousandths
			<tag> $._value = 0 </tag>
		</item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $hundred_and_down_ord._value: integer -->
	<rule id="hundred_and_down_ord">
		<example> hundredth </example>
		<example> hundred and first </example>
		<example> hundred and eleventh </example>
		<example> hundred and ninety first </example>
		<one-of>
			<item>
			hundred
			<item repeat="0-1"> and </item>
			<ruleref uri="#ordinal_1_to_99" />
			<tag> $._value = $$._value </tag>
		</item>
			<item>
			hundredth
			<tag> $._value = 0 </tag>
		</item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $hundred_and_down_ord_plural._value: integer -->
	<rule id="hundred_and_down_ord_plural">
		<example> hundredths </example>
		<example> hundred and firsts </example>
		<example> hundred and elevenths </example>
		<example> hundred and ninety firsts </example>
		<one-of>
			<item>
			hundred
			<item repeat="0-1"> and </item>
			<ruleref uri="#ordinal_1_to_99_plural" />
			<tag> $._value = $$._value </tag>
		</item>
			<item>
			hundredths
			<tag> $._value = 0 </tag>
		</item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $ordinal_1_to_99._value: integer -->
	<rule id="ordinal_1_to_99">
		<example> first </example>
		<example> tenth </example>
		<example> eleventh </example>
		<example> twenty first </example>
		<example> ninety ninth </example>
		<one-of>
			<item>
				<ruleref uri="#ordinal_postfix_1_to_90" />
				<tag> $._value = $$._value </tag>
			</item>
			<item>
				<ruleref uri="#tensfrag" />
				<tag> $._value = $$._value * 10 </tag>
				<ruleref uri="#digit_nonzero_ord" />
				<tag> $._value = $._value + $$._value </tag>
			</item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $ordinal_1_to_99_plural._value: integer -->
	<rule id="ordinal_1_to_99_plural">
		<example> firsts </example>
		<example> tenths </example>
		<example> elevenths </example>
		<example> twenty firsts </example>
		<example> ninety ninths </example>
		<one-of>
			<item>
				<ruleref uri="#ordinal_postfix_1_to_90_plural" />
				<tag> $._value = $$._value </tag>
			</item>
			<item>
				<ruleref uri="#tensfrag" />
				<tag> $._value = $$._value * 10 </tag>
				<ruleref uri="#digit_nonzero_ord_plural" />
				<tag> $._value = $._value + $$._value </tag>
			</item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- ordinal_postfix_1_to_90

Single word, 1st-20th, 30th, ..., 90th.
 -->
	<!-- $ordinal_postfix_1_to_90._value: integer -->
	<rule id="ordinal_postfix_1_to_90">
		<example> first </example>
		<example> ninth </example>
		<example> tenth </example>
		<example> eleventh </example>
		<example> ninetieth </example>
		<one-of>
			<item>
				<ruleref uri="#digit_nonzero_ord" />
			</item>
			<item>
				<ruleref uri="#teens_and_tens_ord" />
			</item>
		</one-of>
		<tag> $ = $$ </tag>
	</rule>
	<!-- ordinal_postfix_1_to_90_plural

Single word, 1sts-20ths, 30ths, ..., 90ths. Used in the denominator_plural rule.
 -->
	<!-- $ordinal_postfix_1_to_90_plural._value: integer -->
	<rule id="ordinal_postfix_1_to_90_plural">
		<example> firsts </example>
		<example> ninths </example>
		<example> tenths </example>
		<example> elevenths </example>
		<example> ninetieths </example>
		<one-of>
			<item>
				<ruleref uri="#digit_nonzero_ord_plural" />
			</item>
			<item>
				<ruleref uri="#teens_and_tens_ord_plural" />
			</item>
		</one-of>
		<tag> $ = $$ </tag>
	</rule>
	<!-- ordinal_postfix_2_to_90

Single word, 2nd-20th, 30th, ..., 90th. Used in the denominator_single rule.
 -->
	<!-- $ordinal_postfix_2_to_90._value: integer -->
	<rule id="ordinal_postfix_2_to_90">
		<example> ninth </example>
		<example> tenth </example>
		<example> eleventh </example>
		<example> ninetieth </example>
		<one-of>
			<item> second <tag> $._value = 2 </tag> </item>
			<item> third <tag> $._value = 3 </tag> </item>
			<item> fourth <tag> $._value = 4 </tag> </item>
			<item> fifth <tag> $._value = 5 </tag> </item>
			<item> sixth <tag> $._value = 6 </tag> </item>
			<item> seventh <tag> $._value = 7 </tag> </item>
			<item> eighth <tag> $._value = 8 </tag> </item>
			<item> ninth <tag> $._value = 9 </tag> </item>
			<item>
				<ruleref uri="#teens_and_tens_ord" />
				<tag> $._value = $$._value </tag>
			</item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- ordinal_postfix_3_to_90_plural

Single word, 3rds-20ths, 30ths, ..., 90ths. Used in the denominator_plural rule.
 -->
	<!-- $ordinal_postfix_3_to_90_plural._value: integer -->
	<rule id="ordinal_postfix_3_to_90_plural">
		<example> ninths </example>
		<example> tenths </example>
		<example> elevenths </example>
		<example> ninetieths </example>
		<one-of>
			<item> thirds <tag> $._value = 3 </tag> </item>
			<item> fourths <tag> $._value = 4 </tag> </item>
			<item> fifths <tag> $._value = 5 </tag> </item>
			<item> sixths <tag> $._value = 6 </tag> </item>
			<item> sevenths <tag> $._value = 7 </tag> </item>
			<item> eighths <tag> $._value = 8 </tag> </item>
			<item> ninths <tag> $._value = 9 </tag> </item>
			<item>
				<ruleref uri="#teens_and_tens_ord_plural" />
				<tag> $._value = $$._value </tag>
			</item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- DigitLists
 -->
	<!-- digit_list

Unrestricted digit list.
 -->
	<!-- $digit_list._value: string -->
	<rule id="digit_list" scope="public">
		<example> zero </example>
		<example> twelve </example>
		<example> five twenty </example>
		<example> twenty twenty four </example>
		<example> one two three four five </example>
		<tag> $._value = '' </tag>
		<one-of>
			<item>
				<ruleref uri="#digit" />
				<tag> $._value = $._value + $$._value </tag>
				<item repeat="0-19">
					<ruleref uri="#digit" />
					<tag> $._value = $._value + $$._value </tag>
				</item>
				<item repeat="0-1">
					<ruleref uri="#twodigit" />
					<tag> $._value = $._value + $$._value </tag>
				</item>
			</item>
			<item>
				<item repeat="1-11">
					<ruleref uri="#twodigit" />
					<tag> $._value = $._value + $$._value </tag>
				</item>
			</item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $Digit1._value: string -->
	<rule id="Digit1" scope="public">
		<example> zero </example>
		<example> nine </example>
		<ruleref uri="#digit" />
		<tag> $._value = '' + $$._value; $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $Digit2._value: string -->
	<rule id="Digit2" scope="public">
		<example> zero zero </example>
		<example> one nine </example>
		<example> nineteen </example>
		<example> double five </example>
		<tag> $._value = '' </tag>
		<one-of>
			<item>
				<ruleref uri="#digit" />
				<tag> $._value = $._value + $$._value </tag>
				<ruleref uri="#digit" />
				<tag> $._value = $._value + $$._value </tag>
			</item>
			<item>
			double
			<ruleref uri="#digit" />
			<tag> $._value = $._value + $$._value + $$._value </tag>
		</item>
			<item>
				<ruleref uri="#grouped_twodigit" />
				<tag> $ = $$ </tag>
			</item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $Digit3._value: string -->
	<rule id="Digit3" scope="public">
		<example> zero zero three </example>
		<example> zero double one </example>
		<example> one two three </example>
		<example> one twenty </example>
		<example> one double two </example>
		<example> double two one </example>
		<example> two hundred </example>
		<example> triple five </example>
		<tag> $._value = '' </tag>
		<one-of>
			<item>
				<ruleref uri="#zero" />
				<ruleref uri="#Digit2" />
				<tag> $._value = '0' + $$._value </tag>
			</item>
			<item>
				<ruleref uri="#digit_nonzero" />
				<tag> $._value = $._value + $$._value </tag>
				<one-of>
					<item>
						<ruleref uri="#Digit2" />
						<tag> $._value = $._value + $$._value </tag>
					</item>
					<item>
					hundred
					<tag> $._value = $._value + '00' </tag>
				</item>
				</one-of>
			</item>
			<item>
			double
			<ruleref uri="#digit" />
			<tag> $._value = $._value + $$._value + $$._value </tag>
			<ruleref uri="#digit" />
			<tag> $._value = $._value + $$._value </tag>
		</item>
			<item>
				<one-of>
					<item> triple </item>
					<item> treble </item>
				</one-of>
				<ruleref uri="#digit" />
				<tag> $._value = $._value + $$._value + $$._value + $$._value </tag>
			</item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $Digit4._value: string -->
	<rule id="Digit4" scope="public">
		<example> one two three four </example>
		<example> twenty twenty four </example>
		<example> twenty four twenty </example>
		<example> one triple two </example>
		<example> thirteen oh four </example>
		<example> oh four thirteen </example>
		<tag> $._value = '' </tag>
		<one-of>
			<item>
				<ruleref uri="#zero" />
				<ruleref uri="#Digit3" />
				<tag> $._value = '0' + $$._value </tag>
			</item>
			<item>
				<ruleref uri="#digit_nonzero" />
				<tag> $._value = $._value + $$._value </tag>
				<one-of>
					<item>
						<ruleref uri="#Digit3" />
						<tag> $._value = $._value + $$._value </tag>
					</item>
					<item>
					thousand
					<tag> $._value = $._value + '000' </tag>
				</item>
				</one-of>
			</item>
			<item>
				<ruleref uri="#grouped_twodigit" />
				<tag> $._value = $._value + $$._value </tag>
				<one-of>
					<item>
						<ruleref uri="#Digit2" />
						<tag> $._value = $._value + $$._value </tag>
					</item>
					<item>
					hundred
					<tag> $._value = $._value + '00' </tag>
				</item>
				</one-of>
			</item>
			<item>
			double
			<ruleref uri="#digit" />
			<tag> $._value = $._value + $$._value + $$._value </tag>
			<ruleref uri="#Digit2" />
			<tag> $._value = $._value + $$._value </tag>
		</item>
			<item>
				<one-of>
					<item> triple </item>
					<item> treble </item>
				</one-of>
				<ruleref uri="#digit" />
				<tag> $._value = $._value + $$._value + $$._value + $$._value </tag>
				<ruleref uri="#digit" />
				<tag> $._value = $._value + $$._value </tag>
			</item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $Digit5._value: string -->
	<rule id="Digit5" scope="public">
		<example> one two three four five </example>
		<example> oh twenty twenty four </example>
		<tag> $._value = '' </tag>
		<one-of>
			<item>
				<ruleref uri="#digit" />
				<tag> $._value = $._value + $$._value </tag>
				<ruleref uri="#Digit4" />
				<tag> $._value = $._value + $$._value </tag>
			</item>
			<item>
			<ruleref uri="#grouped_twodigit" />
			<tag> $._value = $._value + $$._value + '000' </tag>
			thousand
		</item>
			<item>
			double
			<ruleref uri="#digit" />
			<tag> $._value = $._value + $$._value + $$._value </tag>
			<ruleref uri="#Digit3" />
			<tag> $._value = $._value + $$._value </tag>
		</item>
			<item>
				<one-of>
					<item> triple </item>
					<item> treble </item>
				</one-of>
				<ruleref uri="#digit" />
				<tag> $._value = $._value + $$._value + $$._value + $$._value </tag>
				<ruleref uri="#Digit2" />
				<tag> $._value = $._value + $$._value </tag>
			</item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $Digit6._value: string -->
	<rule id="Digit6" scope="public">
		<example> one two three four five six </example>
		<example> oh oh twenty twenty four </example>
		<example> triple oh double four one </example>
		<tag> $._value = '' </tag>
		<one-of>
			<item>
				<ruleref uri="#digit" />
				<tag> $._value = $._value + $$._value </tag>
				<ruleref uri="#Digit5" />
				<tag> $._value = $._value + $$._value </tag>
			</item>
			<item>
			double
			<ruleref uri="#digit" />
			<tag> $._value = $._value + $$._value + $$._value </tag>
			<ruleref uri="#Digit4" />
			<tag> $._value = $._value + $$._value </tag>
		</item>
			<item>
				<one-of>
					<item> triple </item>
					<item> treble </item>
				</one-of>
				<ruleref uri="#digit" />
				<tag> $._value = $._value + $$._value + $$._value + $$._value </tag>
				<ruleref uri="#Digit3" />
				<tag> $._value = $._value + $$._value </tag>
			</item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $Digit7._value: string -->
	<rule id="Digit7" scope="public">
		<example> one two three four five six seven </example>
		<example> oh two oh twenty twenty four </example>
		<example> two triple oh double four one </example>
		<tag> $._value = '' </tag>
		<one-of>
			<item>
				<ruleref uri="#digit" />
				<tag> $._value = $._value + $$._value </tag>
				<ruleref uri="#Digit6" />
				<tag> $._value = $._value + $$._value </tag>
			</item>
			<item>
			double
			<ruleref uri="#digit" />
			<tag> $._value = $._value + $$._value + $$._value </tag>
			<ruleref uri="#Digit5" />
			<tag> $._value = $._value + $$._value </tag>
		</item>
			<item>
				<one-of>
					<item> triple </item>
					<item> treble </item>
				</one-of>
				<ruleref uri="#digit" />
				<tag> $._value = $._value + $$._value + $$._value + $$._value </tag>
				<ruleref uri="#Digit4" />
				<tag> $._value = $._value + $$._value </tag>
			</item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $Digit8._value: string -->
	<rule id="Digit8" scope="public">
		<example> one two three four five six seven eight</example>
		<example> oh two oh one twenty twenty four </example>
		<tag> $._value = '' </tag>
		<one-of>
			<item>
				<ruleref uri="#digit" />
				<tag> $._value = $._value + $$._value </tag>
				<ruleref uri="#Digit7" />
				<tag> $._value = $._value + $$._value </tag>
			</item>
			<item>
			double
			<ruleref uri="#digit" />
			<tag> $._value = $._value + $$._value + $$._value </tag>
			<ruleref uri="#Digit6" />
			<tag> $._value = $._value + $$._value </tag>
		</item>
			<item>
				<one-of>
					<item> triple </item>
					<item> treble </item>
				</one-of>
				<ruleref uri="#digit" />
				<tag> $._value = $._value + $$._value + $$._value + $$._value </tag>
				<ruleref uri="#Digit5" />
				<tag> $._value = $._value + $$._value </tag>
			</item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $Digit9._value: string -->
	<rule id="Digit9" scope="public">
		<example> one two three four five six seven eight nine </example>
		<example> oh two oh one oh twenty twenty four </example>
		<tag> $._value = '' </tag>
		<one-of>
			<item>
				<ruleref uri="#digit" />
				<tag> $._value = $._value + $$._value </tag>
				<ruleref uri="#Digit8" />
				<tag> $._value = $._value + $$._value </tag>
			</item>
			<item>
			double
			<ruleref uri="#digit" />
			<tag> $._value = $._value + $$._value + $$._value </tag>
			<ruleref uri="#Digit7" />
			<tag> $._value = $._value + $$._value </tag>
		</item>
			<item>
				<one-of>
					<item> triple </item>
					<item> treble </item>
				</one-of>
				<ruleref uri="#digit" />
				<tag> $._value = $._value + $$._value + $$._value + $$._value </tag>
				<ruleref uri="#Digit6" />
				<tag> $._value = $._value + $$._value </tag>
			</item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $Digit10._value: string -->
	<rule id="Digit10" scope="public">
		<example> one two three four five six seven eight nine zero </example>
		<example> oh two oh one oh three twenty twenty four </example>
		<tag> $._value = '' </tag>
		<one-of>
			<item>
				<ruleref uri="#digit" />
				<tag> $._value = $._value + $$._value </tag>
				<ruleref uri="#Digit9" />
				<tag> $._value = $._value + $$._value </tag>
			</item>
			<item>
			double
			<ruleref uri="#digit" />
			<tag> $._value = $._value + $$._value + $$._value </tag>
			<ruleref uri="#Digit8" />
			<tag> $._value = $._value + $$._value </tag>
		</item>
			<item>
				<one-of>
					<item> triple </item>
					<item> treble </item>
				</one-of>
				<ruleref uri="#digit" />
				<tag> $._value = $._value + $$._value + $$._value + $$._value </tag>
				<ruleref uri="#Digit7" />
				<tag> $._value = $._value + $$._value </tag>
			</item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $SimpleDigit1._value: string -->
	<rule id="SimpleDigit1" scope="public">
		<example> one </example>
		<ruleref uri="#digit" />
		<tag> $._value = $$._value </tag>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $SimpleDigit2._value: string -->
	<rule id="SimpleDigit2" scope="public">
		<example> one two </example>
		<tag> $._value = '' </tag>
		<item repeat="2">
			<ruleref uri="#digit" />
			<tag> $._value = $._value + $$._value </tag>
		</item>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $SimpleDigit3._value: string -->
	<rule id="SimpleDigit3" scope="public">
		<example> one two three </example>
		<tag> $._value = '' </tag>
		<item repeat="3">
			<ruleref uri="#digit" />
			<tag> $._value = $._value + $$._value </tag>
		</item>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $SimpleDigit4._value: string -->
	<rule id="SimpleDigit4" scope="public">
		<example> one two three four </example>
		<tag> $._value = '' </tag>
		<item repeat="4">
			<ruleref uri="#digit" />
			<tag> $._value = $._value + $$._value </tag>
		</item>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $SimpleDigit5._value: string -->
	<rule id="SimpleDigit5" scope="public">
		<example> one two three four five </example>
		<tag> $._value = '' </tag>
		<item repeat="5">
			<ruleref uri="#digit" />
			<tag> $._value = $._value + $$._value </tag>
		</item>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $SimpleDigit6._value: string -->
	<rule id="SimpleDigit6" scope="public">
		<example> one two three four five six </example>
		<tag> $._value = '' </tag>
		<item repeat="6">
			<ruleref uri="#digit" />
			<tag> $._value = $._value + $$._value </tag>
		</item>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $SimpleDigit7._value: string -->
	<rule id="SimpleDigit7" scope="public">
		<example> one two three four five six seven </example>
		<tag> $._value = '' </tag>
		<item repeat="7">
			<ruleref uri="#digit" />
			<tag> $._value = $._value + $$._value </tag>
		</item>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $SimpleDigit8._value: string -->
	<rule id="SimpleDigit8" scope="public">
		<example> one two three four five six seven eight </example>
		<tag> $._value = '' </tag>
		<item repeat="8">
			<ruleref uri="#digit" />
			<tag> $._value = $._value + $$._value </tag>
		</item>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $SimpleDigit9._value: string -->
	<rule id="SimpleDigit9" scope="public">
		<example> one two three four five six seven eight nine </example>
		<tag> $._value = '' </tag>
		<item repeat="9">
			<ruleref uri="#digit" />
			<tag> $._value = $._value + $$._value </tag>
		</item>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $SimpleDigit10._value: string -->
	<rule id="SimpleDigit10" scope="public">
		<example> one two three four five six seven eight nine zero </example>
		<tag> $._value = '' </tag>
		<item repeat="10">
			<ruleref uri="#digit" />
			<tag> $._value = $._value + $$._value </tag>
		</item>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $Alphanum1._value: string -->
	<rule id="Alphanum1" scope="public">
		<example> one </example>
		<example> a. </example>
		<ruleref uri="#letter_digit" />
		<tag> $._value = $$._value </tag>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $Alphanum2._value: string -->
	<rule id="Alphanum2" scope="public">
		<example> one two </example>
		<example> eleven </example>
		<example> a. b. </example>
		<example> a. zero </example>
		<example> zero b. </example>
		<tag> $._value = '' </tag>
		<one-of>
			<item repeat="2">
				<ruleref uri="#letter_digit" />
				<tag> $._value = $._value + $$._value </tag>
			</item>
			<item>
				<ruleref uri="#grouped_twodigit" />
				<tag> $ = $$ </tag>
			</item>
			<item>
			double
			<ruleref uri="#digit" />
			<tag> $._value = $._value + $$._value + $$._value </tag>
		</item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $Alphanum3._value: string -->
	<rule id="Alphanum3" scope="public">
		<example> one two three </example>
		<example> eleven a. </example>
		<example> a. b. c. </example>
		<example> a. zero b. </example>
		<tag> $._value = '' </tag>
		<one-of>
			<item>
				<one-of>
					<item>
						<ruleref uri="#letter" />
						<tag> $._value = $._value + $$._value </tag>
					</item>
					<item>
					zero
					<tag> $._value = $._value + '0' </tag>
				</item>
				</one-of>
				<ruleref uri="#Alphanum2" />
				<tag> $._value = $._value + $$._value </tag>
			</item>
			<item>
				<ruleref uri="#digit_nonzero" />
				<tag> $._value = $._value + $$._value </tag>
				<one-of>
					<item>
						<ruleref uri="#Alphanum2" />
						<tag> $._value = $._value + $$._value </tag>
					</item>
					<item>
					hundred
					<tag> $._value = $._value + '00' </tag>
				</item>
				</one-of>
			</item>
			<item>
				<ruleref uri="#grouped_twodigit" />
				<tag> $._value = $._value + $$._value </tag>
				<ruleref uri="#letter" />
				<tag> $._value = $._value + $$._value </tag>
			</item>
			<item>
			double
			<ruleref uri="#digit" />
			<tag> $._value = $._value + $$._value + $$._value </tag>
			<ruleref uri="#Alphanum1" />
			<tag> $._value = $._value + $$._value </tag>
		</item>
			<item>
				<one-of>
					<item> triple </item>
					<item> treble </item>
				</one-of>
				<ruleref uri="#digit" />
				<tag> $._value = $._value + $$._value + $$._value + $$._value </tag>
			</item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $Alphanum4._value: string -->
	<rule id="Alphanum4" scope="public">
		<example> one two three four </example>
		<example> a. eleven b. </example>
		<example> a. b. c. d. </example>
		<example> a. zero b. one </example>
		<tag> $._value = '' </tag>
		<one-of>
			<item>
				<one-of>
					<item>
						<ruleref uri="#letter" />
						<tag> $._value = $._value + $$._value </tag>
					</item>
					<item>
					zero
					<tag> $._value = $._value + '0' </tag>
				</item>
				</one-of>
				<ruleref uri="#Alphanum3" />
				<tag> $._value = $._value + $$._value </tag>
			</item>
			<item>
				<ruleref uri="#digit_nonzero" />
				<tag> $._value = $._value + $$._value </tag>
				<one-of>
					<item>
						<ruleref uri="#Alphanum3" />
						<tag> $._value = $._value + $$._value </tag>
					</item>
					<item>
					hundred
					<tag> $._value = $._value + '00' </tag>
					<ruleref uri="#letter" />
					<tag> $._value = $._value + $$._value </tag>
				</item>
					<item>
					thousand
					<tag> $._value = $._value + '000' </tag>
				</item>
				</one-of>
			</item>
			<item>
				<ruleref uri="#tensfrag" />
				<tag> $._value = $._value + $$._value </tag>
				<one-of>
					<item>
						<ruleref uri="#digit_nonzero" />
						<tag> $._value = $._value + $$._value </tag>
						<one-of>
							<item>
								<ruleref uri="#Digit2" />
								<tag> $._value = $._value + $$._value </tag>
							</item>
							<item>
								<ruleref uri="#letter" />
								<tag> $._value = $._value + $$._value </tag>
								<ruleref uri="#Alphanum1" />
								<tag> $._value = $._value + $$._value </tag>
							</item>
							<item>
							hundred
							<tag> $._value = $._value + '00' </tag>
						</item>
						</one-of>
					</item>
					<item>
						<ruleref uri="#letter" />
						<tag> $._value = $._value + '0' + $$._value </tag>
						<ruleref uri="#Alphanum1" />
						<tag> $._value = $._value + $$._value </tag>
					</item>
					<item>
						<ruleref uri="#teens" />
						<tag> $._value = $._value + '0' + $$._value </tag>
					</item>
					<item>
						<ruleref uri="#tensfrag" />
						<tag> $._value = $._value + '0' + $$._value </tag>
						<one-of>
							<item>
								<ruleref uri="#digit_nonzero" />
								<tag> $._value = $._value + $$._value </tag>
							</item>
							<item>
								<tag> $._value = $._value + '0' </tag>
							</item>
						</one-of>
					</item>
					<item>
					hundred
					<tag> $._value = $._value + '000' </tag>
				</item>
				</one-of>
			</item>
			<item>
				<ruleref uri="#teens" />
				<tag> $._value = $._value + $$._value </tag>
				<one-of>
					<item>
						<ruleref uri="#letter" />
						<tag> $._value = $._value + $$._value </tag>
						<ruleref uri="#Alphanum1" />
						<tag> $._value = $._value + $$._value </tag>
					</item>
					<item>
						<ruleref uri="#Digit2" />
						<tag> $._value = $._value + $$._value </tag>
					</item>
					<item>
					hundred
					<tag> $._value = $._value + '00' </tag>
				</item>
				</one-of>
			</item>
			<item>
			double
			<ruleref uri="#digit" />
			<tag> $._value = $._value + $$._value + $$._value </tag>
			<ruleref uri="#Alphanum2" />
			<tag> $._value = $._value + $$._value </tag>
		</item>
			<item>
				<one-of>
					<item> triple </item>
					<item> treble </item>
				</one-of>
				<ruleref uri="#digit" />
				<tag> $._value = $._value + $$._value + $$._value + $$._value </tag>
				<ruleref uri="#Alphanum1" />
				<tag> $._value = $._value + $$._value </tag>
			</item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $Alphanum5._value: string -->
	<rule id="Alphanum5" scope="public">
		<example> one two three four five </example>
		<example> a. eleven twelve </example>
		<example> a. b. c. d. e. </example>
		<example> a. double zero b. one </example>
		<tag> $._value = '' </tag>
		<one-of>
			<item>
				<one-of>
					<item>
						<ruleref uri="#letter" />
						<tag> $._value = $._value + $$._value </tag>
					</item>
					<item>
					zero
					<tag> $._value = $._value + '0' </tag>
				</item>
				</one-of>
				<ruleref uri="#Alphanum4" />
				<tag> $._value = $._value + $$._value </tag>
			</item>
			<item>
				<ruleref uri="#digit_nonzero" />
				<tag> $._value = $._value + $$._value </tag>
				<one-of>
					<item>
						<ruleref uri="#Alphanum4" />
						<tag> $._value = $._value + $$._value </tag>
					</item>
					<item>
					hundred
					<tag> $._value = $._value + '00' </tag>
					<ruleref uri="#letter" />
					<tag> $._value = $._value + $$._value </tag>
					<ruleref uri="#Alphanum1" />
					<tag> $._value = $._value + $$._value </tag>
				</item>
					<item>
					thousand
					<tag> $._value = $._value + '000' </tag>
					<ruleref uri="#letter" />
					<tag> $._value = $._value + $$._value </tag>
				</item>
				</one-of>
			</item>
			<item>
				<ruleref uri="#tensfrag" />
				<tag> $._value = $._value + $$._value </tag>
				<one-of>
					<item>
						<ruleref uri="#digit_nonzero" />
						<tag> $._value = $._value + $$._value </tag>
						<one-of>
							<item>
								<ruleref uri="#Digit2" />
								<tag> $._value = $._value + $$._value </tag>
								<ruleref uri="#letter" />
								<tag> $._value = $._value + $$._value </tag>
							</item>
							<item>
								<ruleref uri="#letter" />
								<tag> $._value = $._value + $$._value </tag>
								<ruleref uri="#Alphanum2" />
								<tag> $._value = $._value + $$._value </tag>
							</item>
							<item>
							thousand
							<tag> $._value = $._value + '000' </tag>
						</item>
							<item>
							hundred
							<tag> $._value = $._value + '00' </tag>
							<ruleref uri="#letter" />
							<tag> $._value = $._value + $$._value </tag>
						</item>
						</one-of>
					</item>
					<item>
						<ruleref uri="#letter" />
						<tag> $._value = $._value + '0' + $$._value </tag>
						<ruleref uri="#Alphanum2" />
						<tag> $._value = $._value + $$._value </tag>
					</item>
					<item>
						<ruleref uri="#teens" />
						<tag> $._value = $._value + '0' + $$._value </tag>
						<ruleref uri="#letter" />
						<tag> $._value = $._value + $$._value </tag>
					</item>
					<item>
						<ruleref uri="#tensfrag" />
						<tag> $._value = $._value + '0' + $$._value </tag>
						<one-of>
							<item>
								<ruleref uri="#digit_nonzero" />
								<tag> $._value = $._value + $$._value </tag>
							</item>
							<item>
								<tag> $._value = $._value + '0' </tag>
							</item>
						</one-of>
						<ruleref uri="#letter" />
						<tag> $._value = $._value + $$._value </tag>
					</item>
					<item>
					thousand
					<tag> $._value = $._value + '0000' </tag>
				</item>
					<item>
					hundred
					<tag> $._value = $._value + '000' </tag>
					<ruleref uri="#letter" />
					<tag> $._value = $._value + $$._value </tag>
				</item>
				</one-of>
			</item>
			<item>
				<ruleref uri="#teens" />
				<tag> $._value = $._value + $$._value </tag>
				<one-of>
					<item>
						<ruleref uri="#letter" />
						<tag> $._value = $._value + $$._value </tag>
						<ruleref uri="#Alphanum2" />
						<tag> $._value = $._value + $$._value </tag>
					</item>
					<item>
						<ruleref uri="#Digit2" />
						<tag> $._value = $._value + $$._value </tag>
						<ruleref uri="#letter" />
						<tag> $._value = $._value + $$._value </tag>
					</item>
					<item>
					thousand
					<tag> $._value = $._value + '000' </tag>
				</item>
					<item>
					hundred
					<tag> $._value = $._value + '00' </tag>
					<ruleref uri="#letter" />
					<tag> $._value = $._value + $$._value </tag>
				</item>
				</one-of>
			</item>
			<item>
			double
			<ruleref uri="#digit" />
			<tag> $._value = $._value + $$._value + $$._value </tag>
			<ruleref uri="#Alphanum3" />
			<tag> $._value = $._value + $$._value </tag>
		</item>
			<item>
				<one-of>
					<item> triple </item>
					<item> treble </item>
				</one-of>
				<ruleref uri="#digit" />
				<tag> $._value = $._value + $$._value + $$._value + $$._value </tag>
				<ruleref uri="#Alphanum2" />
				<tag> $._value = $._value + $$._value </tag>
			</item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $Alphanum6._value: string -->
	<rule id="Alphanum6" scope="public">
		<example> one two three four five six </example>
		<example> a. eleven twelve b. </example>
		<example> a. b. c. d. e. f. </example>
		<example> a. double zero b. double one </example>
		<tag> $._value = '' </tag>
		<one-of>
			<item>
				<one-of>
					<item>
						<ruleref uri="#letter" />
						<tag> $._value = $._value + $$._value </tag>
					</item>
					<item>
					zero
					<tag> $._value = $._value + '0' </tag>
				</item>
				</one-of>
				<ruleref uri="#Alphanum5" />
				<tag> $._value = $._value + $$._value </tag>
			</item>
			<item>
				<ruleref uri="#digit_nonzero" />
				<tag> $._value = $._value + $$._value </tag>
				<one-of>
					<item>
						<ruleref uri="#Alphanum5" />
						<tag> $._value = $._value + $$._value </tag>
					</item>
					<item>
					hundred
					<tag> $._value = $._value + '00' </tag>
					<ruleref uri="#letter" />
					<tag> $._value = $._value + $$._value </tag>
					<ruleref uri="#Alphanum2" />
					<tag> $._value = $._value + $$._value </tag>
				</item>
					<item>
					thousand
					<tag> $._value = $._value + '000' </tag>
					<ruleref uri="#letter" />
					<tag> $._value = $._value + $$._value </tag>
					<ruleref uri="#Alphanum1" />
					<tag> $._value = $._value + $$._value </tag>
				</item>
				</one-of>
			</item>
			<item>
				<ruleref uri="#tensfrag" />
				<tag> $._value = $._value + $$._value </tag>
				<one-of>
					<item>
						<ruleref uri="#digit_nonzero" />
						<tag> $._value = $._value + $$._value </tag>
						<one-of>
							<item>
								<ruleref uri="#Digit2" />
								<tag> $._value = $._value + $$._value </tag>
								<ruleref uri="#letter" />
								<tag> $._value = $._value + $$._value </tag>
								<ruleref uri="#Alphanum1" />
								<tag> $._value = $._value + $$._value </tag>
							</item>
							<item>
								<ruleref uri="#letter" />
								<tag> $._value = $._value + $$._value </tag>
								<ruleref uri="#Alphanum3" />
								<tag> $._value = $._value + $$._value </tag>
							</item>
							<item>
							thousand
							<tag> $._value = $._value + '000' </tag>
							<ruleref uri="#letter" />
							<tag> $._value = $._value + $$._value </tag>
						</item>
							<item>
							hundred
							<tag> $._value = $._value + '00' </tag>
							<ruleref uri="#letter" />
							<tag> $._value = $._value + $$._value </tag>
							<ruleref uri="#Alphanum1" />
							<tag> $._value = $._value + $$._value </tag>
						</item>
						</one-of>
					</item>
					<item>
						<ruleref uri="#letter" />
						<tag> $._value = $._value + '0' + $$._value </tag>
						<ruleref uri="#Alphanum3" />
						<tag> $._value = $._value + $$._value </tag>
					</item>
					<item>
						<ruleref uri="#teens" />
						<tag> $._value = $._value + '0' + $$._value </tag>
						<ruleref uri="#letter" />
						<tag> $._value = $._value + $$._value </tag>
						<ruleref uri="#Alphanum1" />
						<tag> $._value = $._value + $$._value </tag>
					</item>
					<item>
						<ruleref uri="#tensfrag" />
						<tag> $._value = $._value + '0' + $$._value </tag>
						<one-of>
							<item>
								<ruleref uri="#digit_nonzero" />
								<tag> $._value = $._value + $$._value </tag>
							</item>
							<item>
								<tag> $._value = $._value + '0' </tag>
							</item>
						</one-of>
						<ruleref uri="#letter" />
						<tag> $._value = $._value + $$._value </tag>
						<ruleref uri="#Alphanum1" />
						<tag> $._value = $._value + $$._value </tag>
					</item>
					<item>
					thousand
					<tag> $._value = $._value + '0000' </tag>
					<ruleref uri="#letter" />
					<tag> $._value = $._value + $$._value </tag>
				</item>
					<item>
					hundred
					<tag> $._value = $._value + '000' </tag>
					<ruleref uri="#letter" />
					<tag> $._value = $._value + $$._value </tag>
					<ruleref uri="#Alphanum1" />
					<tag> $._value = $._value + $$._value </tag>
				</item>
				</one-of>
			</item>
			<item>
				<ruleref uri="#teens" />
				<tag> $._value = $._value + $$._value </tag>
				<one-of>
					<item>
						<ruleref uri="#letter" />
						<tag> $._value = $._value + $$._value </tag>
						<ruleref uri="#Alphanum3" />
						<tag> $._value = $._value + $$._value </tag>
					</item>
					<item>
						<ruleref uri="#Digit2" />
						<tag> $._value = $._value + $$._value </tag>
						<ruleref uri="#letter" />
						<tag> $._value = $._value + $$._value </tag>
						<ruleref uri="#Alphanum1" />
						<tag> $._value = $._value + $$._value </tag>
					</item>
					<item>
					thousand
					<tag> $._value = $._value + '000' </tag>
					<ruleref uri="#letter" />
					<tag> $._value = $._value + $$._value </tag>
				</item>
					<item>
					hundred
					<tag> $._value = $._value + '00' </tag>
					<ruleref uri="#letter" />
					<tag> $._value = $._value + $$._value </tag>
					<ruleref uri="#Alphanum1" />
					<tag> $._value = $._value + $$._value </tag>
				</item>
				</one-of>
			</item>
			<item>
			double
			<ruleref uri="#digit" />
			<tag> $._value = $._value + $$._value + $$._value </tag>
			<ruleref uri="#Alphanum4" />
			<tag> $._value = $._value + $$._value </tag>
		</item>
			<item>
				<one-of>
					<item> triple </item>
					<item> treble </item>
				</one-of>
				<ruleref uri="#digit" />
				<tag> $._value = $._value + $$._value + $$._value + $$._value </tag>
				<ruleref uri="#Alphanum3" />
				<tag> $._value = $._value + $$._value </tag>
			</item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $Alphanum7._value: string -->
	<rule id="Alphanum7" scope="public">
		<example> one two three four five six seven </example>
		<example> a. eleven twelve b. zero </example>
		<example> a. b. c. d. e. f. g. </example>
		<example> a. double zero b. double one two </example>
		<tag> $._value = '' </tag>
		<one-of>
			<item>
				<one-of>
					<item>
						<ruleref uri="#letter" />
						<tag> $._value = $._value + $$._value </tag>
					</item>
					<item>
					zero
					<tag> $._value = $._value + '0' </tag>
				</item>
				</one-of>
				<ruleref uri="#Alphanum6" />
				<tag> $._value = $._value + $$._value </tag>
			</item>
			<item>
				<ruleref uri="#digit_nonzero" />
				<tag> $._value = $._value + $$._value </tag>
				<one-of>
					<item>
						<ruleref uri="#Alphanum6" />
						<tag> $._value = $._value + $$._value </tag>
					</item>
					<item>
					hundred
					<tag> $._value = $._value + '00' </tag>
					<ruleref uri="#letter" />
					<tag> $._value = $._value + $$._value </tag>
					<ruleref uri="#Alphanum3" />
					<tag> $._value = $._value + $$._value </tag>
				</item>
					<item>
					thousand
					<tag> $._value = $._value + '000' </tag>
					<ruleref uri="#letter" />
					<tag> $._value = $._value + $$._value </tag>
					<ruleref uri="#Alphanum2" />
					<tag> $._value = $._value + $$._value </tag>
				</item>
				</one-of>
			</item>
			<item>
				<ruleref uri="#tensfrag" />
				<tag> $._value = $._value + $$._value </tag>
				<one-of>
					<item>
						<ruleref uri="#digit_nonzero" />
						<tag> $._value = $._value + $$._value </tag>
						<one-of>
							<item>
								<ruleref uri="#Digit2" />
								<tag> $._value = $._value + $$._value </tag>
								<ruleref uri="#letter" />
								<tag> $._value = $._value + $$._value </tag>
								<ruleref uri="#Alphanum2" />
								<tag> $._value = $._value + $$._value </tag>
							</item>
							<item>
								<ruleref uri="#letter" />
								<tag> $._value = $._value + $$._value </tag>
								<ruleref uri="#Alphanum4" />
								<tag> $._value = $._value + $$._value </tag>
							</item>
							<item>
							thousand
							<tag> $._value = $._value + '000' </tag>
							<ruleref uri="#letter" />
							<tag> $._value = $._value + $$._value </tag>
							<ruleref uri="#Alphanum1" />
							<tag> $._value = $._value + $$._value </tag>
						</item>
							<item>
							hundred
							<tag> $._value = $._value + '00' </tag>
							<ruleref uri="#letter" />
							<tag> $._value = $._value + $$._value </tag>
							<ruleref uri="#Alphanum2" />
							<tag> $._value = $._value + $$._value </tag>
						</item>
						</one-of>
					</item>
					<item>
						<ruleref uri="#letter" />
						<tag> $._value = $._value + '0' + $$._value </tag>
						<ruleref uri="#Alphanum4" />
						<tag> $._value = $._value + $$._value </tag>
					</item>
					<item>
						<ruleref uri="#teens" />
						<tag> $._value = $._value + '0' + $$._value </tag>
						<ruleref uri="#letter" />
						<tag> $._value = $._value + $$._value </tag>
						<ruleref uri="#Alphanum2" />
						<tag> $._value = $._value + $$._value </tag>
					</item>
					<item>
						<ruleref uri="#tensfrag" />
						<tag> $._value = $._value + '0' + $$._value </tag>
						<one-of>
							<item>
								<ruleref uri="#digit_nonzero" />
								<tag> $._value = $._value + $$._value </tag>
							</item>
							<item>
								<tag> $._value = $._value + '0' </tag>
							</item>
						</one-of>
						<ruleref uri="#letter" />
						<tag> $._value = $._value + $$._value </tag>
						<ruleref uri="#Alphanum2" />
						<tag> $._value = $._value + $$._value </tag>
					</item>
					<item>
					thousand
					<tag> $._value = $._value + '0000' </tag>
					<ruleref uri="#letter" />
					<tag> $._value = $._value + $$._value </tag>
					<ruleref uri="#Alphanum1" />
					<tag> $._value = $._value + $$._value </tag>
				</item>
					<item>
					hundred
					<tag> $._value = $._value + '000' </tag>
					<ruleref uri="#letter" />
					<tag> $._value = $._value + $$._value </tag>
					<ruleref uri="#Alphanum2" />
					<tag> $._value = $._value + $$._value </tag>
				</item>
				</one-of>
			</item>
			<item>
				<ruleref uri="#teens" />
				<tag> $._value = $._value + $$._value </tag>
				<one-of>
					<item>
						<ruleref uri="#letter" />
						<tag> $._value = $._value + $$._value </tag>
						<ruleref uri="#Alphanum4" />
						<tag> $._value = $._value + $$._value </tag>
					</item>
					<item>
						<ruleref uri="#Digit2" />
						<tag> $._value = $._value + $$._value </tag>
						<ruleref uri="#letter" />
						<tag> $._value = $._value + $$._value </tag>
						<ruleref uri="#Alphanum2" />
						<tag> $._value = $._value + $$._value </tag>
					</item>
					<item>
					thousand
					<tag> $._value = $._value + '000' </tag>
					<ruleref uri="#letter" />
					<tag> $._value = $._value + $$._value </tag>
					<ruleref uri="#Alphanum1" />
					<tag> $._value = $._value + $$._value </tag>
				</item>
					<item>
					hundred
					<tag> $._value = $._value + '00' </tag>
					<ruleref uri="#letter" />
					<tag> $._value = $._value + $$._value </tag>
					<ruleref uri="#Alphanum2" />
					<tag> $._value = $._value + $$._value </tag>
				</item>
				</one-of>
			</item>
			<item>
			double
			<ruleref uri="#digit" />
			<tag> $._value = $._value + $$._value + $$._value </tag>
			<ruleref uri="#Alphanum5" />
			<tag> $._value = $._value + $$._value </tag>
		</item>
			<item>
				<one-of>
					<item> triple </item>
					<item> treble </item>
				</one-of>
				<ruleref uri="#digit" />
				<tag> $._value = $._value + $$._value + $$._value + $$._value </tag>
				<ruleref uri="#Alphanum4" />
				<tag> $._value = $._value + $$._value </tag>
			</item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $Alphanum8._value: string -->
	<rule id="Alphanum8" scope="public">
		<example> one two three four five six seven eight </example>
		<example> a. eleven twelve b. zero c. </example>
		<example> a. b. c. d. e. f. g. h. </example>
		<example> a. double zero b. double one double two </example>
		<tag> $._value = '' </tag>
		<one-of>
			<item>
				<one-of>
					<item>
						<ruleref uri="#letter" />
						<tag> $._value = $._value + $$._value </tag>
					</item>
					<item>
					zero
					<tag> $._value = $._value + '0' </tag>
				</item>
				</one-of>
				<ruleref uri="#Alphanum7" />
				<tag> $._value = $._value + $$._value </tag>
			</item>
			<item>
				<ruleref uri="#digit_nonzero" />
				<tag> $._value = $._value + $$._value </tag>
				<one-of>
					<item>
						<ruleref uri="#Alphanum7" />
						<tag> $._value = $._value + $$._value </tag>
					</item>
					<item>
					hundred
					<tag> $._value = $._value + '00' </tag>
					<ruleref uri="#letter" />
					<tag> $._value = $._value + $$._value </tag>
					<ruleref uri="#Alphanum4" />
					<tag> $._value = $._value + $$._value </tag>
				</item>
					<item>
					thousand
					<tag> $._value = $._value + '000' </tag>
					<ruleref uri="#letter" />
					<tag> $._value = $._value + $$._value </tag>
					<ruleref uri="#Alphanum3" />
					<tag> $._value = $._value + $$._value </tag>
				</item>
				</one-of>
			</item>
			<item>
				<ruleref uri="#tensfrag" />
				<tag> $._value = $._value + $$._value </tag>
				<one-of>
					<item>
						<ruleref uri="#digit_nonzero" />
						<tag> $._value = $._value + $$._value </tag>
						<one-of>
							<item>
								<ruleref uri="#Digit2" />
								<tag> $._value = $._value + $$._value </tag>
								<ruleref uri="#letter" />
								<tag> $._value = $._value + $$._value </tag>
								<ruleref uri="#Alphanum3" />
								<tag> $._value = $._value + $$._value </tag>
							</item>
							<item>
								<ruleref uri="#letter" />
								<tag> $._value = $._value + $$._value </tag>
								<ruleref uri="#Alphanum5" />
								<tag> $._value = $._value + $$._value </tag>
							</item>
							<item>
							thousand
							<tag> $._value = $._value + '000' </tag>
							<ruleref uri="#letter" />
							<tag> $._value = $._value + $$._value </tag>
							<ruleref uri="#Alphanum2" />
							<tag> $._value = $._value + $$._value </tag>
						</item>
							<item>
							hundred
							<tag> $._value = $._value + '00' </tag>
							<ruleref uri="#letter" />
							<tag> $._value = $._value + $$._value </tag>
							<ruleref uri="#Alphanum3" />
							<tag> $._value = $._value + $$._value </tag>
						</item>
						</one-of>
					</item>
					<item>
						<ruleref uri="#letter" />
						<tag> $._value = $._value + '0' + $$._value </tag>
						<ruleref uri="#Alphanum5" />
						<tag> $._value = $._value + $$._value </tag>
					</item>
					<item>
						<ruleref uri="#teens" />
						<tag> $._value = $._value + '0' + $$._value </tag>
						<ruleref uri="#letter" />
						<tag> $._value = $._value + $$._value </tag>
						<ruleref uri="#Alphanum3" />
						<tag> $._value = $._value + $$._value </tag>
					</item>
					<item>
						<ruleref uri="#tensfrag" />
						<tag> $._value = $._value + '0' + $$._value </tag>
						<one-of>
							<item>
								<ruleref uri="#digit_nonzero" />
								<tag> $._value = $._value + $$._value </tag>
							</item>
							<item>
								<tag> $._value = $._value + '0' </tag>
							</item>
						</one-of>
						<ruleref uri="#letter" />
						<tag> $._value = $._value + $$._value </tag>
						<ruleref uri="#Alphanum3" />
						<tag> $._value = $._value + $$._value </tag>
					</item>
					<item>
					thousand
					<tag> $._value = $._value + '0000' </tag>
					<ruleref uri="#letter" />
					<tag> $._value = $._value + $$._value </tag>
					<ruleref uri="#Alphanum2" />
					<tag> $._value = $._value + $$._value </tag>
				</item>
					<item>
					hundred
					<tag> $._value = $._value + '000' </tag>
					<ruleref uri="#letter" />
					<tag> $._value = $._value + $$._value </tag>
					<ruleref uri="#Alphanum3" />
					<tag> $._value = $._value + $$._value </tag>
				</item>
				</one-of>
			</item>
			<item>
				<ruleref uri="#teens" />
				<tag> $._value = $._value + $$._value </tag>
				<one-of>
					<item>
						<ruleref uri="#letter" />
						<tag> $._value = $._value + $$._value </tag>
						<ruleref uri="#Alphanum5" />
						<tag> $._value = $._value + $$._value </tag>
					</item>
					<item>
						<ruleref uri="#Digit2" />
						<tag> $._value = $._value + $$._value </tag>
						<ruleref uri="#letter" />
						<tag> $._value = $._value + $$._value </tag>
						<ruleref uri="#Alphanum3" />
						<tag> $._value = $._value + $$._value </tag>
					</item>
					<item>
					thousand
					<tag> $._value = $._value + '000' </tag>
					<ruleref uri="#letter" />
					<tag> $._value = $._value + $$._value </tag>
					<ruleref uri="#Alphanum2" />
					<tag> $._value = $._value + $$._value </tag>
				</item>
					<item>
					hundred
					<tag> $._value = $._value + '00' </tag>
					<ruleref uri="#letter" />
					<tag> $._value = $._value + $$._value </tag>
					<ruleref uri="#Alphanum3" />
					<tag> $._value = $._value + $$._value </tag>
				</item>
				</one-of>
			</item>
			<item>
			double
			<ruleref uri="#digit" />
			<tag> $._value = $._value + $$._value + $$._value </tag>
			<ruleref uri="#Alphanum6" />
			<tag> $._value = $._value + $$._value </tag>
		</item>
			<item>
				<one-of>
					<item> triple </item>
					<item> treble </item>
				</one-of>
				<ruleref uri="#digit" />
				<tag> $._value = $._value + $$._value + $$._value + $$._value </tag>
				<ruleref uri="#Alphanum5" />
				<tag> $._value = $._value + $$._value </tag>
			</item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $Alphanum9._value: string -->
	<rule id="Alphanum9" scope="public">
		<example> one two three four five six seven eight nine </example>
		<example> a. eleven twelve b. zero c. d. </example>
		<example> a. b. c. d. e. f. g. h. i. </example>
		<example> a. double zero b. double one double two three </example>
		<tag> $._value = '' </tag>
		<one-of>
			<item>
				<one-of>
					<item>
						<ruleref uri="#letter" />
						<tag> $._value = $._value + $$._value </tag>
					</item>
					<item>
					zero
					<tag> $._value = $._value + '0' </tag>
				</item>
				</one-of>
				<ruleref uri="#Alphanum8" />
				<tag> $._value = $._value + $$._value </tag>
			</item>
			<item>
				<ruleref uri="#digit_nonzero" />
				<tag> $._value = $._value + $$._value </tag>
				<one-of>
					<item>
						<ruleref uri="#Alphanum8" />
						<tag> $._value = $._value + $$._value </tag>
					</item>
					<item>
					hundred
					<tag> $._value = $._value + '00' </tag>
					<ruleref uri="#letter" />
					<tag> $._value = $._value + $$._value </tag>
					<ruleref uri="#Alphanum5" />
					<tag> $._value = $._value + $$._value </tag>
				</item>
					<item>
					thousand
					<tag> $._value = $._value + '000' </tag>
					<ruleref uri="#letter" />
					<tag> $._value = $._value + $$._value </tag>
					<ruleref uri="#Alphanum4" />
					<tag> $._value = $._value + $$._value </tag>
				</item>
				</one-of>
			</item>
			<item>
				<ruleref uri="#tensfrag" />
				<tag> $._value = $._value + $$._value </tag>
				<one-of>
					<item>
						<ruleref uri="#digit_nonzero" />
						<tag> $._value = $._value + $$._value </tag>
						<one-of>
							<item>
								<ruleref uri="#Digit2" />
								<tag> $._value = $._value + $$._value </tag>
								<ruleref uri="#letter" />
								<tag> $._value = $._value + $$._value </tag>
								<ruleref uri="#Alphanum4" />
								<tag> $._value = $._value + $$._value </tag>
							</item>
							<item>
								<ruleref uri="#letter" />
								<tag> $._value = $._value + $$._value </tag>
								<ruleref uri="#Alphanum6" />
								<tag> $._value = $._value + $$._value </tag>
							</item>
							<item>
							thousand
							<tag> $._value = $._value + '000' </tag>
							<ruleref uri="#letter" />
							<tag> $._value = $._value + $$._value </tag>
							<ruleref uri="#Alphanum3" />
							<tag> $._value = $._value + $$._value </tag>
						</item>
							<item>
							hundred
							<tag> $._value = $._value + '00' </tag>
							<ruleref uri="#letter" />
							<tag> $._value = $._value + $$._value </tag>
							<ruleref uri="#Alphanum4" />
							<tag> $._value = $._value + $$._value </tag>
						</item>
						</one-of>
					</item>
					<item>
						<ruleref uri="#letter" />
						<tag> $._value = $._value + '0' + $$._value </tag>
						<ruleref uri="#Alphanum6" />
						<tag> $._value = $._value + $$._value </tag>
					</item>
					<item>
						<ruleref uri="#teens" />
						<tag> $._value = $._value + '0' + $$._value </tag>
						<ruleref uri="#letter" />
						<tag> $._value = $._value + $$._value </tag>
						<ruleref uri="#Alphanum4" />
						<tag> $._value = $._value + $$._value </tag>
					</item>
					<item>
						<ruleref uri="#tensfrag" />
						<tag> $._value = $._value + '0' + $$._value </tag>
						<one-of>
							<item>
								<ruleref uri="#digit_nonzero" />
								<tag> $._value = $._value + $$._value </tag>
							</item>
							<item>
								<tag> $._value = $._value + '0' </tag>
							</item>
						</one-of>
						<ruleref uri="#letter" />
						<tag> $._value = $._value + $$._value </tag>
						<ruleref uri="#Alphanum4" />
						<tag> $._value = $._value + $$._value </tag>
					</item>
					<item>
					thousand
					<tag> $._value = $._value + '0000' </tag>
					<ruleref uri="#letter" />
					<tag> $._value = $._value + $$._value </tag>
					<ruleref uri="#Alphanum3" />
					<tag> $._value = $._value + $$._value </tag>
				</item>
					<item>
					hundred
					<tag> $._value = $._value + '000' </tag>
					<ruleref uri="#letter" />
					<tag> $._value = $._value + $$._value </tag>
					<ruleref uri="#Alphanum4" />
					<tag> $._value = $._value + $$._value </tag>
				</item>
				</one-of>
			</item>
			<item>
				<ruleref uri="#teens" />
				<tag> $._value = $._value + $$._value </tag>
				<one-of>
					<item>
						<ruleref uri="#letter" />
						<tag> $._value = $._value + $$._value </tag>
						<ruleref uri="#Alphanum6" />
						<tag> $._value = $._value + $$._value </tag>
					</item>
					<item>
						<ruleref uri="#Digit2" />
						<tag> $._value = $._value + $$._value </tag>
						<ruleref uri="#letter" />
						<tag> $._value = $._value + $$._value </tag>
						<ruleref uri="#Alphanum4" />
						<tag> $._value = $._value + $$._value </tag>
					</item>
					<item>
					thousand
					<tag> $._value = $._value + '000' </tag>
					<ruleref uri="#letter" />
					<tag> $._value = $._value + $$._value </tag>
					<ruleref uri="#Alphanum3" />
					<tag> $._value = $._value + $$._value </tag>
				</item>
					<item>
					hundred
					<tag> $._value = $._value + '00' </tag>
					<ruleref uri="#letter" />
					<tag> $._value = $._value + $$._value </tag>
					<ruleref uri="#Alphanum4" />
					<tag> $._value = $._value + $$._value </tag>
				</item>
				</one-of>
			</item>
			<item>
			double
			<ruleref uri="#digit" />
			<tag> $._value = $._value + $$._value + $$._value </tag>
			<ruleref uri="#Alphanum7" />
			<tag> $._value = $._value + $$._value </tag>
		</item>
			<item>
				<one-of>
					<item> triple </item>
					<item> treble </item>
				</one-of>
				<ruleref uri="#digit" />
				<tag> $._value = $._value + $$._value + $$._value + $$._value </tag>
				<ruleref uri="#Alphanum6" />
				<tag> $._value = $._value + $$._value </tag>
			</item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $Alphanum10._value: string -->
	<rule id="Alphanum10" scope="public">
		<example> one two three four five six seven eight nine zero </example>
		<example> a. eleven twelve b. zero c. d. five </example>
		<example> a. b. c. d. e. f. g. h. i. j. </example>
		<example> a. double zero b. double one double two three four </example>
		<tag> $._value = '' </tag>
		<one-of>
			<item>
				<one-of>
					<item>
						<ruleref uri="#letter" />
						<tag> $._value = $._value + $$._value </tag>
					</item>
					<item>
					zero
					<tag> $._value = $._value + '0' </tag>
				</item>
				</one-of>
				<ruleref uri="#Alphanum9" />
				<tag> $._value = $._value + $$._value </tag>
			</item>
			<item>
				<ruleref uri="#digit_nonzero" />
				<tag> $._value = $._value + $$._value </tag>
				<one-of>
					<item>
						<ruleref uri="#Alphanum9" />
						<tag> $._value = $._value + $$._value </tag>
					</item>
					<item>
					hundred
					<tag> $._value = $._value + '00' </tag>
					<ruleref uri="#letter" />
					<tag> $._value = $._value + $$._value </tag>
					<ruleref uri="#Alphanum6" />
					<tag> $._value = $._value + $$._value </tag>
				</item>
					<item>
					thousand
					<tag> $._value = $._value + '000' </tag>
					<ruleref uri="#letter" />
					<tag> $._value = $._value + $$._value </tag>
					<ruleref uri="#Alphanum5" />
					<tag> $._value = $._value + $$._value </tag>
				</item>
				</one-of>
			</item>
			<item>
				<ruleref uri="#tensfrag" />
				<tag> $._value = $._value + $$._value </tag>
				<one-of>
					<item>
						<ruleref uri="#digit_nonzero" />
						<tag> $._value = $._value + $$._value </tag>
						<one-of>
							<item>
								<ruleref uri="#Digit2" />
								<tag> $._value = $._value + $$._value </tag>
								<ruleref uri="#letter" />
								<tag> $._value = $._value + $$._value </tag>
								<ruleref uri="#Alphanum5" />
								<tag> $._value = $._value + $$._value </tag>
							</item>
							<item>
								<ruleref uri="#letter" />
								<tag> $._value = $._value + $$._value </tag>
								<ruleref uri="#Alphanum7" />
								<tag> $._value = $._value + $$._value </tag>
							</item>
							<item>
							thousand
							<tag> $._value = $._value + '000' </tag>
							<ruleref uri="#letter" />
							<tag> $._value = $._value + $$._value </tag>
							<ruleref uri="#Alphanum4" />
							<tag> $._value = $._value + $$._value </tag>
						</item>
							<item>
							hundred
							<tag> $._value = $._value + '00' </tag>
							<ruleref uri="#letter" />
							<tag> $._value = $._value + $$._value </tag>
							<ruleref uri="#Alphanum5" />
							<tag> $._value = $._value + $$._value </tag>
						</item>
						</one-of>
					</item>
					<item>
						<ruleref uri="#letter" />
						<tag> $._value = $._value + '0' + $$._value </tag>
						<ruleref uri="#Alphanum7" />
						<tag> $._value = $._value + $$._value </tag>
					</item>
					<item>
						<ruleref uri="#teens" />
						<tag> $._value = $._value + '0' + $$._value </tag>
						<ruleref uri="#letter" />
						<tag> $._value = $._value + $$._value </tag>
						<ruleref uri="#Alphanum5" />
						<tag> $._value = $._value + $$._value </tag>
					</item>
					<item>
						<ruleref uri="#tensfrag" />
						<tag> $._value = $._value + '0' + $$._value </tag>
						<one-of>
							<item>
								<ruleref uri="#digit_nonzero" />
								<tag> $._value = $._value + $$._value </tag>
							</item>
							<item>
								<tag> $._value = $._value + '0' </tag>
							</item>
						</one-of>
						<ruleref uri="#letter" />
						<tag> $._value = $._value + $$._value </tag>
						<ruleref uri="#Alphanum5" />
						<tag> $._value = $._value + $$._value </tag>
					</item>
					<item>
					thousand
					<tag> $._value = $._value + '0000' </tag>
					<ruleref uri="#letter" />
					<tag> $._value = $._value + $$._value </tag>
					<ruleref uri="#Alphanum4" />
					<tag> $._value = $._value + $$._value </tag>
				</item>
					<item>
					hundred
					<tag> $._value = $._value + '000' </tag>
					<ruleref uri="#letter" />
					<tag> $._value = $._value + $$._value </tag>
					<ruleref uri="#Alphanum5" />
					<tag> $._value = $._value + $$._value </tag>
				</item>
				</one-of>
			</item>
			<item>
				<ruleref uri="#teens" />
				<tag> $._value = $._value + $$._value </tag>
				<one-of>
					<item>
						<ruleref uri="#letter" />
						<tag> $._value = $._value + $$._value </tag>
						<ruleref uri="#Alphanum7" />
						<tag> $._value = $._value + $$._value </tag>
					</item>
					<item>
						<ruleref uri="#Digit2" />
						<tag> $._value = $._value + $$._value </tag>
						<ruleref uri="#letter" />
						<tag> $._value = $._value + $$._value </tag>
						<ruleref uri="#Alphanum5" />
						<tag> $._value = $._value + $$._value </tag>
					</item>
					<item>
					thousand
					<tag> $._value = $._value + '000' </tag>
					<ruleref uri="#letter" />
					<tag> $._value = $._value + $$._value </tag>
					<ruleref uri="#Alphanum4" />
					<tag> $._value = $._value + $$._value </tag>
				</item>
					<item>
					hundred
					<tag> $._value = $._value + '00' </tag>
					<ruleref uri="#letter" />
					<tag> $._value = $._value + $$._value </tag>
					<ruleref uri="#Alphanum5" />
					<tag> $._value = $._value + $$._value </tag>
				</item>
				</one-of>
			</item>
			<item>
			double
			<ruleref uri="#digit" />
			<tag> $._value = $._value + $$._value + $$._value </tag>
			<ruleref uri="#Alphanum8" />
			<tag> $._value = $._value + $$._value </tag>
		</item>
			<item>
				<one-of>
					<item> triple </item>
					<item> treble </item>
				</one-of>
				<ruleref uri="#digit" />
				<tag> $._value = $._value + $$._value + $$._value + $$._value </tag>
				<ruleref uri="#Alphanum7" />
				<tag> $._value = $._value + $$._value </tag>
			</item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- NOTE: The set of SimpleAlphanumX rules does NOT support grouping.
 -->
	<!-- $SimpleAlphanum1._value: string -->
	<rule id="SimpleAlphanum1" scope="public">
		<example> one </example>
		<example> a. </example>
		<ruleref uri="#Alphanum1" />
		<tag> $ = $$ </tag>
	</rule>
	<!-- $SimpleAlphanum2._value: string -->
	<rule id="SimpleAlphanum2" scope="public">
		<example> one two </example>
		<example> a. b. </example>
		<example> a. one </example>
		<tag> $._value = '' </tag>
		<item repeat="2">
			<ruleref uri="#Alphanum1" />
			<tag> $._value = $._value + $$._value </tag>
		</item>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $SimpleAlphanum3._value: string -->
	<rule id="SimpleAlphanum3" scope="public">
		<example> one two three </example>
		<example> a. four b. </example>
		<example> a. b. c. </example>
		<tag> $._value = '' </tag>
		<item repeat="3">
			<ruleref uri="#Alphanum1" />
			<tag> $._value = $._value + $$._value </tag>
		</item>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $SimpleAlphanum4._value: string -->
	<rule id="SimpleAlphanum4" scope="public">
		<example> one two three four </example>
		<example> a. b. one one </example>
		<example> a. b. c. d. </example>
		<tag> $._value = '' </tag>
		<item repeat="4">
			<ruleref uri="#Alphanum1" />
			<tag> $._value = $._value + $$._value </tag>
		</item>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $SimpleAlphanum5._value: string -->
	<rule id="SimpleAlphanum5" scope="public">
		<example> one two three four five </example>
		<example> a. b. one one four </example>
		<example> a. b. c. d. e. </example>
		<tag> $._value = '' </tag>
		<item repeat="5">
			<ruleref uri="#Alphanum1" />
			<tag> $._value = $._value + $$._value </tag>
		</item>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $SimpleAlphanum6._value: string -->
	<rule id="SimpleAlphanum6" scope="public">
		<example> one two three four five six </example>
		<example> a. b. one two c. d. </example>
		<example> a. b. c. d. e. f. </example>
		<tag> $._value = '' </tag>
		<item repeat="6">
			<ruleref uri="#Alphanum1" />
			<tag> $._value = $._value + $$._value </tag>
		</item>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $SimpleAlphanum7._value: string -->
	<rule id="SimpleAlphanum7" scope="public">
		<example> one two three four five six seven </example>
		<example> a. b. one two one one c. </example>
		<example> a. b. c. d. e. f. g. </example>
		<tag> $._value = '' </tag>
		<item repeat="7">
			<ruleref uri="#Alphanum1" />
			<tag> $._value = $._value + $$._value </tag>
		</item>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $SimpleAlphanum8._value: string -->
	<rule id="SimpleAlphanum8" scope="public">
		<example> one two three four five six seven eight </example>
		<example> a. b. one two three four c. d. </example>
		<example> a. b. c. d. e. f. g. h. </example>
		<tag> $._value = '' </tag>
		<item repeat="8">
			<ruleref uri="#Alphanum1" />
			<tag> $._value = $._value + $$._value </tag>
		</item>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $SimpleAlphanum9._value: string -->
	<rule id="SimpleAlphanum9" scope="public">
		<example> one two three four five six seven eight nine </example>
		<example> a. b. one two three four c. d. two </example>
		<example> a. b. c. d. e. f. g. h. i. </example>
		<tag> $._value = '' </tag>
		<item repeat="9">
			<ruleref uri="#Alphanum1" />
			<tag> $._value = $._value + $$._value </tag>
		</item>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $SimpleAlphanum10._value: string -->
	<rule id="SimpleAlphanum10" scope="public">
		<example> one two three four five six seven eight nine zero </example>
		<example> a. b. one two three four c. d. two four </example>
		<example> a. b. c. d. e. f. g. h. i. j. </example>
		<tag> $._value = '' </tag>
		<item repeat="10">
			<ruleref uri="#Alphanum1" />
			<tag> $._value = $._value + $$._value </tag>
		</item>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- Digits and Letters
 -->
	<!-- grouped_twodigit

Accepts [10-99].
 -->
	<!-- $grouped_twodigit._value: integer -->
	<rule id="grouped_twodigit" scope="public">
		<example> twenty </example>
		<example> twenty four </example>
		<example> ninety nine </example>
		<tag> low="0"; </tag>
		<one-of>
			<item>
				<item>
					<ruleref uri="#tensfrag" />
					<tag> high = $$._value; </tag>
				</item>
				<item repeat="0-1">
					<ruleref uri="#digit_nonzero" />
					<tag> low = $$._value </tag>
				</item>
				<tag> $._value = '' + high + low </tag>
			</item>
			<item>
				<ruleref uri="#teens" />
				<tag> $._value = '' + $$._value </tag>
			</item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- The twodigit rule supports digit groupings like "twenty four" for "two four".
 -->
	<!-- $twodigit._value: integer -->
	<rule id="twodigit" scope="public">
		<example> zero zero </example>
		<example> zero one </example>
		<example> twenty </example>
		<example> twenty four </example>
		<example> ninety nine </example>
		<tag> low="0"; </tag>
		<one-of>
			<item>
				<ruleref uri="#grouped_twodigit" />
				<tag> $ = $$; </tag>
			</item>
			<item>
				<ruleref uri="#zero" />
				<item>
					<ruleref uri="#digit" />
				</item>
				<tag> $._value = '0' + $$._value </tag>
			</item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $digit._value: integer -->
	<rule id="digit" scope="public">
		<example> zero </example>
		<example> oh </example>
		<example> five </example>
		<tag> $._value = 0 </tag>
		<one-of>
			<item>
				<ruleref uri="#zero" />
			</item>
			<item>
				<ruleref uri="#digit_nonzero" />
			</item>
		</one-of>
		<tag> $._value = $$._value </tag>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $digit_nonzero._value: integer -->
	<rule id="digit_nonzero" scope="public">
		<example> one </example>
		<example> two </example>
		<example> five </example>
		<example> nine </example>
		<one-of>
			<item> one <tag> $._value = 1 </tag> </item>
			<item> two <tag> $._value = 2 </tag> </item>
			<item> three <tag> $._value = 3 </tag> </item>
			<item> four <tag> $._value = 4 </tag> </item>
			<item> five <tag> $._value = 5 </tag> </item>
			<item> six <tag> $._value = 6 </tag> </item>
			<item> seven <tag> $._value = 7 </tag> </item>
			<item> eight <tag> $._value = 8 </tag> </item>
			<item> nine <tag> $._value = 9 </tag> </item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $digit_noOh._value: integer -->
	<rule id="digit_noOh">
		<example> zero </example>
		<example> one </example>
		<example> five </example>
		<one-of>
			<item>
			zero
			<tag> $._value = 0 </tag>
		</item>
			<item>
				<ruleref uri="#digit_nonzero" />
				<tag> $._value = $$._value </tag>
			</item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $zero._value: integer -->
	<rule id="zero">
		<example> zero </example>
		<example> oh </example>
		<one-of>
			<item weight="1.0">zero</item>
			<item weight="0.1">oh</item>
		</one-of>
		<tag> $._value = 0 </tag>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $letter._value: string -->
	<rule id="letter" scope="public">
		<example> a. </example>
		<example> oh </example>
		<example> o. </example>
		<one-of>
			<item> a. <tag> $._value = 'A' </tag> </item>
			<item> b. <tag> $._value = 'B' </tag> </item>
			<item> c. <tag> $._value = 'C' </tag> </item>
			<item> d. <tag> $._value = 'D' </tag> </item>
			<item> e. <tag> $._value = 'E' </tag> </item>
			<item> f. <tag> $._value = 'F' </tag> </item>
			<item> g. <tag> $._value = 'G' </tag> </item>
			<item> h. <tag> $._value = 'H' </tag> </item>
			<item> i. <tag> $._value = 'I' </tag> </item>
			<item> j. <tag> $._value = 'J' </tag> </item>
			<item> k. <tag> $._value = 'K' </tag> </item>
			<item> l. <tag> $._value = 'L' </tag> </item>
			<item> m. <tag> $._value = 'M' </tag> </item>
			<item> n. <tag> $._value = 'N' </tag> </item>
			<item> o. <tag> $._value = 'O' </tag> </item>
			<item> oh <tag> $._value = 'O' </tag> </item>
			<item> p. <tag> $._value = 'P' </tag> </item>
			<item> q. <tag> $._value = 'Q' </tag> </item>
			<item> r. <tag> $._value = 'R' </tag> </item>
			<item> s. <tag> $._value = 'S' </tag> </item>
			<item> t. <tag> $._value = 'T' </tag> </item>
			<item> u. <tag> $._value = 'U' </tag> </item>
			<item> v. <tag> $._value = 'V' </tag> </item>
			<item> w. <tag> $._value = 'W' </tag> </item>
			<item> x. <tag> $._value = 'X' </tag> </item>
			<item> y. <tag> $._value = 'Y' </tag> </item>
			<item> z. <tag> $._value = 'Z' </tag> </item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $letter_digit._value: string -->
	<rule id="letter_digit">
		<example> a. </example>
		<example> oh </example> <!-- letter o. -->
		<example> o. </example>
		<example> zero </example>
		<one-of>
			<item>
				<ruleref uri="#letter" />
			</item>
			<item>
				<ruleref uri="#digit_noOh" />
			</item>
		</one-of>
		<tag> $._value = '' + $$._value </tag>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- Time
 -->
	<!-- For common_time and military_time:
$Time.Hour._value : integer
$Time.Minute._value : integer
$Time.AlternativeHour._value : integer (optional)

For approximated_time:
$Time.ApproximatedTime._value : string
 -->
	<rule id="Time" scope="public">
		<one-of>
			<item>
				<ruleref uri="#common_time" />
				<tag> $ = $$ </tag>
			</item>
			<item weight="0.1">
				<ruleref uri="#military_time" />
				<tag> $ = $$ </tag>
			</item>
			<item>
				<ruleref uri="#approximated_time" />
				<tag> $.ApproximatedTime = $$ </tag>
			</item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $approximated_time._value : string -->
	<rule id="approximated_time">
		<one-of>
			<item> breakfast <tag> $._value = "EarlyMorning" </tag> </item>
			<item> lunch <tag> $._value = "Noon" </tag> </item>
			<item> dinner <tag> $._value = "EarlyEvening" </tag> </item>
			<item> after work <tag> $._value = "EarlyEvening" </tag> </item>
			<item> noon <tag> $._value = "Noon" </tag> </item>
			<item> midnight <tag> $._value = "Midnight" </tag> </item>
			<item> early morning <tag> $._value = "EarlyMorning" </tag> </item>
			<item> late morning <tag> $._value = "LateMorning" </tag> </item>
			<item> early afternoon <tag> $._value = "EarlyAfternoon" </tag> </item>
			<item> late afternoon <tag> $._value = "LateAfternoon" </tag> </item>
			<item> early evening <tag> $._value = "EarlyEvening" </tag> </item>
			<item> late evening <tag> $._value = "LateEvening" </tag> </item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $common_time.Hour._value : integer
$common_time.Minute._value : integer
$common_time.AlternativeHour._value : integer (optional)
 -->
	<rule id="common_time">
		<example> twelve a. m. </example>
		<example> twelve thirty p. m. </example>
		<example> seven o'clock </example>
		<example> two past ten </example>
		<example> a quarter before ten </example>
		<tag> $.Hour = []; $.Minute = []; $.Hour._attributes = []; $.Minute._attributes = []; </tag>
		<one-of>
			<item>
				<ruleref uri="#HourNumber12" />
				<tag> $.Hour = $$ </tag>
				<one-of>
					<item>
						<ruleref uri="#Minute" />
						<tag> $.Minute = $$ </tag>
					</item>
					<item>
						o'clock 
						<tag> $.Minute._value = 0; $.Minute._attributes.text = "o'clock" </tag>
					</item>
					<item>
						<tag> $.Minute._value = 0; </tag>
					</item>
				</one-of>
				<one-of>
					<item>
						<ruleref uri="#AmPm" />
						<tag> 
 <![CDATA[
$.Hour._attributes.text = $.Hour._attributes.text + " " + $$._attributes.text;
$.Hour._value = ($.Hour._value == 12)? 0 : $.Hour._value; 
$.Hour._value = ($$._value=="PM")? $.Hour._value + 12 : $.Hour._value; 
$.Hour._value = (($$._value=="AM") && ($.Hour._value==12))? 0 : $.Hour._value; 
 ]]>
 </tag>
					</item>
					<item>
						<tag>
 <![CDATA[
$.AlternativeHour = []; 
$.AlternativeHour._value = ($.Hour._value < 7)? $.Hour._value : $.Hour._value + 12; 
$.Hour._value = ($.Hour._value != $.AlternativeHour._value)? $.Hour._value : $.Hour._value + 12; 
$.AlternativeHour._value = ($.AlternativeHour._value == 24)? 0 : $.AlternativeHour._value; 
 ]]>
						</tag>
					</item>
				</one-of>
			</item>
			<item>
				<ruleref uri="#HourNumber24" />
				<tag> $.Hour = $$ </tag>
				<ruleref uri="#Minute" />
				<tag> $.Minute = $$ </tag>
			</item>
			<item>
				<one-of>
					<item>
						<ruleref uri="#MinuteEx" />
					</item>
					<item>
						<ruleref uri="#quarter" />
					</item>
				</one-of>
				<tag> $.Minute = $$ </tag>
				<ruleref uri="#BeforeAfter" />
				<ruleref uri="#HourNumber12" />
				<item repeat="0-1"> o'clock </item>
				<tag> <![CDATA[
$.Hour = $$;
$.Minute._attributes.text = $.Minute._attributes.text + " " + $BeforeAfter._attributes.text;
$.Hour._value = ($BeforeAfter._value=="Before")? $.Hour._value - 1 : $.Hour._value; 
$.Hour._value = ($.Hour._value == 0)? 12 : $.Hour._value;
$.Minute._value = ($BeforeAfter._value=="Before")? 60 - $.Minute._value : $.Minute._value;
				]]></tag>
				<one-of>
					<item>
						<ruleref uri="#AmPm" />
						<tag> <![CDATA[
$.Hour._attributes.text = $.Hour._attributes.text + " " + $$._attributes.text;
$.Hour._value = ($$._value=="PM")? $.Hour._value + 12 : $.Hour._value; 
$.Hour._value = (($$._value=="AM") && ($.Hour._value==12))? 0 : $.Hour._value;
 ]]> </tag>
					</item>
					<item>
						<tag> <![CDATA[
$.AlternativeHour = []; 
$.AlternativeHour._value = ($.Hour._value < 7)? $.Hour._value : $.Hour._value + 12; 
$.Hour._value = ($.Hour._value != $.AlternativeHour._value)? $.Hour._value : $.Hour._value + 12; 
$.AlternativeHour._value = ($.AlternativeHour._value == 24)? 0 : $.AlternativeHour._value; 
				 ]]></tag>
					</item>
				</one-of>
			</item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $quarter._value : integer -->
	<rule id="quarter">
		<example> quarter </example>
		<example> a quarter </example>
		<example> half </example>
		<one-of>
			<item> 
				<item repeat="0-1"> a </item>
				quarter
				<tag> $._value = 15 </tag> 
			</item>
			<item> 
				half
				<tag> $._value = 30 </tag> 
			</item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $AmPm._value : string -->
	<rule id="AmPm">
		<example> a. m. </example>
		<example> p. m. </example>
		<example> in the morning </example>
		<example> in the afternoon </example>
		<example> tonight </example>
		<example> at night </example>
		<example> in the evening </example>
		<one-of>
			<item> a. m. <tag> $._value = "AM" </tag> </item>
			<item> p. m. <tag> $._value = "PM" </tag> </item>
			<item> tonight <tag> $._value = "PM" </tag> </item>
			<item> at night <tag> $._value = "PM" </tag> </item>
			<item>
				in the
				<one-of>
					<item> morning <tag> $._value = "AM" </tag> </item>
					<item> afternoon <tag> $._value = "PM" </tag> </item>
					<item> evening <tag> $._value = "PM" </tag> </item>
				</one-of>
			</item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $BeforeAfter._value : string -->
	<rule id="BeforeAfter">
		<example> after </example>
		<example> past </example>
		<example> until </example>
		<example> to </example>
		<one-of>
			<item> after <tag> $._value = "After" </tag> </item>
			<item> past <tag> $._value = "After" </tag> </item>
			<item> before <tag> $._value = "Before" </tag> </item>
			<item> till <tag> $._value = "Before" </tag> </item>
			<item> until <tag> $._value = "Before" </tag> </item>
			<item> to <tag> $._value = "Before" </tag> </item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $Minute._value : integer -->
	<rule id="Minute">
		<example> oh one </example>
		<example> ten </example>
		<example> fifteen </example>
		<example> twenty </example>
		<example> fifty nine </example>
		<one-of>
			<item>
				<ruleref uri="#teens" />
				<tag> $ = $$ </tag>
			</item>
			<item>
				<one-of>
					<item> oh </item>
					<item> zero </item>
				</one-of>
				<ruleref uri="#digit_nonzero" />
				<tag> $ = $$ </tag>
			</item>
			<item>
				<one-of>
					<item> twenty <tag> $._value = 20 </tag> </item>
					<item> thirty <tag> $._value = 30 </tag> </item>
					<item> forty <tag> $._value = 40 </tag> </item>
					<item> fifty <tag> $._value = 50 </tag> </item>
				</one-of>
				<item repeat="0-1">
					<ruleref uri="#digit_nonzero" />
					<tag> $._value = $._value + $$._value </tag>
				</item>
			</item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $MinuteEx._value : integer -->
	<rule id="MinuteEx">
		<example> a minute </example>
		<example> one minute </example>
		<example> two minutes </example>
		<example> twenty five </example>
		<example> fifty nine minutes </example>
		<one-of>
			<item>
				a minute
				<tag> $._value = 1 </tag>
			</item>
			<item>
				<ruleref uri="#onesfrag" />
				<tag> $._value = $$._value </tag>
				<item repeat="0-1">
					<one-of>
						<item> minute </item>
						<item> minutes </item>
					</one-of>
				</item>
			</item>
			<item>
				<one-of>
					<item> twenty <tag> $._value = 20 </tag> </item>
					<item> thirty <tag> $._value = 30 </tag> </item>
					<item> forty <tag> $._value = 40 </tag> </item>
					<item> fifty <tag> $._value = 50 </tag> </item>
				</one-of>
				<item repeat="0-1">
					<ruleref uri="#digit_nonzero" />
					<tag> $._value = $._value + $$._value </tag>
				</item>
				<item repeat="0-1"> 
					minutes
				</item>
			</item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $HourNumber12._value : integer -->
	<rule id="HourNumber12">
		<example> one </example>
		<example> two </example>
		<example> twelve </example>
		<ruleref uri="#one2twelve" />
		<tag> $ = $$ </tag>
	</rule>
	<!-- $HourNumber24._value : integer -->
	<rule id="HourNumber24">
		<example> zero </example>
		<example> thirteen </example>
		<example> twenty three </example>
		<one-of>
			<item> zero <tag> $._value = 0 </tag> </item>
			<item> thirteen <tag> $._value = 13 </tag> </item>
			<item> fourteen <tag> $._value = 14 </tag> </item>
			<item> fifteen <tag> $._value = 15 </tag> </item>
			<item> sixteen <tag> $._value = 16 </tag> </item>
			<item> seventeen <tag> $._value = 17 </tag> </item>
			<item> eighteen <tag> $._value = 18 </tag> </item>
			<item> nineteen <tag> $._value = 19 </tag> </item>
			<item> twenty <tag> $._value = 20 </tag> 
				<item repeat="0-1">
					<one-of>
						<item> one <tag> $._value = 21 </tag> </item>
						<item> two <tag> $._value = 22 </tag> </item>
						<item> three <tag> $._value = 23 </tag> </item>
					</one-of>
				</item>
			</item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $military_time_hours._value : integer -->
	<rule id="military_time_hours">
		<example> zero </example>
		<example> zero four </example>
		<example> oh five </example>
		<example> eleven </example>
		<example> twenty </example>
		<example> twenty three </example>
		<one-of>
			<item>
				<one-of>
					<item> zero </item>
					<item> oh </item>
				</one-of>
				<one-of>
					<item>
						<ruleref uri="#digit" />
						<tag> $._value = $$._value </tag>
					</item>
					<item>
						<tag> $._value = 0 </tag>
					</item>
				</one-of>
			</item>
			<item>
				<ruleref uri="#teens" />
				<tag> $._value = $$._value </tag>
			</item>
			<item>
				twenty
			<one-of>
					<item>
						<tag> $._value = 20 </tag>
					</item>
					<item> one <tag> $._value = 21 </tag> </item>
					<item> two <tag> $._value = 22 </tag> </item>
					<item> three <tag> $._value = 23 </tag> </item>
				</one-of>
		</item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $military_time_minutes._value : integer -->
	<rule id="military_time_minutes">
		<example> oh five </example>
		<example> fifteen </example>
		<example> twenty five </example>
		<example> fifty nine </example>
		<example> hundred </example>
		<one-of>
			<item>
				<one-of>
					<item> zero </item>
					<item> oh </item>
				</one-of>
				<item>
					<ruleref uri="#digit_nonzero" />
				</item>
				<tag> $._value = $$._value </tag>
			</item>
			<item>
				<ruleref uri="#teens" />
				<tag> $._value = $$._value </tag>
			</item>
			<item>
				<one-of>
					<item> twenty <tag> $._value = 20 </tag> </item>
					<item> thirty <tag> $._value = 30 </tag> </item>
					<item> forty <tag> $._value = 40 </tag> </item>
					<item> fifty <tag> $._value = 50 </tag> </item>
				</one-of>
				<item repeat="0-1">
					<ruleref uri="#digit_nonzero" />
					<tag> $._value = $._value + $$._value </tag>
				</item>
			</item>
			<item>
				hundred
			<tag> $._value = 0 </tag>
		</item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $military_time.Hour._value : integer 
$military_time.Minute._value : integer 
 -->
	<rule id="military_time">
		<example> oh thirty hours </example>
		<example> oh five hundred hours </example>
		<example> eleven twelve </example>
		<example> twenty four hundred hours </example>
		<tag> $.Hour = []; $.Minute = []; $.Hour._attributes = []; $.Minute._attributes = []; </tag>
		<one-of>
			<item>
				<ruleref uri="#military_time_hours" />
				<tag> $.Hour = $$ </tag>
				<ruleref uri="#military_time_minutes" />
				<tag> $.Minute = $$ </tag>
			</item>
			<item>
				twenty four hundred
			<tag> $.Hour._value = 0; $.Hour._attributes.text = "twenty four";
					$.Minute._value = 0; $.Minute._attributes.text = "hundred"; </tag>
		</item>
		</one-of>
		<item repeat="0-1"> hours </item>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- TimeBlock
 -->
	<!-- For ApproximatedTimeBlock:
$TimeBlock.ApproximatedTimeBlock._value : string 

For ClosedTimeBlock:
$TimeBlock.StartTime: Time
$TimeBlock.EndTime: Time

For OpenTimeBlock:
$TimeBlock.ReferenceTime: Time 
$TimeBlock.TimePrep : string
 -->
	<rule id="TimeBlock" scope="public">
		<example> in the morning </example>
		<example> around noon </example>
		<example> afternoon </example>
		<example> right after lunch </example>
		<example> after three p. m. </example>
		<example> before eight o'clock in the morning </example>
		<example> start from four thirty to eight </example>
		<example> from noon to five thirty p. m. </example>
		<example> from eight and five </example>
		<one-of>
			<item>
				<ruleref uri="#ApproximatedTimeBlock" />
				<tag> $.ApproximatedTimeBlock = $$ </tag>
			</item>
			<item>
				<ruleref uri="#OpenTimeBlock" />
				<tag> $ = $$ </tag>
			</item>
			<item>
				<ruleref uri="#ClosedTimeBlock" />
				<tag> $ = $$ </tag>
			</item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $ApproximatedTimeBlock._value : string -->
	<rule id="ApproximatedTimeBlock">
		<example> in the morning </example>
		<example> around noon </example>
		<example> afternoon </example>
		<example> in evening </example>
		<example> any time </example>
		<one-of>
			<item> 
			<item repeat="0-1"> in </item> 
			<item repeat="0-1"> the </item>
				morning 
			<tag> $._value = "Morning" </tag>
		</item>
			<item> 
			<one-of>
					<item> at </item>
					<item> around </item>
					<item></item>
				</one-of>
				noon 
			<tag> $._value = "Noon" </tag>
		</item>
			<item> 
				midday
			<tag> $._value = "Midday" </tag> 
		</item>
			<item> 
			<item repeat="0-1"> in </item>
			<item repeat="0-1"> the </item>
				afternoon 
			<tag> $._value = "Afternoon" </tag>
		</item>
			<item> 
			<item repeat="0-1"> in </item> 
			<item repeat="0-1"> the </item> 
				evening 
			<tag> $._value = "Evening" </tag> 
		</item>
			<item> 
			<item repeat="0-1"> in </item>
			<item repeat="0-1"> the </item> 
				rest of the day
			<tag> $._value = "RestOfTheDay" </tag>
		</item>
			<item> 
				any time
			<tag> $._value = "WholeDay" </tag>
		</item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $ClosedTimeBlock.StartTime: Time
$ClosedTimeBlock.EndTime: Time
 -->
	<rule id="ClosedTimeBlock">
		<example> start from four thirty to eight </example>
		<example> from noon to five thirty p. m. </example>
		<example> from eight and five </example>
		<item>
			<one-of>
				<item>
					<one-of>
						<item> start </item>
						<item> starts </item>
						<item></item>
					</one-of>
					from 
				</item>
				<item> between </item>
			</one-of>
			<ruleref uri="#Time" />
			<tag> $.StartTime = $$; </tag>
			<one-of>
				<item> to </item>
				<item> till </item>
				<item> until </item>
				<item> and </item>
			</one-of>
			<ruleref uri="#Time" />
			<tag> $.EndTime = $$; </tag>
		</item>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $OpenTimeBlock.ReferenceTime: Time 
$OpenTimeBlock.TimePrep: string
 -->
	<rule id="OpenTimeBlock">
		<example> right after lunch </example>
		<example> after three p. m. </example>
		<example> before eight o'clock in the morning </example>
		<one-of>
			<item>
				<one-of>
					<item> right </item>
					<item> just </item>
				</one-of>
				before
				<tag> $.TimePrep = "RightBefore" </tag> 
		</item>
			<item>
				<one-of>
					<item> before </item>
					<item> till </item>
					<item> until </item>
				</one-of>
				<tag> $.TimePrep = "Before" </tag>
			</item>
			<item> 
				<one-of>
					<item> right </item>
					<item> just </item>
				</one-of>
				after 
				<tag> $.TimePrep = "RightAfter" </tag>
		</item>
			<item>
				after
				<tag> $.TimePrep = "After" </tag>
		</item>
		</one-of>
		<ruleref uri="#Time" />
		<tag> $.ReferenceTime = $$ </tag>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- Currency
 -->
	<!-- $Currency.Value._value : string
$Currency.Unit._value : string (USD)
$Currency.AmbiguityScalingFactor : integer
 -->
	<rule id="Currency" scope="public">
		<example> two dollars and ten cents </example>
		<example> two dollars ninety nine </example>
		<example> a dollar and a cent </example>
		<example> twenty five cents </example>
		<example> two point five million </example>
		<example> two ninety nine </example>
		<example> two hundred ninety nine </example>
		<example> a quarter </example>
		<example> three dollars and two quarters </example>
		<example> a buck </example>
		<example> three bucks </example>
		<example> one hundred twenty five fifty </example>
		<example> one hundred fifty fifty </example>
		<example> one ten fifty </example>
		<example> one twelve twenty five </example>
		<tag> $.Unit="USDollars" </tag>
		<one-of>
			<item>
				<ruleref uri="#common_natural_number" />
				<one-of>
					<item>
						<one-of>
							<item> dollar </item>
							<item> dollars </item>
						</one-of>
						<tag> $.Value = $$ </tag>
						<item repeat="0-1">
							<item repeat="0-1"> and </item>
							<one-of>
								<item>
									<ruleref uri="#common_number_0_to_99a" />
									<one-of>
										<item> cent </item>
										<item> cents </item>
									</one-of>
									<tag> $.Value._value = $.Value._value + 0.01 * $$._value </tag>
								</item>
								<item>
									<ruleref uri="#twodigit" />
									<tag> $.Value._value = $.Value._value + 0.01 * parseInt($$._value, 10) </tag>
								</item>
								<item>
									<one-of>
										<item> a quarter <tag> $.Value._value = $.Value._value + 0.25 </tag> </item>
										<item> one quarter <tag> $.Value._value = $.Value._value + 0.25 </tag> </item>
										<item> two quarters <tag> $.Value._value = $.Value._value + 0.50 </tag> </item>
										<item> three quarters <tag> $.Value._value = $.Value._value + 0.75 </tag> </item>
									</one-of>
								</item>
							</one-of>
						</item>
					</item>
					<item>
						<one-of>
							<item> cent </item>
							<item> cents </item>
						</one-of>
						<tag> $.Value = []; $.Value._attributes = []; $.Value._value = 0.01 * $$._value </tag>
					</item>
					<item>
						<one-of>
							<item> buck </item>
							<item> bucks </item>
						</one-of>
						<tag> $.Value = $$ </tag>
					</item>
				</one-of>
			</item>
			<item>
				<ruleref uri="#Currency_flexible_number" />
				<one-of>
					<item> dollar </item>
					<item> dollars </item>
					<item></item>
				</one-of>
				<tag> $.Value = $$ </tag>
			</item>
			<item>
				<one-of>
					<item> a quarter <tag> $.Value = []; $.Value._value = 0.25 </tag> </item>
					<item> one quarter <tag> $.Value = []; $.Value._value = 0.25 </tag> </item>
					<item> two quarters <tag> $.Value = []; $.Value._value = 0.50 </tag> </item>
					<item> three quarters <tag> $.Value = []; $.Value._value = 0.75 </tag> </item>
				</one-of>
			</item>
			<item>
				<one-of>
					<item>
						<ruleref uri="#natural_number" />
						<tag> $.Value = $$ </tag>
					</item>
					<item>
						<tag> $.Value = {} </tag>
						<tag> $.Value._value = 0; </tag>
						<one-of>
							<item>
								<item>
									<ruleref uri="#digit" />
									<tag> $.Value._value += $$._value; </tag>
								</item>
								<ruleref uri="#twodigit" />
								<tag> $.Value._value = parseInt($.Value._value) * 100 + parseInt($$._value); </tag>
							</item>
							<item>
								<ruleref uri="#common_number_0_to_99" />
								<tag> $.Value._value = $$._value; </tag>
							</item>
						</one-of>
					</item>
				</one-of>
				<ruleref uri="#twodigit" />
				<tag> if ($.Value._value % 100 != 0) $.Value._value = $.Value._value + 0.01 * parseInt($$._value, 10); else $.Value._value += parseInt($$._value, 10) </tag>
				<tag> if ($.Value._value &lt; 100 ) $.AmbiguityScalingFactor = 100; </tag>
			</item>
		</one-of>
		<tag> <![CDATA[
$.Value._attributes.text = $recognized.text;
toKeep = Math.round($.Value._value * 100); wholePart = Math.floor(toKeep / 100); cents = toKeep % 100; 
var centString = "00" + cents; centString=centString.substr(centString.length-2, 2);
$.Value._value = wholePart + "." + centString;
	]]></tag>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $Currency_flexible_number._value : string (USD)
 -->
	<rule id="Currency_flexible_number">
		<example> a billion </example>
		<example> a hundred million </example>
		<example> a quarter billion </example>
		<example> three quarters of a trillion </example>
		<example> point five three billion </example>
		<example> two hundred point five million </example>
		<example> two hundred point five thousand million </example>
		<example> two point five hundred million </example>
		<example> eleven hundred billion </example>
		<one-of>
			<item>
				<ruleref uri="#natural_number" />
				<tag> $ = $$ </tag>
			</item>
			<item>
				<one-of>
					<item>
					a 
					<tag> $._value = 1 </tag>
					<one-of>
							<item>
							thousand <tag> $._value = $._value * 1000 </tag> 
						</item>
							<item>
							hundred <tag> $._value = $._value * 100 </tag> 
						</item>
							<item></item>
						</one-of>
				</item>
					<item>
						<one-of>
							<item> point </item>
							<item> decimal </item>
						</one-of>
						<ruleref uri="#digit_list" />
						<tag> $._value = parseFloat( "0." + $$._value); </tag>
					</item>
					<item>
						<ruleref uri="#popular_simple_fractions" />
						<tag> $._value = $$._value; </tag>
						<item repeat="0-1">
						of a 
					</item>
					</item>
					<item>
						<ruleref uri="#cardinal_999" />
						<tag> $._value = $$._value </tag>
						<one-of>
							<item>
								<one-of>
									<item> point </item>
									<item> decimal </item>
								</one-of>
								<ruleref uri="#digit_list" />
								<tag> $._value = parseFloat( $._value + "." + $$._value); </tag>
							</item>
							<item>
							and
							<ruleref uri="#popular_simple_fractions" /> 
							<tag> $._value = $._value + $$._value; </tag>
						</item>
							<item></item>
						</one-of>
						<one-of>
							<item>
							thousand <tag> $._value = $._value * 1000 </tag> 
						</item>
							<item></item>
						</one-of>
					</item>
					<item>
					<ruleref uri="#cardinal_1_to_99" /> 
					<tag> $._value = $$._value </tag>
					<one-of>
							<item>
								<one-of>
									<item> point </item>
									<item> decimal </item>
								</one-of>
								<ruleref uri="#digit_list" />
								<tag> $._value = parseFloat( $._value + "." + $$._value); </tag>
							</item>
							<item>
							and
							<ruleref uri="#popular_simple_fractions" /> 
							<tag> $._value = $._value + $$._value; </tag>
						</item>
							<item></item>
						</one-of>
					hundred <tag> $._value = $._value * 100 </tag> 
				</item>
				</one-of>
				<one-of>
					<item> thousand <tag> $._value = $._value * 1000 </tag> </item>
					<item> million <tag> $._value = $._value * 1000000 </tag> </item>
					<item> billion <tag> $._value = $._value * 1000000000 </tag> </item>
					<item> trillion <tag> $._value = $._value * 1000000000000 </tag> </item>
				</one-of>
			</item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- Duration
 -->
	<!-- $DateBlockDuration.Value._value : integer
$DateBlockDuration.Unit._value : string
 -->
	<rule id="DateBlockDuration" scope="public">
		<example> two days </example>
		<example> a week </example>
		<example> three months </example>
		<item>
			<ruleref uri="#common_natural_number" />
			<tag> $.Value = $$ </tag>
			<one-of>
				<item> year <tag> $.Unit = "Years" </tag> </item>
				<item> years <tag> $.Unit = "Years" </tag> </item>
				<item> month <tag> $.Unit = "Months" </tag> </item>
				<item> months <tag> $.Unit = "Months" </tag> </item>
				<item> week <tag> $.Unit = "Weeks" </tag> </item>
				<item> weeks <tag> $.Unit = "Weeks" </tag> </item>
				<item> day <tag> $.Unit = "Days" </tag> </item>
				<item> days <tag> $.Unit = "Days" </tag> </item>
			</one-of>
		</item>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $quarters._value : integer -->
	<rule id="quarters">
		<example> half </example>
		<example> a half </example>
		<example> one half </example>
		<example> a quarter </example>
		<example> one quarter </example>
		<example> two quarters </example>
		<example> three quarters </example>
		<one-of>
			<item> 
				<one-of>
					<item></item>
					<item> a </item>
					<item> one </item>
				</one-of>
				half
				<tag> $._value = 30 </tag>
			</item>
			<item> 
				<one-of>
					<item></item>
					<item> a </item>
					<item> one </item>
				</one-of>
				quarter
				<tag> $._value = 15 </tag>
			</item>
			<item> 
				two quarters
				<tag> $._value = 30 </tag>
			</item>
			<item> 
				three quarters
				<tag> $._value = 45 </tag>
			</item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $TimeBlockDuration.Hours._value : integer
$TimeBlockDuration.Minutes._value : integer
 -->
	<rule id="TimeBlockDuration" scope="public">
		<example> five hours </example>
		<example> ninety minutes </example>
		<example> an hour and thirty minutes </example>
		<example> two hours and a half </example>
		<example> two and a half hours </example>
		<example> half an hour </example>
		<example> three quarters of an hour </example>
		<tag> $.Hours = []; $.Minutes = []; </tag>
		<one-of>
			<item>
				<ruleref uri="#common_natural_number" />
				<one-of>
					<item> minute </item>
					<item> minutes </item>
				</one-of>
				<tag><![CDATA[
$.Minutes._value = $$._value; $.Hours._value = 0;
$.Hours._attributes = $._attributes; $.Minutes._attributes = $._attributes;
$.Hours._value += Math.floor($.Minutes._value / 60);
$.Minutes._value -= Math.floor($.Minutes._value / 60) * 60;]]></tag>
			</item>
			<item>
				<ruleref uri="#common_natural_number" />
				<tag> $.Hours = $$ </tag>
				<one-of>
					<item> hour </item>
					<item> hours </item>
				</one-of>
				<item repeat="0-1"> and </item>
				<one-of>
					<item>
						<ruleref uri="#MinuteEx" />
						<tag> $.Minutes = $$ </tag>
					</item>
					<item>
						<ruleref uri="#quarters" />
						<tag> $.Minutes = $$ </tag>
					</item>
					<item>
						<tag> $.Minutes._value = 0; </tag>
					</item>
				</one-of>
			</item>
			<item>
			<ruleref uri="#quarters" />
			<tag> $.Minutes = $$ </tag>
			<item repeat="0-1"> of </item>
				an hour
			<tag> $.Hours._value = 0 </tag>
		</item>
			<item>
			one half hour
			<tag> $.Minutes._value = 30; $.Hours._value = 0 </tag>
		</item>
			<item>
			<ruleref uri="#common_natural_number" />
			<tag> $.Hours = $$ </tag>
				and
			<ruleref uri="#quarters" />
			<tag> $.Minutes = $$ </tag>
				hours
		</item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- USSocialSecurity Numbers
 -->
	<!-- $USSocialSecurity._value : string -->
	<rule id="USSocialSecurity" scope="public">
		<example> nine eight seven zero zero six five four three </example>
		<item>
			<ruleref uri="#Digit3" />
			<tag> $._value = $$._value </tag>
			<ruleref uri="#Digit2" />
			<tag> $._value = $._value + $$._value </tag>
			<ruleref uri="#Digit4" />
			<tag> $._value = $._value + $$._value </tag>
		</item>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- USPhoneNumber
 -->
	<!-- For Regular phone numbers:
$USPhoneNumber.AreaCode._value : string (optional)
$USPhoneNumber.LocalNumber._value : string 
$USPhoneNumber.Extension._value : string (optional)

For X11:
$USPhoneNumber.X11._value : string 
 -->
	<rule id="USPhoneNumber" scope="public">
		<example> nine one one </example>
		<example> one two three four five six seven </example>
		<example> two oh six twelve hundred </example>
		<example> four two five two oh six twelve hundred </example>
		<example> one eight hundred seven four seven two one two two extension twelve hundred </example>
		<one-of>
			<item> 
			<ruleref uri="#digit" />
				one one
			<tag> $.X11 = $$; $.X11._value = $$._value + "11"; $.X11._attributes.text += " one one";</tag>
		</item>
			<item>
				<one-of>
					<item>
						<item repeat="0-1"> one </item>
						<ruleref uri="#Digit3" />
						<tag> $.AreaCode= $$ </tag>
					</item>
					<item></item>
				</one-of>
				<ruleref uri="#Digit3" />
				<tag> $.LocalNumber = []; $.LocalNumber._value = $$._value; $.LocalNumber._attributes = $$._attributes; </tag>
				<ruleref uri="#Digit4" />
				<tag> $.LocalNumber._value = $.LocalNumber._value + $$._value; $.LocalNumber._attributes.text = $.LocalNumber._attributes.text + " " + $$._attributes.text </tag>
				<one-of>
					<item>
						extension
					<item repeat="0-1"> number </item>
					<one-of>
							<item>
								<ruleref uri="#Digit1" />
							</item>
							<item>
								<ruleref uri="#Digit2" />
							</item>
							<item>
								<ruleref uri="#Digit3" />
							</item>
							<item>
								<ruleref uri="#Digit4" />
							</item>
							<item>
								<ruleref uri="#Digit5" />
							</item>
						</one-of>
					<tag> $.Extension = $$ </tag>
				</item>
					<item></item>
				</one-of>
			</item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- Credit Cards
 -->
	<!-- $CreditCardNumber._attributes.name: string
$CreditCardNumber._value: string
$CreditCardNumber._attributes.luhnValidation: string ("true", "false")
 -->
	<rule id="CreditCardNumber" scope="public">
		<example> fifty one twenty twenty four sixty two one nine oh five three one one </example>
		<example> four one two zero one one one one oh oh one two six one two five </example>
		<example> three oh oh five one two three four five six seven eight two oh</example>
		<one-of>
			<item>
				<ruleref uri="#VisaCardNumber" />
			</item>
			<item>
				<ruleref uri="#MasterCardNumber" />
			</item>
			<item>
				<ruleref uri="#AmexCardNumber" />
			</item>
			<item>
				<ruleref uri="#DiscoverCardNumber" />
			</item>
			<item>
				<ruleref uri="#DinersClubCardNumber" />
			</item>
		</one-of>
		<tag> $ = $$ </tag>
	</rule>
	<!-- $VisaCardNumber._attributes.name: string "Visa" 
$VisaCardNumber._value: string 
$VisaCardNumber._attributes.luhnValidation: string ("true", "false")
 -->
	<rule id="VisaCardNumber" scope="public">
		<example> forty four twenty four oh one two three four five six seven eight one two three</example>
		<example> four one two three one two three four one two three four one two three four </example>
		<one-of>
			<item> four
				<ruleref uri="#Digit3" />
				<tag> $._value = "4" + $$._value </tag>
			</item>
			<item> forty
				<one-of>
					<item>
						<ruleref uri="#digit_nonzero" />
						<tag> $._value = "4" + $$._value </tag>
					</item>
					<item>
						<tag> $._value = "40" </tag>
					</item>
				</one-of>
				<one-of>
					<item>
						<ruleref uri="#twodigit" />
						<tag> $._value = $._value + $$._value </tag>
					</item>
					<item>
						hundred
						<tag> $._value = $._value + "00" </tag>
					</item>
				</one-of>
			</item>
			<item> four thousand
				<tag> $._value = "4000" </tag>
			</item>
		</one-of>
		<ruleref uri="#Digit4" />
		<tag> $._value = $._value + $$._value </tag>
		<ruleref uri="#Digit4" />
		<tag> $._value = $._value + $$._value </tag>
		<ruleref uri="#Digit4" />
		<tag> $._value = $._value + $$._value </tag>
		<tag> <![CDATA[
	var aString = $._value.toString();
	 var sum=0; var evenDigit=0; var digit;var length=aString.length;
	 for (i=length-1; i >= 0; i--) {
		 digit = aString.charCodeAt(i) - 48;
		 if (evenDigit == 1)
	 if (digit > 4) sum += 1 + 2 * (digit - 5); 
	 else sum += 2 * digit; 
	 else sum += digit;
	 evenDigit = 1 - evenDigit;
	 }
	 if (sum % 10 != 0)
	 $._attributes.luhnValidation = "false";
	else
	 $._attributes.luhnValidation = "true";
	 ]]>
	 </tag>
		<tag> $._attributes.name = "Visa"; $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $MasterCardNumber._attributes.name: string "Master" 
$MasterCardNumber._value: string 
$MasterCardNumber._attributes.luhnValidation: string ("true", "false")
 -->
	<rule id="MasterCardNumber" scope="public">
		<example> five three seven oh one two three four five six seven eight one two three four </example>
		<example> fifty four twenty four oh one two three four five six seven eight one two three </example>
		<example> five one two three one two three four one two three four one two three four </example>
		<one-of>
			<item> five
				<one-of>
					<item>
						double
						<one-of>
							<item> one <tag> $._value = "511" </tag> </item>
							<item> two <tag> $._value = "522" </tag> </item>
							<item> three <tag> $._value = "533" </tag> </item>
							<item> four <tag> $._value = "544" </tag> </item>
							<item> five <tag> $._value = "555" </tag> </item>
						</one-of>
						<ruleref uri="#digit" />
						<tag> $._value = $._value + $$._value </tag> 
					</item>
					<item>
						<one-of>
							<item> triple </item>
							<item> treble </item>
						</one-of>
						<one-of>
							<item> one <tag> $._value = "5111" </tag> </item>
							<item> two <tag> $._value = "5222" </tag> </item>
							<item> three <tag> $._value = "5333" </tag> </item>
							<item> four <tag> $._value = "5444" </tag> </item>
							<item> five <tag> $._value = "5555" </tag> </item>
						</one-of>
					</item>
				</one-of>
			</item>
			<item>
				<one-of>
					<item> five </item>
					<item> fifty </item>
				</one-of>
				<one-of>
					<item> one <tag> $._value = "51" </tag> </item>
					<item> two <tag> $._value = "52" </tag> </item>
					<item> three <tag> $._value = "53" </tag> </item>
					<item> four <tag> $._value = "54" </tag> </item>
					<item> five <tag> $._value = "55" </tag> </item>
				</one-of>
				<one-of>
					<item>
						<ruleref uri="#Digit2" />
						<tag> $._value = $._value + $$._value </tag>
					</item>
					<item>
						hundred
						<tag> $._value = $._value + "00" </tag>
					</item>
				</one-of>
			</item>
		</one-of>
		<ruleref uri="#Digit4" />
		<tag> $._value = $._value + $$._value </tag>
		<ruleref uri="#Digit4" />
		<tag> $._value = $._value + $$._value </tag>
		<ruleref uri="#Digit4" />
		<tag> $._value = $._value + $$._value </tag>
		<tag> <![CDATA[
	var aString = $._value.toString();
	 var sum=0; var evenDigit=0; var digit;var length=aString.length;
	 for (i=length-1; i >= 0; i--) {
		 digit = aString.charCodeAt(i) - 48;
		 if (evenDigit == 1)
	 if (digit > 4) sum += 1 + 2 * (digit - 5); 
	 else sum += 2 * digit; 
	 else sum += digit;
	 evenDigit = 1 - evenDigit;
	 }
	 if (sum % 10 != 0)
	 $._attributes.luhnValidation = "false";
	else
	 $._attributes.luhnValidation = "true";
	 ]]>
	 </tag>
		<tag> $._attributes.name = "Master"; $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $AmexCardNumber._attributes.name: string "Amex" 
$AmexCardNumber._value: string 
$AmexCardNumber._attributes.luhnValidation: string ("true", "false")
 -->
	<rule id="AmexCardNumber" scope="public">
		<example> thirty four eleven one two three four five six one two three four five </example>
		<example> thirty seven hundred one two three four five six one two three four five </example>
		<example> three seven oh oh one two three four five six one two three four five </example>
		<one-of>
			<item> three </item>
			<item> thirty </item>
		</one-of>
		<one-of>
			<item> four <tag> $._value = "34" </tag> </item>
			<item> seven <tag> $._value = "37" </tag> </item>
		</one-of>
		<one-of>
			<item>
				<ruleref uri="#Digit2" />
				<tag> $._value = $._value + $$._value </tag>
			</item>
			<item> hundred 
				<tag> $._value = $._value + "00" </tag>
			</item>
		</one-of>
		<ruleref uri="#Digit6" />
		<tag> $._value = $._value + $$._value </tag>
		<ruleref uri="#Digit5" />
		<tag> $._value = $._value + $$._value </tag>
		<tag> <![CDATA[
	var aString = $._value.toString();
	 var sum=0; var evenDigit=0; var digit;var length=aString.length;
	 for (i=length-1; i >= 0; i--) {
		 digit = aString.charCodeAt(i) - 48;
		 if (evenDigit == 1)
	 if (digit > 4) sum += 1 + 2 * (digit - 5); 
	 else sum += 2 * digit; 
	 else sum += digit;
	 evenDigit = 1 - evenDigit;
	 }
	 if (sum % 10 != 0)
	 $._attributes.luhnValidation = "false";
	else
	 $._attributes.luhnValidation = "true";
	 ]]>
	 </tag>
		<tag> $._attributes.name = "Amex"; $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $DiscoverCardNumber._attributes.name: string "Discover" 
$DiscoverCardNumber._value: string 
$DiscoverCardNumber._attributes.luhnValidation: string ("true", "false")
 -->
	<rule id="DiscoverCardNumber" scope="public">
		<example> sixty eleven one two three four one two three four one two three four </example>
		<example> six zero one one one two three four one two three four one two three four </example>
		<one-of>
			<item> sixty </item>
			<item> six zero </item>
			<item> six oh</item>
		</one-of>
		<one-of>
			<item> eleven </item>
			<item> one one </item>
		</one-of>
		<ruleref uri="#Digit4" />
		<tag> $._value = "6011" + $$._value </tag>
		<ruleref uri="#Digit4" />
		<tag>$._value = $._value + $$._value </tag>
		<ruleref uri="#Digit4" />
		<tag>$._value = $._value + $$._value </tag>
		<tag> <![CDATA[
	var aString = $._value.toString();
	 var sum=0; var evenDigit=0; var digit;var length=aString.length;
	 for (i=length-1; i >= 0; i--) {
		 digit = aString.charCodeAt(i) - 48;
		 if (evenDigit == 1)
	 if (digit > 4) sum += 1 + 2 * (digit - 5); 
	 else sum += 2 * digit; 
	 else sum += digit;
	 evenDigit = 1 - evenDigit;
	 }
	 if (sum % 10 != 0)
	 $._attributes.luhnValidation = "false";
	else
	 $._attributes.luhnValidation = "true";
	 ]]>
	 </tag>
		<tag> $._attributes.name = "Discover"; $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $DinersClubCardNumber._attributes.name: string "DinersClub" 
$DinersClubCardNumber._value: string 
$DinersClubCardNumber._attributes.luhnValidation: string ("true", "false")
 -->
	<rule id="DinersClubCardNumber" scope="public">
		<example> three oh oh five one two three four five six seven eight two oh </example>
		<example> thirty eleven one two three four five six seven eight two oh </example>
		<example> thirty forty five one two three four five six seven eight two oh </example>
		<example> thirty six hundred one two three four five six seven eight two oh </example>
		<example> thirty six ninety nine one two three four five six seven eight two oh </example>
		<example> three eight one one four zero one one four zero one one four zero </example>
		<one-of>
			<item>
				<one-of>
					<item> three zero </item>
					<item> three oh </item>
					<item> thirty </item>
				</one-of>
				<one-of>
					<item>
						<one-of>
							<item> zero <tag> $._value = "300" </tag> </item>
							<item> oh <tag> $._value = "300" </tag> </item>
							<item> one <tag> $._value = "301" </tag> </item>
							<item> two <tag> $._value = "302" </tag> </item>
							<item> three <tag> $._value = "303" </tag> </item>
							<item> four <tag> $._value = "304" </tag> </item>
							<item> five <tag> $._value = "305" </tag> </item>
						</one-of>
						<ruleref uri="#digit" />
						<tag> $._value = $._value + $$._value </tag>
					</item>
					<item>
						<ruleref uri="#teens" />
						<tag> $._value = "30" + $$._value </tag>
					</item>
					<item>
						<one-of>
							<item> twenty <tag> $._value = "302" </tag> </item>
							<item> thirty <tag> $._value = "303" </tag> </item>
							<item> forty <tag> $._value = "304" </tag> </item>
							<item> fifty <tag> $._value = "305" </tag> </item>
						</one-of>
						<one-of>
							<item>
								<ruleref uri="#digit_nonzero" />
								<tag> $._value = $._value + $$._value </tag>
							</item>
							<item>
								<tag> $._value = $._value + "0" </tag>
							</item>
						</one-of>
					</item>
				</one-of>
			</item>
			<item>
				<one-of>
					<item> three </item>
					<item> thirty </item>
				</one-of>
				<one-of>
					<item> six <tag> $._value = "36" </tag> </item>
					<item> eight <tag> $._value = "38" </tag> </item>
				</one-of>
				<one-of>
					<item>
						<ruleref uri="#Digit2" />
						<tag> $._value = $._value + $$._value </tag>
					</item>
					<item>
						hundred
						<tag> $._value = $._value + "00" </tag>
					</item>
				</one-of>
			</item>
		</one-of>
		<ruleref uri="#Digit6" />
		<tag> $._value = $._value + $$._value </tag>
		<ruleref uri="#Digit4" />
		<tag> $._value = $._value + $$._value </tag>
		<tag> <![CDATA[
	var aString = $._value.toString();
	 var sum=0; var evenDigit=0; var digit;var length=aString.length;
	 for (i=length-1; i >= 0; i--) {
		 digit = aString.charCodeAt(i) - 48;
		 if (evenDigit == 1)
	 if (digit > 4) sum += 1 + 2 * (digit - 5); 
	 else sum += 2 * digit; 
	 else sum += digit;
	 evenDigit = 1 - evenDigit;
	 }
	 if (sum % 10 != 0)
	 $._attributes.luhnValidation = "false";
	else
	 $._attributes.luhnValidation = "true";
	 ]]>
	 </tag>
		<tag> $._attributes.name = "DinersClub"; $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $One2TwelveOnExpirationDate._value : integer -->
	<rule id="One2TwelveOnExpirationDate">
		<example> zero one </example>
		<example> oh two </example>
		<example> ten </example>
		<example> twelve </example>
		<one-of>
			<item>
				<one-of>
					<item> zero </item>
					<item> oh </item>
				</one-of>
				<one-of>
					<item> one <tag> $._value = 1 </tag> </item>
					<item> two <tag> $._value = 2 </tag> </item>
					<item> three <tag> $._value = 3 </tag> </item>
					<item> four <tag> $._value = 4 </tag> </item>
					<item> five <tag> $._value = 5 </tag> </item>
					<item> six <tag> $._value = 6 </tag> </item>
					<item> seven <tag> $._value = 7 </tag> </item>
					<item> eight <tag> $._value = 8 </tag> </item>
					<item> nine <tag> $._value = 9 </tag> </item>
				</one-of>
			</item>
			<item> ten <tag> $._value = 10 </tag> </item>
			<item> eleven <tag> $._value = 11 </tag> </item>
			<item> twelve <tag> $._value = 12 </tag> </item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $nearFutureYears._value : string -->
	<rule id="nearFutureYears">
		<example> oh five </example>
		<example> two oh oh three </example>
		<example> twenty eleven </example>
		<example> year two thousand and three </example>
		<example> year two thousand eleven </example>
		<example> this year </example>
		<example> next year </example>
		<one-of>
			<item>
				<item repeat="0-1"> year </item>
				<one-of>
					<item>
						<one-of>
							<item> twenty </item>
							<item> two zero </item>
							<item> two oh </item>
							<item></item>
						</one-of>
						<item>
							<ruleref uri="#Digit2" />
						</item>
						<tag> $._value = "20" + $$._value </tag>
					</item>
					<item>
						two thousand 
					<item repeat="0-1"> and </item>
					<one-of>
							<item>
								<ruleref uri="#Digit2" />
								<tag> $._value = "20" + $$._value </tag>
							</item>
							<item>
								<ruleref uri="#digit_nonzero" />
								<tag> $._value = "200" + $$._value </tag>
							</item>
						</one-of>
				</item>
				</one-of>
			</item>
			<item> next year <tag> $._value = ((new Date()).getFullYear() + 1).toString() </tag> </item>
			<item> this year <tag> $._value = ((new Date()).getFullYear()).toString() </tag> </item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $simple_year._value : string -->
	<rule id="simple_year" scope="public">
		<example> oh five </example>
		<example> two oh oh three </example>
		<example> year two thousand and three </example>
		<example> year two thousand </example>
		<example> ninety one </example>
		<example> ninety nine </example>
		<example> year nineteen ninety nine </example>
		<example> this year </example>
		<example> next year </example>
		<example> last year </example>
		<one-of>
			<item>
				<item repeat="0-1"> year </item>
				<one-of>
					<item>
						<one-of>
							<item> twenty </item>
							<item> two zero </item>
							<item> two oh </item>
							<item></item>
						</one-of>
						<one-of>
							<item> zero </item>
							<item> oh </item>
						</one-of>
						<item>
							<ruleref uri="#digit" />
						</item>
						<tag> $._value = "200" + $$._value </tag>
					</item>
					<item>
						two thousand 
					<one-of>
							<item>
								<tag> $._value = "2000" </tag>
							</item>
							<item>
								<item repeat="0-1"> and </item>
								<ruleref uri="#digit_nonzero" />
								<tag> $._value = "200" + $$._value </tag>
							</item>
						</one-of>
				</item>
					<item>
					<item repeat="0-1"> nineteen </item>
						ninety
					<ruleref uri="#digit_nonzero" />
					<tag> $._value = "199" + $$._value </tag>
				</item>
				</one-of>
			</item>
			<item> next year <tag> $._value = ((new Date()).getFullYear() + 1).toString() </tag> </item>
			<item> this year <tag> $._value = ((new Date()).getFullYear()).toString() </tag> </item>
			<item> last year <tag> $._value = ((new Date()).getFullYear() - 1).toString() </tag> </item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $CreditCardExpirationDate.Year._value : integer
$CreditCardExpirationDate.Month._value : integer
 -->
	<rule id="CreditCardExpirationDate" scope="public">
		<example> oh one oh four </example>
		<example> twelve oh four </example>
		<example> May next year </example>
		<example> June zero four </example>
		<example> next month </example>
		<example> May year two thousand and three</example>
		<tag> <![CDATA[ 
	function relativeMonth(offset) {
	 var oDate=new Date();
		oDate.setDate(1);
		oDate.setMonth( oDate.getMonth() + offset);
		 var oRet= new Object; oRet.Year = oDate.getFullYear(); oRet.Month = oDate.getMonth() + 1;
		 return oRet;
	 }
	 ]]>
	</tag>
		<one-of>
			<item>
				<one-of>
					<item>
						<ruleref uri="#One2TwelveOnExpirationDate" />
						<tag> $.Month = $$ </tag>
					</item>
					<item>
						<ruleref uri="#Month" />
						<tag> $.Month = $$ </tag>
						<item repeat="0-1">
							<ruleref uri="#Day" />
							<tag> $.Day = $$ </tag>
						</item>
					</item>
				</one-of>
				<ruleref uri="#nearFutureYears" />
				<tag> $.Year = $$ </tag>
			</item>
			<item> next month <tag> $.Month = relativeMonth(1).Month; $.Year = relativeMonth(1).Year; </tag> </item>
			<item> this month <tag> $.Month = relativeMonth(0).Month; $.Year = relativeMonth(0).Year; </tag> </item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- Date
 -->
	<!-- $Date.Year: $Year
$Date.Month._value: integer 
$Date.Month._attributes.name: string ("Derived", "Assumed", "Common")
$Date.Day._value: integer
$Date.Day._attributes.name: string ("Derived", "Assumed", "Common")
$Date._attributes.name: string ("PreciseDate", "Holiday", "EvaluatedRelativeDate")
$Date.Holiday: string ("Easter", "LaborDay", etc)
$Date.AlternativeDateCode: string ("Yesterday", "tomorrow")
$Date.AlternativeYear: $Year
$Date.AlternativeMonth._value: integer 
$Date.AlternativeMonth._attributes.name: string ("Derived", "Assumed", "Common")
$Date.AlternativeDay._value: integer
$Date.AlternativeDay._attributes.name: string ("Derived", "Assumed", "Common")
 -->
	<rule id="Date" scope="public">
		<example> July the first </example>
		<example> Christmas </example>
		<example> next Mother's Day </example>
		<example> Father's Day last year </example>
		<example> next Tuesday </example>
		<example> three days ago </example>
		<example> Monday </example>
		<example> the day after tomorrow </example>
		<example> the Friday last </example>
		<one-of>
			<item>
				<ruleref uri="#precise_date" />
			</item>
			<item>
				<ruleref uri="#evaluated_relative_date" />
			</item>
			<item>
				<ruleref uri="#USHoliday" />
			</item>
		</one-of>
		<tag> $ = $$ </tag>
	</rule>
	<!-- $DateFuture.Year: $Year
$DateFuture.Month._value: integer 
$DateFuture.Month._attributes.name: string ("Derived", "Assumed", "Common")
$DateFuture.Day._value: integer
$DateFuture.Day._attributes.name: string ("Derived", "Assumed", "Common")
$DateFuture._attributes.name: string ("PreciseDate", "Holiday", "EvaluatedRelativeDate")
$DateFuture.Holiday: string ("Easter", "LaborDay", etc)
$DateFuture.AlternativeDateCode: string ("Yesterday", "tomorrow")
$DateFuture.AlternativeYear: $Year
$DateFuture.AlternativeMonth._value: integer 
$DateFuture.AlternativeMonth._attributes.name: string ("Derived", "Assumed", "Common")
$DateFuture.AlternativeDay._value: integer
$DateFuture.AlternativeDay._attributes.name: string ("Derived", "Assumed", "Common")
 -->
	<rule id="DateFuture" scope="public">
		<example> July the first </example>
		<example> Christmas </example>
		<example> next Mother's Day </example>
		<example> Father's Day last year </example>
		<example> next Tuesday </example>
		<example> three days ago </example>
		<example> Monday </example>
		<example> the day after tomorrow </example>
		<example> the Friday last </example>
		<one-of>
			<item>
				<ruleref uri="#precise_date_future" />
			</item>
			<item>
				<ruleref uri="#evaluated_relative_date_future" />
			</item>
			<item>
				<ruleref uri="#USHoliday_future" />
			</item>
		</one-of>
		<tag> $ = $$ </tag>
	</rule>
	<!-- $DatePast.Year: $Year
$DatePast.Month._value: integer 
$DatePast.Month._attributes.name: string ("Derived", "Assumed", "Common")
$DatePast.Day._value: integer
$DatePast.Day._attributes.name: string ("Derived", "Assumed", "Common")
$DatePast._attributes.name: string ("PreciseDate", "Holiday", "EvaluatedRelativeDate")
$DatePast.Holiday: string ("Easter", "LaborDay", etc)
$DatePast.AlternativeDateCode: string ("Yesterday", "tomorrow")
$DatePast.AlternativeYear: $Year
$DatePast.AlternativeMonth._value: integer 
$DatePast.AlternativeMonth._attributes.name: string ("Derived", "Assumed", "Common")
$DatePast.AlternativeDay._value: integer
$DatePast.AlternativeDay._attributes.name: string ("Derived", "Assumed", "Common")
 -->
	<rule id="DatePast" scope="public">
		<example> July the first </example>
		<example> Christmas </example>
		<example> next Mother's Day </example>
		<example> Father's Day last year </example>
		<example> next Tuesday </example>
		<example> three days ago </example>
		<example> Monday </example>
		<example> the day after tomorrow </example>
		<example> the Friday last </example>
		<one-of>
			<item>
				<ruleref uri="#precise_date_past" />
			</item>
			<item>
				<ruleref uri="#evaluated_relative_date_past" />
			</item>
			<item>
				<ruleref uri="#USHoliday_past" />
			</item>
		</one-of>
		<tag> $ = $$ </tag>
	</rule>
	<!-- $Day29._value : integer -->
	<rule id="Day29">
		<example> the first </example>
		<example> the eleventh </example>
		<example> twenty ninth </example>
		<tag> $._value = 0 </tag>
		<item>
			<item repeat="0-1"> the </item>
			<one-of>
				<item>
					<item repeat="0-1">
						<item> twenty <tag> $._value = 20 </tag> </item>
					</item>
					<one-of>
						<item> first <tag> $._value = $._value + 1 </tag> </item>
						<item> second <tag> $._value = $._value + 2 </tag> </item>
						<item> third <tag> $._value = $._value + 3 </tag> </item>
						<item> fourth <tag> $._value = $._value + 4 </tag> </item>
						<item> fifth <tag> $._value = $._value + 5 </tag> </item>
						<item> sixth <tag> $._value = $._value + 6 </tag> </item>
						<item> seventh <tag> $._value = $._value + 7 </tag> </item>
						<item> eighth <tag> $._value = $._value + 8 </tag> </item>
						<item> ninth <tag> $._value = $._value + 9 </tag> </item>
					</one-of>
				</item>
				<item> twentieth <tag> $._value = 20 </tag> </item>
				<item> tenth <tag> $._value = 10 </tag> </item>
				<item> eleventh <tag> $._value = 11 </tag> </item>
				<item> twelfth <tag> $._value = 12 </tag> </item>
				<item> thirteenth <tag> $._value = 13 </tag> </item>
				<item> fourteenth <tag> $._value = 14 </tag> </item>
				<item> fifteenth <tag> $._value = 15 </tag> </item>
				<item> sixteenth <tag> $._value = 16 </tag> </item>
				<item> seventeenth <tag> $._value = 17 </tag> </item>
				<item> eighteenth <tag> $._value = 18 </tag> </item>
				<item> nineteenth <tag> $._value = 19 </tag> </item>
			</one-of>
		</item>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $Day30._value : integer -->
	<rule id="Day30">
		<example> the first </example>
		<example> the eleventh </example>
		<example> thirtieth </example>
		<one-of>
			<item>
				<ruleref uri="#Day29" />
				<tag> $ = $$ </tag>
			</item>
			<item>
			<item repeat="0-1"> the </item>
				thirtieth
			<tag> $._value = 30 </tag>
		</item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $Day._value : integer -->
	<rule id="Day" scope="public">
		<example> the first </example>
		<example> the eleventh </example>
		<example> thirty first </example>
		<one-of>
			<item>
				<ruleref uri="#Day29" />
				<tag> $ = $$ </tag>
			</item>
			<item>
			<item repeat="0-1"> the </item>
				thirtieth
			<tag> $._value = 30 </tag>
		</item>
			<item>
			<item repeat="0-1"> the </item>
				thirty first
			<tag> $._value = 31 </tag>
		</item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $Month._value : integer -->
	<rule id="Month" scope="public">
		<example> January </example>
		<example> December </example>
		<one-of>
			<item> January <tag> $._value = 1 </tag> </item>
			<item> February <tag> $._value = 2 </tag> </item>
			<item> March <tag> $._value = 3 </tag> </item>
			<item> April <tag> $._value = 4 </tag> </item>
			<item> May <tag> $._value = 5 </tag> </item>
			<item> June <tag> $._value = 6 </tag> </item>
			<item> July <tag> $._value = 7 </tag> </item>
			<item> August <tag> $._value = 8 </tag> </item>
			<item> September <tag> $._value = 9 </tag> </item>
			<item> October <tag> $._value = 10 </tag> </item>
			<item> November <tag> $._value = 11 </tag> </item>
			<item> December <tag> $._value = 12 </tag> </item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $Month31._value : integer -->
	<rule id="Month31">
		<example> January </example>
		<example> December </example>
		<one-of>
			<item> January <tag> $._value = 1 </tag> </item>
			<item> March <tag> $._value = 3 </tag> </item>
			<item> May <tag> $._value = 5 </tag> </item>
			<item> July <tag> $._value = 7 </tag> </item>
			<item> August <tag> $._value = 8 </tag> </item>
			<item> October <tag> $._value = 10 </tag> </item>
			<item> December <tag> $._value = 12 </tag> </item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $Month30._value : integer -->
	<rule id="Month30">
		<example> April </example>
		<example> June </example>
		<one-of>
			<item> April <tag> $._value = 4 </tag> </item>
			<item> June <tag> $._value = 6 </tag> </item>
			<item> September <tag> $._value = 9 </tag> </item>
			<item> November <tag> $._value = 11 </tag> </item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $Month29._value : integer -->
	<rule id="Month29">
		<example> February </example>
		<item> February <tag> $._value = 2 </tag> </item>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $onethree2twelve._value : integer -->
	<rule id="onethree2twelve">
		<example> oh one </example>
		<example> seven </example>
		<one-of>
			<item>
				<item repeat="0-1">
					<ruleref uri="#zero" />
				</item>
				<one-of>
					<item> one <tag> $._value = 1 </tag> </item>
					<item> three <tag> $._value = 3 </tag> </item>
					<item> five <tag> $._value = 5 </tag> </item>
					<item> seven <tag> $._value = 7 </tag> </item>
					<item> eight <tag> $._value = 8 </tag> </item>
				</one-of>
			</item>
			<item> ten <tag> $._value = 10 </tag> </item>
			<item> twelve <tag> $._value = 12 </tag> </item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $foursix2eleven._value : integer -->
	<rule id="foursix2eleven">
		<example> four </example>
		<example> zero nine </example>
		<one-of>
			<item>
				<item repeat="0-1">
					<ruleref uri="#zero" />
				</item>
				<one-of>
					<item> four <tag> $._value = 4 </tag> </item>
					<item> six <tag> $._value = 6 </tag> </item>
					<item> nine <tag> $._value = 9 </tag> </item>
				</one-of>
			</item>
			<item> eleven <tag> $._value = 11 </tag> </item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $one2twentynine._value : integer -->
	<rule id="one2twentynine">
		<example> zero nine </example>
		<example> four </example>
		<example> twenty nine </example>
		<tag> $._value = 0 </tag>
		<one-of>
			<item>
				<one-of>
					<item>
						twenty
						<tag> $._value = 20 </tag>
				</item>
					<item> oh </item>
					<item> zero </item>
					<item></item>
				</one-of>
				<ruleref uri="#digit_nonzero" />
				<tag> $._value = $._value + $$._value </tag>
			</item>
			<item> 
				twenty
			<tag> $._value = 20 </tag>
		</item>
			<item>
				<ruleref uri="#teens" />
				<tag> $ = $$ </tag>
			</item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $one2thirty._value : integer -->
	<rule id="one2thirty">
		<example> zero one </example>
		<example> four </example>
		<example> thirty </example>
		<one-of>
			<item>
				thirty
			<tag> $._value = 30 </tag>
		</item>
			<item>
				<ruleref uri="#one2twentynine" />
				<tag> $ = $$ </tag>
			</item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $one2thirtyone._value : integer -->
	<rule id="one2thirtyone" scope="public">
		<example> zero one </example>
		<example> four </example>
		<example> thirty one </example>
		<one-of>
			<item> 
				thirty
			<one-of>
					<item> one <tag> $._value = 31 </tag> </item>
					<item>
						<tag> $._value = 30 </tag>
					</item>
				</one-of>
		</item>
			<item>
				<ruleref uri="#one2twentynine" />
				<tag> $ = $$ </tag>
			</item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $one2twelve._value : integer -->
	<rule id="one2twelve" scope="public">
		<example> one </example>
		<example> two </example>
		<example> twelve </example>
		<one-of>
			<item> one <tag> $._value = 1 </tag> </item>
			<item> two <tag> $._value = 2 </tag> </item>
			<item> three <tag> $._value = 3 </tag> </item>
			<item> four <tag> $._value = 4 </tag> </item>
			<item> five <tag> $._value = 5 </tag> </item>
			<item> six <tag> $._value = 6 </tag> </item>
			<item> seven <tag> $._value = 7 </tag> </item>
			<item> eight <tag> $._value = 8 </tag> </item>
			<item> nine <tag> $._value = 9 </tag> </item>
			<item> ten <tag> $._value = 10 </tag> </item>
			<item> eleven <tag> $._value = 11 </tag> </item>
			<item> twelve <tag> $._value = 12 </tag> </item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $Year._value: integer 
$Year._attributes.name: string ("Derived", "ShortForm", "CompleteForm", "Assumed")
 -->
	<rule id="Year" scope="public">
		<example> year oh oh oh two </example>
		<example> nineteen hundred and five </example>
		<example> ninety nine </example>
		<example> oh one </example>
		<example> two thousand and five </example>
		<example> two thousand and eleven </example>
		<example> next year </example>
		<example> this year </example>
		<tag> $._value = (new Date()).getFullYear(); </tag>
		<one-of>
			<item>
				<item repeat="0-1"> year </item>
				<one-of>
					<item>
						<ruleref uri="#twodigit" />
						<tag> $._value = parseInt($$._value, 10)*100</tag>
						<one-of>
							<item>
								<ruleref uri="#twodigit" />
								<tag> $._value = $._value + parseInt($$._value, 10) </tag>
							</item>
							<item>
								hundred
								<item repeat="0-1">
									and
									<ruleref uri="#digit_nonzero" />
									<tag> $._value = $._value + $$._value </tag>
								</item>
							</item>
						</one-of>
						<tag> $._attributes.name = "CompleteForm" </tag>
					</item>
					<item>
						two 
						<one-of>
							<item> oh </item>
							<item> zero </item>
						</one-of>
						<ruleref uri="#twodigit" />
						<tag> $._value = 2000 + parseInt($$._value, 10) </tag>
						<tag> $._attributes.name = "CompleteForm" </tag>
					</item>
					<item>
						<ruleref uri="#twodigit" />
						<tag> $._value = parseInt($$._value, 10) </tag>
						<tag> $._value = ($._value &lt; 20) ? 2000 + $._value : 1900 + $._value; </tag>
						<tag> $._attributes.name = "ShortForm" </tag>
					</item>
					<item>
						two thousand
						<tag> $._value = 2000 </tag>
						<item repeat="0-1">
							<item repeat="0-1"> and </item>
							<one-of>
								<item>
									<ruleref uri="#twodigit" />
									<tag> $._value = 2000 + parseInt($$._value, 10) </tag>
								</item>
								<item>
									<ruleref uri="#digit_nonzero" />
									<tag> $._value = 2000 + $$._value </tag>
								</item>
							</one-of>
						</item>
						<tag> $._attributes.name = "CompleteForm" </tag>
					</item>
				</one-of>
			</item>
			<item>
			next year 
			<tag> $._value = $._value + 1 </tag>
			<tag> $._attributes.name = "Derived" </tag>
		</item>
			<item>
			this year 
			<tag> $._attributes.name = "Derived" </tag>
		</item>
			<item>
			last year 
			<tag> $._value = $._value - 1 </tag>
			<tag> $._attributes.name = "Derived" </tag>
		</item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $YearEx._value: integer 
$YearEx._attributes.name: string ("Derived", "ShortForm", "CompleteForm", "Assumed")
		
This is a more restricted version of the Year rule. Speech input must include the word "year."
 -->
	<rule id="YearEx" scope="public">
		<example> year oh oh oh two </example>
		<example> year nineteen hundred and five </example>
		<example> year ninety nine </example>
		<example> year oh one </example>
		<example> year two thousand and five </example>
		<example> year two thousand and eleven </example>
		<example> next year </example>
		<example> this year </example>
		<tag> $._value = (new Date()).getFullYear(); </tag>
		<one-of>
			<item>
			year
			<one-of>
					<item>
						<ruleref uri="#twodigit" />
						<tag> $._value = parseInt($$._value, 10)*100</tag>
						<one-of>
							<item>
								<ruleref uri="#twodigit" />
								<tag> $._value = $._value + parseInt($$._value, 10) </tag>
							</item>
							<item>
								hundred
								<item repeat="0-1">
									and
									<one-of>
										<item>
											<ruleref uri="#digit_nonzero" />
											<tag> $._value = $._value + $$._value </tag>
										</item>
										<item>
											<ruleref uri="#grouped_twodigit" />
											<tag> $._value = $._value + parseInt($$._value) </tag>
										</item>
									</one-of>
								</item>
							</item>
						</one-of>
						<tag> $._attributes.name = "CompleteForm" </tag>
					</item>
					<item>
						two 
						<one-of>
							<item> oh </item>
							<item> zero </item>
						</one-of>
						<ruleref uri="#twodigit" />
						<tag> <![CDATA[
$._value = 2000 + parseInt($$._value, 10);
$._attributes.name = "CompleteForm"; ]]> </tag>
					</item>
					<item>
						<ruleref uri="#twodigit" />
						<tag> <![CDATA[
$._value = parseInt($$._value, 10);
$._value = ($._value < 20) ? 2000 + $._value : 1900 + $._value;
$._attributes.name = "ShortForm"; ]]></tag>
					</item>
					<item>
						two thousand
						<tag> $._value = 2000 </tag>
						<item repeat="0-1">
							<item repeat="0-1"> and </item>
							<one-of>
								<item>
									<ruleref uri="#twodigit" />
									<tag> $._value = 2000 + parseInt($$._value, 10) </tag>
								</item>
								<item>
									<ruleref uri="#digit_nonzero" />
									<tag> $._value = 2000 + $$._value </tag>
								</item>
							</one-of>
						</item>
						<tag> $._attributes.name = "CompleteForm" </tag>
					</item>
				</one-of>
		</item>
			<item>
			next year 
			<tag> $._value = $._value + 1 </tag>
			<tag> $._attributes.name = "Derived" </tag>
		</item>
			<item>
			this year 
			<tag> $._attributes.name = "Derived" </tag>
		</item>
			<item>
			last year 
			<tag> $._value = $._value - 1 </tag>
			<tag> $._attributes.name = "Derived" </tag>
		</item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $numeral_date_wo_year.Month._value: integer
$numeral_date_wo_year.Month._attributes.name: string ("Common")
$numeral_date_wo_year.Day._value: integer
$numeral_date_wo_year.Day._attributes.name: string ("Common")
$numeral_date_wo_year.Year: $Year
$numeral_date_wo_year._attributes.name: string ("PreciseDate")
 -->
	<rule id="numeral_date_wo_year" scope="public">
		<example> eleven oh five </example>
		<example> one twenty two </example>
		<example> one two </example>
		<tag> 
			$.Year=[];
			$.Year._attributes=[];
			$.Year._attributes.name="Assumed";
			$.Year._value=(new Date()).getFullYear();
			$._attributes.name="PreciseDate";
	</tag>
		<one-of>
			<item>
				<ruleref uri="#onethree2twelve" />
				<tag>$.Month=$$; $.Month._attributes.name="Common";</tag>
				<ruleref uri="#one2thirtyone" />
				<tag>$.Day=$$; $.Day._attributes.name="Common";</tag>
			</item>
			<item>
				<ruleref uri="#foursix2eleven" />
				<tag>$.Month=$$; $.Month._attributes.name="Common";</tag>
				<ruleref uri="#one2thirty" />
				<tag>$.Day=$$; $.Day._attributes.name="Common";</tag>
			</item>
			<item>
			<one-of>
					<item>
						<ruleref uri="#zero" />
						<tag> $.Month = $$; </tag>
					</item>
					<item>
						<tag> $.Month = []; $.Month._attributes=[];</tag>
					</item>
				</one-of>
				two
			<tag> $.Month._value=2; $.Month._attributes.text+=" two"; $.Month._attributes.name="Common";</tag>
			<ruleref uri="#one2twentynine" />
			<tag>$.Day=$$; $.Day._attributes.name="Common";</tag>
		</item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $numeral_date_wo_year_future.Month._value: integer
$numeral_date_wo_year_future.Month._attributes.name: string ("Common")
$numeral_date_wo_year_future.Day._value: integer
$numeral_date_wo_year_future.Day._attributes.name: string ("Common")
$numeral_date_wo_year_future.Year: $Year
$numeral_date_wo_year_future._attributes.name: string ("PreciseDate")
 -->
	<rule id="numeral_date_wo_year_future" scope="public">
		<example> eleven oh five </example>
		<example> one twenty two </example>
		<example> one two </example>
		<tag> 
			$.Year=[];
			$.Year._attributes=[];
			$.Year._attributes.name="Assumed";
			$.Year._value=(new Date()).getFullYear();
			$._attributes.name="PreciseDate";
	</tag>
		<one-of>
			<item>
				<ruleref uri="#onethree2twelve" />
				<tag>$.Month=$$; $.Month._attributes.name="Common";</tag>
				<ruleref uri="#one2thirtyone" />
				<tag>$.Day=$$; $.Day._attributes.name="Common";</tag>
			</item>
			<item>
				<ruleref uri="#foursix2eleven" />
				<tag>$.Month=$$; $.Month._attributes.name="Common";</tag>
				<ruleref uri="#one2thirty" />
				<tag>$.Day=$$; $.Day._attributes.name="Common";</tag>
			</item>
			<item>
			<one-of>
					<item>
						<ruleref uri="#zero" />
						<tag> $.Month = $$; </tag>
					</item>
					<item>
						<tag> $.Month = []; $.Month._attributes=[];</tag>
					</item>
				</one-of>
				two
			<tag>$.Month._value=2; $.Month._attributes.text+=" two"; $.Month._attributes.name="Common";</tag>
			<ruleref uri="#one2twentynine" />
			<tag>$.Day=$$; $.Day._attributes.name="Common";</tag>
		</item>
		</one-of>
		<tag> <![CDATA[
$.Year._value = ( ($.Month._value < (new Date()).getMonth() + 1) || (($.Month._value == (new Date()).getMonth() + 1) &&
			($.Day._value < (new Date()).getDate() ) )) ? $.Year._value + 1 : $.Year._value;
	]]></tag>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $numeral_date_wo_year_past.Month._value: integer
$numeral_date_wo_year_past.Month._attributes.name: string ("Common")
$numeral_date_wo_year_past.Day._value: integer
$numeral_date_wo_year_past.Day._attributes.name: string ("Common")
$numeral_date_wo_year_past.Year: $Year
$numeral_date_wo_year_past._attributes.name: string ("PreciseDate")
 -->
	<rule id="numeral_date_wo_year_past" scope="public">
		<example> eleven oh five </example>
		<example> one twenty two </example>
		<example> one two </example>
		<tag> 
			$.Year=[];
			$.Year._attributes=[];
			$.Year._attributes.name="Assumed";
			$.Year._value=(new Date()).getFullYear();
			$._attributes.name="PreciseDate";
	</tag>
		<one-of>
			<item>
				<ruleref uri="#onethree2twelve" />
				<tag>$.Month=$$; $.Month._attributes.name="Common";</tag>
				<ruleref uri="#one2thirtyone" />
				<tag>$.Day=$$; $.Day._attributes.name="Common";</tag>
			</item>
			<item>
				<ruleref uri="#foursix2eleven" />
				<tag>$.Month=$$; $.Month._attributes.name="Common";</tag>
				<ruleref uri="#one2thirty" />
				<tag>$.Day=$$; $.Day._attributes.name="Common";</tag>
			</item>
			<item>
			<one-of>
					<item>
						<ruleref uri="#zero" />
						<tag> $.Month = $$; </tag>
					</item>
					<item>
						<tag> $.Month = []; $.Month._attributes=[];</tag>
					</item>
				</one-of>
				two
			<tag>$.Month._value=2; $.Month._attributes.text+=" two"; $.Month._attributes.name="Common";</tag>
			<ruleref uri="#one2twentynine" />
			<tag>$.Day=$$; $.Day._attributes.name="Common";</tag>
		</item>
		</one-of>
		<tag> <![CDATA[
$.Year._value = ( ($.Month._value > (new Date()).getMonth() + 1) || (($.Month._value == (new Date()).getMonth() + 1) &&
($.Day._value > (new Date()).getDate() ) )) ? $.Year._value - 1 : $.Year._value;
	]]></tag>
	</rule>
	<!-- $numeral_date_w_year.Month._value: integer
$numeral_date_w_year.Month._attributes.name: string ("Common")
$numeral_date_w_year.Day._value: integer
$numeral_date_w_year.Day._attributes.name: string ("Common")
$numeral_date_w_year.Year: $Year
$numeral_date_w_year._attributes.name: string ("PreciseDate")
 -->
	<rule id="numeral_date_w_year" scope="public">
		<example> seven eleven oh five </example>
		<example> one one oh one </example>
		<example> one one two thousand and one </example>
		<item>
			<ruleref uri="#numeral_date_wo_year" />
			<tag> $.Month = $$.Month; $.Day = $$.Day; </tag>
			<ruleref uri="#Year" />
			<tag> $.Year=$$; </tag>
			<tag> $._attributes.name = "PreciseDate"; </tag>
		</item>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $precise_date.Year: $Year
$precise_date.Month._value: integer 
$precise_date.Month._attributes.name: string ("Derived", "Assumed", "Common")
$precise_date.Day._value: integer
$precise_date.Day._attributes.name: string ("Common")
$precise_date._attributes.name: string ("PreciseDate")
 -->
	<rule id="precise_date" scope="public">
		<example> July the first </example>
		<example> February twenty ninth </example>
		<example> December the first year two thousand and two </example>
		<example> the twenty first </example>
		<example> the twenty first of next month </example>
		<one-of>
			<item>
				<ruleref uri="#regular_precise_date" />
			</item>
		</one-of>
		<tag> $ = $$ </tag>
	</rule>
	<!-- $precise_date_future.Year: $Year
$precise_date_future.Month._value: integer 
$precise_date_future.Month._attributes.name: string ("Derived", "Assumed", "Common")
$precise_date_future.Day._value: integer
$precise_date_future.Day._attributes.name: string ("Common")
$precise_date_future._attributes.name: string ("PreciseDate")
 -->
	<rule id="precise_date_future" scope="public">
		<example> July the first </example>
		<example> February twenty ninth </example>
		<example> December the first year two thousand and two </example>
		<example> the twenty first </example>
		<example> the twenty first of next month </example>
		<one-of>
			<item>
				<ruleref uri="#regular_precise_date_future" />
			</item>
		</one-of>
		<tag> $ = $$ </tag>
	</rule>
	<!-- $precise_date_past.Year: $Year
$precise_date_past.Month._value: integer 
$precise_date_past.Month._attributes.name: string ("Derived", "Assumed", "Common")
$precise_date_past.Day._value: integer
$precise_date_past.Day._attributes.name: string ("Common")
$precise_date_past._attributes.name: string ("PreciseDate")
 -->
	<rule id="precise_date_past" scope="public">
		<example> July the first </example>
		<example> February twenty ninth </example>
		<example> December the first year two thousand and two </example>
		<example> the twenty first </example>
		<example> the twenty first of next month </example>
		<one-of>
			<item>
				<ruleref uri="#regular_precise_date_past" />
			</item>
		</one-of>
		<tag> $ = $$ </tag>
	</rule>
	<!-- $regular_precise_date.Year: $Year
$regular_precise_date.Month._value: integer 
$regular_precise_date.Month._attributes.name: string ("Derived", "Assumed", "Common")
$regular_precise_date.Day._value: integer
$regular_precise_date.Day._attributes.name: string ("Common")
$regular_precise_date._attributes.name: string ("PreciseDate")
$regular_precise_date._attributes.invalidDate: optional string ("true")
 -->
	<rule id="regular_precise_date" scope="public">
		<example> July the first </example>
		<example> the first of May </example>
		<example> February twenty ninth </example>
		<example> December the first year two thousand and two </example>
		<example> the twenty first </example>
		<example> the twenty first of next month </example>
		<tag> <![CDATA[
$.Year = [];
$.Year._attributes = [];
$.Year._attributes.name = "Assumed";
$.Month = [];
$.Month._attributes = [];
$.Year._value=(new Date()).getFullYear(); 
$.Month._value=(new Date()).getMonth() + 1; 
 ]]>
	</tag>
		<one-of>
			<item>
				<one-of>
					<item>
						<ruleref uri="#Month31" />
						<tag> $.Month=$$; </tag>
						<item repeat="0-1"> the </item>
						<ruleref uri="#Day" />
						<tag> $.Day=$$; </tag>
					</item>
					<item>
						<ruleref uri="#Month30" />
						<tag> $.Month=$$; </tag>
						<item repeat="0-1"> the </item>
						<ruleref uri="#Day30" />
						<tag> $.Day=$$; </tag>
					</item>
					<item>
						<ruleref uri="#Month29" />
						<tag> $.Month=$$; </tag>
						<item repeat="0-1"> the </item>
						<ruleref uri="#Day29" />
						<tag> $.Day=$$; </tag>
					</item>
					<item>
						the
						<ruleref uri="#Day" /> <tag> $.Day=$$; </tag>
						of 
						<ruleref uri="#Month31" /> <tag> $.Month=$$; </tag>
				</item>
					<item>
						the
						<ruleref uri="#Day30" /> <tag> $.Day=$$; </tag>
						of
						<ruleref uri="#Month30" /> <tag> $.Month=$$; </tag>
				</item>
					<item>
						the
						<ruleref uri="#Day29" /> <tag> $.Day=$$; </tag>
						of
						<ruleref uri="#Month29" /> <tag> $.Month=$$; </tag>
				</item>
				</one-of>
				<tag> $.Month._attributes.name="Common" </tag>
				<item repeat="0-1">
					<ruleref uri="#Year" />
					<tag> $.Year=$$; </tag>
				</item>
			</item>
			<item>
				the
				<ruleref uri="#Day" /> <tag> $.Day=$$; </tag>
				<tag> $.Month._attributes.name="Assumed" </tag>
				<item repeat="0-1">
					<item repeat="0-1">
						of
					</item>
					<one-of>
						<item>
							next month
							<tag> <![CDATA[
$.Month._value = $.Month._value + 1;
$.Year._value = ($.Month._value == 13?$.Year._value+1:$.Year._value);
$.Month._value= ($.Month._value == 13?1:$.Month._value);
$.Month._attributes.text = "next month";
$.Year._attributes.text = "next month";
					 ]]>	</tag>
						</item>
						<item>
							this month
							<tag> 
								$.Month._attributes.text = "this month";
								$.Year._attributes.text = "this month";
							</tag>
						</item>
						<item>
							last month
							<tag> <![CDATA[
$.Month._value = $.Month._value - 1;
$.Year._value = ($.Month._value == 0?$.Year._value-1:$.Year._value);
$.Month._value= ($.Month._value == 0?12:$.Month._value);
$.Month._attributes.text = "last month";
$.Year._attributes.text = "last month";
						]]>	</tag>
						</item>
					</one-of>
					<tag> $.Month._attributes.name="Derived"; $.Year._attributes.name="Derived" </tag>
				</item>
		</item>
		</one-of>
		<tag> $.Day._attributes.name="Common"; $._attributes.name="PreciseDate"; </tag>
		<tag> <![CDATA[
	var oDate=new Date(); oDate.setFullYear($.Year._value); oDate.setDate(1); oDate.setMonth($.Month._value-1); oDate.setDate($.Day._value);
	if ($.Day._value != oDate.getDate())
		$._attributes.invalidDate="true";
	]]>
	</tag>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $regular_precise_date_future.Year: $Year
$regular_precise_date_future.Month._value: integer 
$regular_precise_date_future.Month._attributes.name: string ("Derived", "Assumed", "Common")
$regular_precise_date_future.Day._value: integer
$regular_precise_date_future.Day._attributes.name: string ("Common")
$regular_precise_date_future._attributes.name: string ("PreciseDate")
$regular_precise_date_future._attributes.invalidDate: optional string ("true")
 -->
	<rule id="regular_precise_date_future" scope="public">
		<example> July the first </example>
		<example> the first of May </example>
		<example> February twenty ninth </example>
		<example> December the first year two thousand and two </example>
		<example> the twenty first </example>
		<example> the twenty first of next month </example>
		<tag> <![CDATA[
$.Year = [];
$.Year._attributes = [];
$.Year._attributes.name = "Assumed";
$.Month = [];
$.Month._attributes = [];
$.Year._value=(new Date()).getFullYear(); 
$.Month._value=(new Date()).getMonth() + 1; 
 ]]>
	</tag>
		<one-of>
			<item>
				<one-of>
					<item>
						<ruleref uri="#Month31" />
						<tag> $.Month=$$; </tag>
						<item repeat="0-1"> the </item>
						<ruleref uri="#Day" />
						<tag> $.Day=$$; </tag>
					</item>
					<item>
						<ruleref uri="#Month30" />
						<tag> $.Month=$$; </tag>
						<item repeat="0-1"> the </item>
						<ruleref uri="#Day30" />
						<tag> $.Day=$$; </tag>
					</item>
					<item>
						<ruleref uri="#Month29" />
						<tag> $.Month=$$; </tag>
						<item repeat="0-1"> the </item>
						<ruleref uri="#Day29" />
						<tag> $.Day=$$; </tag>
					</item>
					<item>
						the
						<ruleref uri="#Day" /> <tag> $.Day=$$; </tag>
						of 
						<ruleref uri="#Month31" /> <tag> $.Month=$$; </tag>
				</item>
					<item>
						the
						<ruleref uri="#Day30" /> <tag> $.Day=$$; </tag>
						of
						<ruleref uri="#Month30" /> <tag> $.Month=$$; </tag>
				</item>
					<item>
						the
						<ruleref uri="#Day29" /> <tag> $.Day=$$; </tag>
						of
						<ruleref uri="#Month29" /> <tag> $.Month=$$; </tag>
				</item>
				</one-of>
				<tag> $.Month._attributes.name="Common" </tag>
				<one-of>
					<item>
						<ruleref uri="#Year" />
						<tag> $.Year=$$; </tag>
					</item>
					<item>
						<tag> <![CDATA[
$.Year._value = ( ($.Month._value < (new Date()).getMonth() + 1) ||
(($.Month._value == (new Date()).getMonth() + 1) &&
($.Day._value < (new Date()).getDate() ) )) ? $.Year._value + 1 : $.Year._value;
$.Year._attributes.name = "Assumed";
				]]>	</tag>
					</item>
				</one-of>
			</item>
			<item>
				the
				<ruleref uri="#Day" /> <tag> $.Day=$$; </tag>
				<tag> $.Month._attributes.name="Assumed" </tag>
				<one-of>
					<item>
						<item repeat="0-1">
							of
						</item>
						<one-of>
							<item>
								next month
								<tag> <![CDATA[
$.Month._value = $.Month._value + 1;
$.Year._value = ($.Month._value == 13?$.Year._value+1:$.Year._value);
$.Month._value= ($.Month._value == 13?1:$.Month._value);
$.Month._attributes.text = "next month";
$.Year._attributes.text = "next month";
								]]> </tag>
							</item>
							<item>
								this month
								<tag> 
									$.Month._attributes.text = "this month";
									$.Year._attributes.text = "this month";
								</tag>
							</item>
							<item>
								last month
								<tag> <![CDATA[
$.Month._value = $.Month._value - 1;
$.Year._value = ($.Month._value == 0?$.Year._value-1:$.Year._value);
$.Month._value= ($.Month._value == 0?12:$.Month._value);
$.Month._attributes.text = "last month";
$.Year._attributes.text = "last month";
							]]>	</tag>
							</item>
						</one-of>
						<tag> 
							$.Month._attributes.name="Derived";
							$.Year._attributes.name="Derived";
						</tag>
					</item>
					<item>
						<tag> <![CDATA[
$.Month._value = ($.Day._value < (new Date()).getDate())? $.Month._value + 1 : $.Month._value;
$.Year._value = ($.Month._value < 13 )?$.Year._value : $.Year._value + 1;
$.Month._value = ($.Month._value < 13 )?$.Month._value : 1;
					]]>	</tag>
					</item>
				</one-of>
		</item>
		</one-of>
		<tag> $.Day._attributes.name="Common"; $._attributes.name="PreciseDate"; </tag>
		<tag> <![CDATA[
var oDate=new Date(); oDate.setFullYear($.Year._value);
oDate.setDate(1); oDate.setMonth($.Month._value-1); oDate.setDate($.Day._value);
if ($.Day._value != oDate.getDate())
 $._attributes.invalidDate="true";
	]]>
	</tag>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $regular_precise_date_past.Year: $Year
$regular_precise_date_past.Month._value: integer 
$regular_precise_date_past.Month._attributes.name: string ("Derived", "Assumed", "Common")
$regular_precise_date_past.Day._value: integer
$regular_precise_date_past.Day._attributes.name: string ("Common")
$regular_precise_date_past._attributes.name: string ("PreciseDate")
$regular_precise_date_past.invalidDate: optional string ("true")
 -->
	<rule id="regular_precise_date_past" scope="public">
		<example> July the first </example>
		<example> the first of May </example>
		<example> February twenty ninth </example>
		<example> December the first year two thousand and two </example>
		<example> the twenty first </example>
		<example> the twenty first of next month </example>
		<tag> <![CDATA[
$.Year = [];
$.Year._attributes = [];
$.Year._attributes.name = "Assumed";
$.Month = [];
$.Month._attributes = [];
$.Year._value=(new Date()).getFullYear(); 
$.Month._value=(new Date()).getMonth() + 1; 
	]]></tag>
		<one-of>
			<item>
				<one-of>
					<item>
						<ruleref uri="#Month31" />
						<tag> $.Month=$$; </tag>
						<item repeat="0-1"> the </item>
						<ruleref uri="#Day" />
						<tag> $.Day=$$; </tag>
					</item>
					<item>
						<ruleref uri="#Month30" />
						<tag> $.Month=$$; </tag>
						<item repeat="0-1"> the </item>
						<ruleref uri="#Day30" />
						<tag> $.Day=$$; </tag>
					</item>
					<item>
						<ruleref uri="#Month29" />
						<tag> $.Month=$$; </tag>
						<item repeat="0-1"> the </item>
						<ruleref uri="#Day29" />
						<tag> $.Day=$$; </tag>
					</item>
					<item>
						the
						<ruleref uri="#Day" /> <tag> $.Day=$$; </tag>
						of 
						<ruleref uri="#Month31" /> <tag> $.Month=$$; </tag>
				</item>
					<item>
						the
						<ruleref uri="#Day30" /> <tag> $.Day=$$; </tag>
						of
						<ruleref uri="#Month30" /> <tag> $.Month=$$; </tag>
				</item>
					<item>
						the
						<ruleref uri="#Day29" /> <tag> $.Day=$$; </tag>
						of
						<ruleref uri="#Month29" /> <tag> $.Month=$$; </tag>
				</item>
				</one-of>
				<tag> $.Month._attributes.name="Common" </tag>
				<one-of>
					<item>
						<ruleref uri="#Year" />
						<tag> $.Year=$$; </tag>
					</item>
					<item>
						<tag> <![CDATA[
$.Year._value = ( ($.Month._value > (new Date()).getMonth() + 1) ||
(($.Month._value == (new Date()).getMonth() + 1) &&
($.Day._value > (new Date()).getDate() ) )) ? $.Year._value - 1 : $.Year._value;
$.Year._attributes.name = "Assumed";
				]]>	</tag>
					</item>
				</one-of>
			</item>
			<item>
				the
				<ruleref uri="#Day" /> <tag> $.Day=$$; </tag>
				<tag> $.Month._attributes.name="Assumed" </tag>
				<one-of>
					<item>
						<item repeat="0-1">
							of
						</item>
						<one-of>
							<item>
								next month
								<tag> <![CDATA[
$.Month._value = $.Month._value + 1;
$.Year._value = ($.Month._value == 13?$.Year._value+1:$.Year._value);
$.Month._value= ($.Month._value == 13?1:$.Month._value);
$.Month._attributes.text = "next month";
$.Year._attributes.text = "next month";
								]]></tag>
							</item>
							<item>
								this month
								<tag> 
									$.Month._attributes.text = "this month";
									$.Year._attributes.text = "this month";
								</tag>
							</item>
							<item>
								last month
								<tag> <![CDATA[
$.Month._value = $.Month._value - 1;
$.Year._value = ($.Month._value == 0?$.Year._value-1:$.Year._value);
$.Month._value= ($.Month._value == 0?12:$.Month._value);
$.Month._attributes.text = "last month";
$.Year._attributes.text = "last month";
								]]></tag>
							</item>
						</one-of>
						<tag> 
							$.Month._attributes.name="Derived";
							$.Year._attributes.name="Derived";
						</tag>
					</item>
					<item>
						<tag><![CDATA[
$.Month._value = ($.Day._value > (new Date()).getDate())? $.Month._value - 1 : $.Month._value;
$.Year._value = ($.Month._value > 0 )?$.Year._value : $.Year._value - 1;
$.Month._value = ($.Month._value > 0 )?$.Month._value : 12;
					]]>	</tag>
					</item>
				</one-of>
		</item>
		</one-of>
		<tag> $.Day._attributes.name="Common"; $._attributes.name="PreciseDate"; </tag>
		<tag> <![CDATA[
var oDate=new Date(); 
oDate.setFullYear($.Year._value); 
oDate.setDate(1);
oDate.setMonth($.Month._value-1);
oDate.setDate($.Day._value);
if ($.Day._value != oDate.getDate())
 $._attributes.invalidDate="true";
	]]>
	</tag>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $WhichFixedHoliday._value : string ("IndependenceDay", "ValentinesDay", "NewYear", "NewYearEve", "Christmas", "ChristmasEve", "Halloween" )
 -->
	<rule id="WhichFixedHoliday">
		<example> Independence Day </example>
		<example> Valentine's Day </example>
		<example> New Year </example>
		<example> Christmas </example>
		<example> Christmas Eve </example>
		<one-of>
			<item> Independence Day
			<tag> $._value = "IndependenceDay" </tag>
		</item>
			<item> Fourth of July
		 <tag> $._value = "IndependenceDay" </tag> 
		</item>
			<item> <item repeat="0-1"> Saint </item>
				Valentine's Day
			<tag> $._value = "ValentinesDay" </tag> 
		</item>
			<item> 
			New
			<one-of>
					<item>
						Year
						<tag> $._value = "NewYear" </tag>
					</item>
					<item>
						Year's
						<one-of>
							<item>
								Day
								<tag> $._value = "NewYear" </tag>
							</item>
							<item>
								Eve
								<tag> $._value = "NewYearEve" </tag>
							</item>
							<item>
								<tag> $._value = "NewYearEve" </tag>
							</item>
						</one-of>
					</item>
				</one-of>
		</item>
			<item> 
			Christmas 
			<one-of>
					<item>
						Day
						<tag> $._value = "Christmas" </tag>
					</item>
					<item>
						<tag> $._value = "Christmas" </tag>
					</item>
					<item>
						Eve
						<tag> $._value = "ChristmasEve" </tag>
					</item>
				</one-of>
		</item>
			<item> Halloween
			<tag> $._value = "Halloween" </tag>
		</item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $WhichFloatingHoliday._value : string ("Thanksgiving", "LaborDay", "MemorialDay", "MothersDay", "FathersDay", "PresidentsDay", "MartinLutherKingDay", "ColumbusDay" )
 -->
	<rule id="WhichFloatingHoliday">
		<example> Thanksgiving </example>
		<example> Thanksgiving Day </example>
		<example> Labor Day </example>
		<example> Father's Day </example>
		<example> Martin Luther King Day </example>
		<example> Columbus Day </example>
		<example> Memorial Day </example>
		<one-of>
			<item> Thanksgiving 
			<item repeat="0-1"> Day </item>
			<tag> $._value = "Thanksgiving" </tag> 
		</item>
			<item> Labor Day
			<tag> $._value = "LaborDay" </tag> 
		</item>
			<item> Memorial Day
			<tag> $._value = "MemorialDay" </tag> 
		</item>
			<item> Mother's Day
			<tag> $._value = "MothersDay" </tag> 
		</item>
			<item> Father's Day
			<tag> $._value = "FathersDay" </tag> 
		</item>
			<item> President's Day
			<tag> $._value = "PresidentsDay" </tag>
		</item>
			<item> Martin Luther King Day
			<tag> $._value = "MartinLutherKingDay" </tag>
		</item>
			<item> Columbus Day
			<tag> $._value = "ColumbusDay" </tag>
		</item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $WhichEasterHoliday._value : string ("Easter", "GoodFriday", "EasterMonday") -->
	<rule id="WhichEasterHoliday">
		<example> Easter </example>
		<example> Easter Monday </example>
		<example> Good Friday </example>
		<one-of>
			<item>
			Easter 
			<one-of>
					<item>
					Sunday
					<tag> $._value = "Easter" </tag>
				</item>
					<item>
						<tag> $._value = "Easter" </tag>
					</item>
					<item>
					Monday
					<tag> $._value = "EasterMonday" </tag>
				</item>
				</one-of>
		</item>
			<item> Good Friday
			<tag> $._value = "GoodFriday" </tag>
		</item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $USHoliday.Year: $Year
$USHoliday.Month._value: integer 
$USHoliday.Month._attributes.name: string ("Derived")
$USHoliday.Day._value: integer
$USHoliday.Day._attributes.name: string ("Derived")
$USHoliday.Holiday: string ("Christmas", "Easter", "LaborDay"...)
$USHoliday._attributes.name: string ("Holiday")
 -->
	<rule id="USHoliday" scope="public">
		<example> Christmas </example>
		<example> next Mother's Day </example>
		<example> Father's Day last year </example>
		<example> this Independence Day </example>
		<tag> <![CDATA[
	function getFixedHolidayCore(month, day, year, context){
		 var oToday = new Date();
		 var oDate = new Object; oDate.Year= []; oDate.Month=[]; oDate.Day=[];
		 oDate.Year._value= oToday.getFullYear(); oDate.Month._value=month; oDate.Day._value=day;
		 oDate.Year._attributes = []; oDate.Year._attributes.name="Assumed";
		 oDate.Month._attributes = []; oDate.Month._attributes.name="Derived"; 
		 oDate.Day._attributes = []; oDate.Day._attributes.name="Derived";
		 if (year!=99) oDate.Year._attributes.name="Derived";
		 if ((year==99) && (context==1)) year = 2;
		 if ((year==99) && (context==-1)) year = -2;
		 if (year == 1) oDate.Year._value += 1;
		 if (year == -1) oDate.Year._value -= 1;
		 var monthOfToday= oToday.getMonth() + 1;
		 var dayOfToday= oToday.getDate();
		 if (year == 2) {
	 if ((month > monthOfToday)||((month == monthOfToday) && (day >= dayOfToday))) {}
	 else { oDate.Year._value += 1; }
		 }
		 if (year == -2) {
		 if ((month < monthOfToday)||((month == monthOfToday) && (day <= dayOfToday))) {} 
		 else { oDate.Year._value -= 1; }
		 }
		 return oDate; }
	 ]]>
	</tag>
		<tag> <![CDATA[
	 function getFixedHoliday(WhichHoliday, year, context){
	 if (WhichHoliday=="NewYear") return getFixedHolidayCore(1,1, year, context); 
		else if (WhichHoliday=="NewYearEve") return getFixedHolidayCore(12,31, year, context);
		else if (WhichHoliday=="Christmas") return getFixedHolidayCore(12,25, year, context);
		else if (WhichHoliday=="ChristmasEve") return getFixedHolidayCore(12,24, year, context);
		else if (WhichHoliday=="ValentinesDay") return getFixedHolidayCore(2,14, year, context);
		else if (WhichHoliday=="IndependenceDay") return getFixedHolidayCore(7,4, year, context);
		else if (WhichHoliday=="Halloween") return getFixedHolidayCore(10,31, year, context);
		}
	 ]]>
	</tag>
		<tag> <![CDATA[
	 function getFloatingHolidayCore(month, week, dayOfWeek, year, context){
	 var oToday = new Date(); 
		var oDate = new Object; oDate.Year=[]; oDate.Month=[]; oDate.Day=[];
		oDate.Year._attributes = []; oDate.Year._attributes.name="Derived";
		oDate.Month._attributes = []; oDate.Month._attributes.name="Derived";
		oDate.Day._attributes = []; oDate.Day._attributes.name="Derived";
		var holidayOfWeek, holiday; 
	 if ((year==99) && (context==1)) year = 2;
		if ((year==99) && (context==-1)) year = -2;
		var monthOfToday= oToday.getMonth() + 1;
		var dayOfToday= oToday.getDate();
		var oHoliday = new Date();
		oHoliday.setDate(1);
		if ((year == -1) || (year == 1)) oHoliday.setFullYear(oHoliday.getFullYear()+ year);
		if (week == -1) {
		 if (month == 12) { oHoliday.setMonth(11); oHoliday.setDate(31); } 
		 else { oHoliday.setMonth(month); var temp = oHoliday.valueOf(); oHiliday = new Date(temp - 86400000); }
			holidayOfWeek = oHoliday.getDay(); holiday = oHoliday.getDate();
			if (holidayOfWeek < dayOfWeek) holiday -= 7; holiday -= (holidayOfWeek - dayOfWeek);
		} else {
			oHoliday.setMonth(month - 1); holidayOfWeek = oHoliday.getDay(); holiday = 1;
			if (holidayOfWeek > dayOfWeek) holiday += 7; holiday += (dayOfWeek - holidayOfWeek); 
			holiday += (week -1) * 7;
		}
		oHoliday.setDate(holiday);
		oDate.Year._value = oHoliday.getFullYear(); oDate.Month._value = oHoliday.getMonth() + 1; oDate.Day._value = oHoliday.getDate();
		if (year == 2) {
			if ((month > monthOfToday)||((month == monthOfToday) && (holiday >= dayOfToday))) {}
			else { return getFloatingHolidayCore(month, week, dayOfWeek, 1, context); }
		}
		if (year == -2) {
			if ((month < monthOfToday)||((month == monthOfToday) && (holiday <= dayOfToday))) {} 
			else { return getFloatingHolidayCore(month, week, dayOfWeek, -1, context); }
		}
		return oDate;
	 }
	]]>
	</tag>
		<tag> <![CDATA[
	 function getFloatingHoliday(WhichHoliday, year, context){
		if (WhichHoliday=="Thanksgiving") return getFloatingHolidayCore(11,4,4, year, context); 
		else if (WhichHoliday=="MemorialDay") return getFloatingHolidayCore(5,-1,1, year, context); 
		else if (WhichHoliday=="LaborDay") return getFloatingHolidayCore(9,1,1, year, context); 
		else if (WhichHoliday=="MothersDay") return getFloatingHolidayCore(5,2,0, year, context); 
		else if (WhichHoliday=="FathersDay") return getFloatingHolidayCore(6,3,0, year, context); 
		else if (WhichHoliday=="PresidentsDay") return getFloatingHolidayCore(2,3,1, year, context); 
		else if (WhichHoliday=="ColumbusDay") return getFloatingHolidayCore(10,2,1, year, context); 
		else if (WhichHoliday=="MartinLutherKingDay") return getFloatingHolidayCore(1,3,1, year, context); 		 
	 }
	 ]]>
	</tag>
		<tag> <![CDATA[
	function getEasterCore(offset, year, context){
		var oToday = new Date(); 
		var oDate = new Object; oDate.Year=[]; oDate.Month=[]; oDate.Day=[];
		oDate.Year._attributes=[]; oDate.Year._attributes.name="Derived";
		oDate.Month._attributes=[]; oDate.Month._attributes.name="Derived";
		oDate.Day._attributes=[]; oDate.Day._attributes.name="Derived";
		if ((year==99) && (context==1)) year = 2;
		if ((year==99) && (context==-1)) year = -2;
		var monthOfToday= oToday.getMonth() + 1;
		var dayOfToday= oToday.getDate();
		var oHoliday = new Date();
		oHoliday.setDate(1);
		if ((year == -1) || (year == 1)) oHoliday.setFullYear(oHoliday.getFullYear()+ year);
		var whichYear = oHoliday.getFullYear();
		if (whichYear == 2000) { oHoliday.setMonth(3); oHoliday.setDate(23); } 
		else if (whichYear == 2001) { oHoliday.setMonth(3); oHoliday.setDate(15); } 
		else if (whichYear == 2002) { oHoliday.setMonth(2); oHoliday.setDate(31); } 
		else if (whichYear == 2003) { oHoliday.setMonth(3); oHoliday.setDate(20); } 
		else if (whichYear == 2004) { oHoliday.setMonth(3); oHoliday.setDate(11); } 
		else if (whichYear == 2005) { oHoliday.setMonth(2); oHoliday.setDate(27); } 
		else if (whichYear == 2006) { oHoliday.setMonth(3); oHoliday.setDate(16); } 
		else if (whichYear == 2007) { oHoliday.setMonth(3); oHoliday.setDate(8); } 
		else if (whichYear == 2008) { oHoliday.setMonth(2); oHoliday.setDate(23); } 
		else if (whichYear == 2009) { oHoliday.setMonth(3); oHoliday.setDate(12); } 
		else { oHoliday.setMonth(3); oHoliday.setDate(4); } 
		oHoliday = new Date( oHoliday.valueOf() + offset * 86400000 ); 
		oDate.Year._value = oHoliday.getFullYear(); oDate.Month._value = oHoliday.getMonth() + 1; oDate.Day._value = oHoliday.getDate();
		if (year == 2) {
			if ((oDate.Month._value > monthOfToday)||((oDate.Month._value == monthOfToday) && (oDate.Day._value >= dayOfToday))) {}
		 else { return getEasterCore(offset, 1, context); }
		}
		if (year == -2) {
			if ((oDate.Month._value < monthOfToday)||((oDate.Month._value == monthOfToday) && (oDate.Day._value <= dayOfToday))) {}
		 else { return getEasterCore(offset, -1, context); }
		}
		return oDate;
		}
	 ]]>
	</tag>
		<tag> <![CDATA[
	function getEasterHoliday(WhichHoliday, year, context){
		if (WhichHoliday=="Easter") return getEasterCore(0, year, context); 
		else if (WhichHoliday=="GoodFriday") return getEasterCore(-2, year, context); 
		else if (WhichHoliday=="EasterMonday") return getEasterCore(1, year, context); 
		}
	]]>
	</tag>
		<one-of>
			<item>
				<ruleref uri="#WhichFixedHoliday" />
				<one-of>
					<item> 
						next year 
					<tag> oRet = getFixedHoliday($$._value, 1, 0) </tag>
				</item>
					<item> 
						this year 
					<tag> oRet = getFixedHoliday($$._value, 0, 0) </tag>
				</item>
					<item> 
						last year 
					<tag> oRet = getFixedHoliday($$._value, -1, 0) </tag>
				</item>
					<item>
						<tag> oRet = getFixedHoliday($$._value, 99, 0) </tag>
					</item>
				</one-of>
			</item>
			<item>
				<ruleref uri="#WhichFloatingHoliday" />
				<one-of>
					<item> 
						next year 
					<tag> oRet = getFloatingHoliday($$._value, 1, 0) </tag>
				</item>
					<item> 
						this year 
					<tag> oRet = getFloatingHoliday($$._value, 0, 0) </tag>
				</item>
					<item> 
						last year 
					<tag> oRet = getFloatingHoliday($$._value, -1, 0) </tag>
				</item>
					<item>
						<tag> oRet = getFloatingHoliday($$._value, 99, 0) </tag>
					</item>
				</one-of>
			</item>
			<item>
				<ruleref uri="#WhichEasterHoliday" />
				<one-of>
					<item> 
						next year 
					<tag> oRet = getEasterHoliday($$._value, 1, 0) </tag>
				</item>
					<item> 
						this year 
					<tag> oRet = getEasterHoliday($$._value, 0, 0) </tag>
				</item>
					<item> 
						last year 
					<tag> oRet = getEasterHoliday($$._value, -1, 0) </tag>
				</item>
					<item>
						<tag> oRet = getEasterHoliday($$._value, 99, 0) </tag>
					</item>
				</one-of>
			</item>
			<item>
				next
			<one-of>
					<item>
						<ruleref uri="#WhichFixedHoliday" />
						<tag> oRet = getFixedHoliday($$._value, 2, 0) </tag>
					</item>
					<item>
						<ruleref uri="#WhichFloatingHoliday" />
						<tag> oRet = getFloatingHoliday($$._value, 2, 0) </tag>
					</item>
					<item>
						<ruleref uri="#WhichEasterHoliday" />
						<tag> oRet = getEasterHoliday($$._value, 2, 0) </tag>
					</item>
				</one-of>
		</item>
			<item>
				this
			<one-of>
					<item>
						<ruleref uri="#WhichFixedHoliday" />
						<tag> oRet = getFixedHoliday($$._value, 0, 0) </tag>
					</item>
					<item>
						<ruleref uri="#WhichFloatingHoliday" />
						<tag> oRet = getFloatingHoliday($$._value, 0, 0) </tag>
					</item>
					<item>
						<ruleref uri="#WhichEasterHoliday" />
						<tag> oRet = getEasterHoliday($$._value, 0, 0) </tag>
					</item>
				</one-of>
		</item>
			<item>
				last
			<one-of>
					<item>
						<ruleref uri="#WhichFixedHoliday" />
						<tag> oRet = getFixedHoliday($$._value, -2, 0) </tag>
					</item>
					<item>
						<ruleref uri="#WhichFloatingHoliday" />
						<tag> oRet = getFloatingHoliday($$._value, -2, 0) </tag>
					</item>
					<item>
						<ruleref uri="#WhichEasterHoliday" />
						<tag> oRet = getEasterHoliday($$._value, -2, 0) </tag>
					</item>
				</one-of>
		</item>
		</one-of>
		<tag> <![CDATA[
$.Year = oRet.Year;
$.Month = oRet.Month;
$.Day = oRet.Day;
$._attributes.name = "Holiday";
$.Holiday = $$ ]]> </tag>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $USHoliday_future.Year: $Year
$USHoliday_future.Month._value: integer 
$USHoliday_future.Month._attributes.name: string ("Derived")
$USHoliday_future.Day._value: integer
$USHoliday_future.Day._attributes.name: string ("Derived")
$USHoliday_future.Holiday: string ("Christmas", "Easter", "LaborDay"...)
$USHoliday_future._attributes.name: string ("Holiday")
 -->
	<rule id="USHoliday_future" scope="public">
		<example> Christmas </example>
		<example> next Mother's Day </example>
		<example> Father's Day last year </example>
		<example> this Independence Day </example>
		<tag> <![CDATA[
	function getFixedHolidayCore(month, day, year, context){
		 var oToday = new Date();
		 var oDate = new Object; oDate.Year= []; oDate.Month=[]; oDate.Day=[];
		 oDate.Year._value= oToday.getFullYear(); oDate.Month._value=month; oDate.Day._value=day;
		 oDate.Year._attributes = []; oDate.Year._attributes.name="Assumed";
		 oDate.Month._attributes = []; oDate.Month._attributes.name="Derived"; 
		 oDate.Day._attributes = []; oDate.Day._attributes.name="Derived";
		 if (year!=99) oDate.Year._attributes.name="Derived";
		 if ((year==99) && (context==1)) year = 2;
		 if ((year==99) && (context==-1)) year = -2;
		 if (year == 1) oDate.Year._value += 1;
		 if (year == -1) oDate.Year._value -= 1;
		 var monthOfToday= oToday.getMonth() + 1;
		 var dayOfToday= oToday.getDate();
		 if (year == 2) {
	 if ((month > monthOfToday)||((month == monthOfToday) && (day >= dayOfToday))) {}
	 else { oDate.Year._value += 1; }
		 }
		 if (year == -2) {
		 if ((month < monthOfToday)||((month == monthOfToday) && (day <= dayOfToday))) {} 
		 else { oDate.Year._value -= 1; }
		 }
		 return oDate; }
	 ]]>
	</tag>
		<tag> <![CDATA[
	 function getFixedHoliday(WhichHoliday, year, context){
	 if (WhichHoliday=="NewYear") return getFixedHolidayCore(1,1, year, context); 
		else if (WhichHoliday=="NewYearEve") return getFixedHolidayCore(12,31, year, context);
		else if (WhichHoliday=="Christmas") return getFixedHolidayCore(12,25, year, context);
		else if (WhichHoliday=="ChristmasEve") return getFixedHolidayCore(12,24, year, context);
		else if (WhichHoliday=="ValentinesDay") return getFixedHolidayCore(2,14, year, context);
		else if (WhichHoliday=="IndependenceDay") return getFixedHolidayCore(7,4, year, context);
		else if (WhichHoliday=="Halloween") return getFixedHolidayCore(10,31, year, context);
		}
	 ]]>
	</tag>
		<tag> <![CDATA[
	 function getFloatingHolidayCore(month, week, dayOfWeek, year, context){
	 var oToday = new Date(); 
		var oDate = new Object; oDate.Year=[]; oDate.Month=[]; oDate.Day=[];
		oDate.Year._attributes = []; oDate.Year._attributes.name="Derived";
		oDate.Month._attributes = []; oDate.Month._attributes.name="Derived";
		oDate.Day._attributes = []; oDate.Day._attributes.name="Derived";
		var holidayOfWeek, holiday; 
	 if ((year==99) && (context==1)) year = 2;
		if ((year==99) && (context==-1)) year = -2;
		var monthOfToday= oToday.getMonth() + 1;
		var dayOfToday= oToday.getDate();
		var oHoliday = new Date();
		oHoliday.setDate(1);
		if ((year == -1) || (year == 1)) oHoliday.setFullYear(oHoliday.getFullYear()+ year);
		if (week == -1) {
		 if (month == 12) { oHoliday.setMonth(11); oHoliday.setDate(31); } 
		 else { oHoliday.setMonth(month); var temp = oHoliday.valueOf(); oHiliday = new Date(temp - 86400000); }
			holidayOfWeek = oHoliday.getDay(); holiday = oHoliday.getDate();
			if (holidayOfWeek < dayOfWeek) holiday -= 7; holiday -= (holidayOfWeek - dayOfWeek);
		} else {
			oHoliday.setMonth(month - 1); holidayOfWeek = oHoliday.getDay(); holiday = 1;
			if (holidayOfWeek > dayOfWeek) holiday += 7; holiday += (dayOfWeek - holidayOfWeek); 
			holiday += (week -1) * 7;
		}
		oHoliday.setDate(holiday);
		oDate.Year._value = oHoliday.getFullYear(); oDate.Month._value = oHoliday.getMonth() + 1; oDate.Day._value = oHoliday.getDate();
		if (year == 2) {
			if ((month > monthOfToday)||((month == monthOfToday) && (holiday >= dayOfToday))) {}
			else { return getFloatingHolidayCore(month, week, dayOfWeek, 1, context); }
		}
		if (year == -2) {
			if ((month < monthOfToday)||((month == monthOfToday) && (holiday <= dayOfToday))) {} 
			else { return getFloatingHolidayCore(month, week, dayOfWeek, -1, context); }
		}
		return oDate;
	 }
	]]>
	</tag>
		<tag> <![CDATA[
	 function getFloatingHoliday(WhichHoliday, year, context){
		if (WhichHoliday=="Thanksgiving") return getFloatingHolidayCore(11,4,4, year, context); 
		else if (WhichHoliday=="MemorialDay") return getFloatingHolidayCore(5,-1,1, year, context); 
		else if (WhichHoliday=="LaborDay") return getFloatingHolidayCore(9,1,1, year, context); 
		else if (WhichHoliday=="MothersDay") return getFloatingHolidayCore(5,2,0, year, context); 
		else if (WhichHoliday=="FathersDay") return getFloatingHolidayCore(6,3,0, year, context); 
		else if (WhichHoliday=="PresidentsDay") return getFloatingHolidayCore(2,3,1, year, context); 
		else if (WhichHoliday=="ColumbusDay") return getFloatingHolidayCore(10,2,1, year, context); 
		else if (WhichHoliday=="MartinLutherKingDay") return getFloatingHolidayCore(1,3,1, year, context); 		 
	 }
	 ]]>
	</tag>
		<tag> <![CDATA[
	function getEasterCore(offset, year, context){
		var oToday = new Date(); 
		var oDate = new Object; oDate.Year=[]; oDate.Month=[]; oDate.Day=[];
		oDate.Year._attributes=[]; oDate.Year._attributes.name="Derived";
		oDate.Month._attributes=[]; oDate.Month._attributes.name="Derived";
		oDate.Day._attributes=[]; oDate.Day._attributes.name="Derived";
		if ((year==99) && (context==1)) year = 2;
		if ((year==99) && (context==-1)) year = -2;
		var monthOfToday= oToday.getMonth() + 1;
		var dayOfToday= oToday.getDate();
		var oHoliday = new Date();
		oHoliday.setDate(1);
		if ((year == -1) || (year == 1)) oHoliday.setFullYear(oHoliday.getFullYear()+ year);
		var whichYear = oHoliday.getFullYear();
		if (whichYear == 2000) { oHoliday.setMonth(3); oHoliday.setDate(23); } 
		else if (whichYear == 2001) { oHoliday.setMonth(3); oHoliday.setDate(15); } 
		else if (whichYear == 2002) { oHoliday.setMonth(2); oHoliday.setDate(31); } 
		else if (whichYear == 2003) { oHoliday.setMonth(3); oHoliday.setDate(20); } 
		else if (whichYear == 2004) { oHoliday.setMonth(3); oHoliday.setDate(11); } 
		else if (whichYear == 2005) { oHoliday.setMonth(2); oHoliday.setDate(27); } 
		else if (whichYear == 2006) { oHoliday.setMonth(3); oHoliday.setDate(16); } 
		else if (whichYear == 2007) { oHoliday.setMonth(3); oHoliday.setDate(8); } 
		else if (whichYear == 2008) { oHoliday.setMonth(2); oHoliday.setDate(23); } 
		else if (whichYear == 2009) { oHoliday.setMonth(3); oHoliday.setDate(12); } 
		else { oHoliday.setMonth(3); oHoliday.setDate(4); } 
		oHoliday = new Date( oHoliday.valueOf() + offset * 86400000 ); 
		oDate.Year._value = oHoliday.getFullYear(); oDate.Month._value = oHoliday.getMonth() + 1; oDate.Day._value = oHoliday.getDate();
		if (year == 2) {
			if ((oDate.Month._value > monthOfToday)||((oDate.Month._value == monthOfToday) && (oDate.Day._value >= dayOfToday))) {}
		 else { return getEasterCore(offset, 1, context); }
		}
		if (year == -2) {
			if ((oDate.Month._value < monthOfToday)||((oDate.Month._value == monthOfToday) && (oDate.Day._value <= dayOfToday))) {}
		 else { return getEasterCore(offset, -1, context); }
		}
		return oDate;
		}
	 ]]>
	</tag>
		<tag> <![CDATA[
	function getEasterHoliday(WhichHoliday, year, context){
		if (WhichHoliday=="Easter") return getEasterCore(0, year, context); 
		else if (WhichHoliday=="GoodFriday") return getEasterCore(-2, year, context); 
		else if (WhichHoliday=="EasterMonday") return getEasterCore(1, year, context); 
		}
	]]>
	</tag>
		<one-of>
			<item>
				<ruleref uri="#WhichFixedHoliday" />
				<one-of>
					<item> 
						next year 
					<tag> oRet = getFixedHoliday($$._value, 1, 1) </tag>
				</item>
					<item> 
						this year 
					<tag> oRet = getFixedHoliday($$._value, 0, 1) </tag>
				</item>
					<item> 
						last year 
					<tag> oRet = getFixedHoliday($$._value, -1, 1) </tag>
				</item>
					<item>
						<tag> oRet = getFixedHoliday($$._value, 99, 1) </tag>
					</item>
				</one-of>
			</item>
			<item>
				<ruleref uri="#WhichFloatingHoliday" />
				<one-of>
					<item> 
						next year 
					<tag> oRet = getFloatingHoliday($$._value, 1, 1) </tag>
				</item>
					<item> 
						this year 
					<tag> oRet = getFloatingHoliday($$._value, 0, 1) </tag>
				</item>
					<item> 
						last year 
					<tag> oRet = getFloatingHoliday($$._value, -1, 1) </tag>
				</item>
					<item>
						<tag> oRet = getFloatingHoliday($$._value, 99, 1) </tag>
					</item>
				</one-of>
			</item>
			<item>
				<ruleref uri="#WhichEasterHoliday" />
				<one-of>
					<item> 
						next year 
					<tag> oRet = getEasterHoliday($$._value, 1, 1) </tag>
				</item>
					<item> 
						this year 
					<tag> oRet = getEasterHoliday($$._value, 0, 1) </tag>
				</item>
					<item> 
						last year 
					<tag> oRet = getEasterHoliday($$._value, -1, 1) </tag>
				</item>
					<item>
						<tag> oRet = getEasterHoliday($$._value, 99, 1) </tag>
					</item>
				</one-of>
			</item>
			<item>
				next
			<one-of>
					<item>
						<ruleref uri="#WhichFixedHoliday" />
						<tag> oRet = getFixedHoliday($$._value, 2, 1) </tag>
					</item>
					<item>
						<ruleref uri="#WhichFloatingHoliday" />
						<tag> oRet = getFloatingHoliday($$._value, 2, 1) </tag>
					</item>
					<item>
						<ruleref uri="#WhichEasterHoliday" />
						<tag> oRet = getEasterHoliday($$._value, 2, 1) </tag>
					</item>
				</one-of>
		</item>
			<item>
				this
			<one-of>
					<item>
						<ruleref uri="#WhichFixedHoliday" />
						<tag> oRet = getFixedHoliday($$._value, 0, 1) </tag>
					</item>
					<item>
						<ruleref uri="#WhichFloatingHoliday" />
						<tag> oRet = getFloatingHoliday($$._value, 0, 1) </tag>
					</item>
					<item>
						<ruleref uri="#WhichEasterHoliday" />
						<tag> oRet = getEasterHoliday($$._value, 0, 1) </tag>
					</item>
				</one-of>
		</item>
			<item>
				last
			<one-of>
					<item>
						<ruleref uri="#WhichFixedHoliday" />
						<tag> oRet = getFixedHoliday($$._value, -2, 1) </tag>
					</item>
					<item>
						<ruleref uri="#WhichFloatingHoliday" />
						<tag> oRet = getFloatingHoliday($$._value, -2, 1) </tag>
					</item>
					<item>
						<ruleref uri="#WhichEasterHoliday" />
						<tag> oRet = getEasterHoliday($$._value, -2, 1) </tag>
					</item>
				</one-of>
		</item>
		</one-of>
		<tag><![CDATA[
$.Year = oRet.Year;
$.Month = oRet.Month;
$.Day = oRet.Day;
$._attributes.name = "Holiday";
$.Holiday = $$ ]]></tag>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $USHoliday_past.Year: $Year
$USHoliday_past.Month._value: integer 
$USHoliday_past.Month._attributes.name: string ("Derived")
$USHoliday_past.Day._value: integer
$USHoliday_past.Day._attributes.name: string ("Derived")
$USHoliday_past.Holiday: string ("Christmas", "Easter", "LaborDay"...)
$USHoliday_past._attributes.name: string ("Holiday")
 -->
	<rule id="USHoliday_past" scope="public">
		<example> Christmas </example>
		<example> next Mother's Day </example>
		<example> Father's Day last year </example>
		<example> this Independence Day </example>
		<tag> <![CDATA[
	function getFixedHolidayCore(month, day, year, context){
		 var oToday = new Date();
		 var oDate = new Object; oDate.Year= []; oDate.Month=[]; oDate.Day=[];
		 oDate.Year._value= oToday.getFullYear(); oDate.Month._value=month; oDate.Day._value=day;
		 oDate.Year._attributes = []; oDate.Year._attributes.name="Assumed";
		 oDate.Month._attributes = []; oDate.Month._attributes.name="Derived"; 
		 oDate.Day._attributes = []; oDate.Day._attributes.name="Derived";
		 if (year!=99) oDate.Year._attributes.name="Derived";
		 if ((year==99) && (context==1)) year = 2;
		 if ((year==99) && (context==-1)) year = -2;
		 if (year == 1) oDate.Year._value += 1;
		 if (year == -1) oDate.Year._value -= 1;
		 var monthOfToday= oToday.getMonth() + 1;
		 var dayOfToday= oToday.getDate();
		 if (year == 2) {
	 if ((month > monthOfToday)||((month == monthOfToday) && (day >= dayOfToday))) {}
	 else { oDate.Year._value += 1; }
		 }
		 if (year == -2) {
		 if ((month < monthOfToday)||((month == monthOfToday) && (day <= dayOfToday))) {} 
		 else { oDate.Year._value -= 1; }
		 }
		 return oDate; }
	 ]]>
	</tag>
		<tag> <![CDATA[
	 function getFixedHoliday(WhichHoliday, year, context){
	 if (WhichHoliday=="NewYear") return getFixedHolidayCore(1,1, year, context); 
		else if (WhichHoliday=="NewYearEve") return getFixedHolidayCore(12,31, year, context);
		else if (WhichHoliday=="Christmas") return getFixedHolidayCore(12,25, year, context);
		else if (WhichHoliday=="ChristmasEve") return getFixedHolidayCore(12,24, year, context);
		else if (WhichHoliday=="ValentinesDay") return getFixedHolidayCore(2,14, year, context);
		else if (WhichHoliday=="IndependenceDay") return getFixedHolidayCore(7,4, year, context);
		else if (WhichHoliday=="Halloween") return getFixedHolidayCore(10,31, year, context);
		}
	 ]]>
	</tag>
		<tag> <![CDATA[
	 function getFloatingHolidayCore(month, week, dayOfWeek, year, context){
	 var oToday = new Date(); 
		var oDate = new Object; oDate.Year=[]; oDate.Month=[]; oDate.Day=[];
		oDate.Year._attributes = []; oDate.Year._attributes.name="Derived";
		oDate.Month._attributes = []; oDate.Month._attributes.name="Derived";
		oDate.Day._attributes = []; oDate.Day._attributes.name="Derived";
		var holidayOfWeek, holiday; 
	 if ((year==99) && (context==1)) year = 2;
		if ((year==99) && (context==-1)) year = -2;
		var monthOfToday= oToday.getMonth() + 1;
		var dayOfToday= oToday.getDate();
		var oHoliday = new Date();
		oHoliday.setDate(1);
		if ((year == -1) || (year == 1)) oHoliday.setFullYear(oHoliday.getFullYear()+ year);
		if (week == -1) {
		 if (month == 12) { oHoliday.setMonth(11); oHoliday.setDate(31); } 
		 else { oHoliday.setMonth(month); var temp = oHoliday.valueOf(); oHiliday = new Date(temp - 86400000); }
			holidayOfWeek = oHoliday.getDay(); holiday = oHoliday.getDate();
			if (holidayOfWeek < dayOfWeek) holiday -= 7; holiday -= (holidayOfWeek - dayOfWeek);
		} else {
			oHoliday.setMonth(month - 1); holidayOfWeek = oHoliday.getDay(); holiday = 1;
			if (holidayOfWeek > dayOfWeek) holiday += 7; holiday += (dayOfWeek - holidayOfWeek); 
			holiday += (week -1) * 7;
		}
		oHoliday.setDate(holiday);
		oDate.Year._value = oHoliday.getFullYear(); oDate.Month._value = oHoliday.getMonth() + 1; oDate.Day._value = oHoliday.getDate();
		if (year == 2) {
			if ((month > monthOfToday)||((month == monthOfToday) && (holiday >= dayOfToday))) {}
			else { return getFloatingHolidayCore(month, week, dayOfWeek, 1, context); }
		}
		if (year == -2) {
			if ((month < monthOfToday)||((month == monthOfToday) && (holiday <= dayOfToday))) {} 
			else { return getFloatingHolidayCore(month, week, dayOfWeek, -1, context); }
		}
		return oDate;
	 }
	]]>
	</tag>
		<tag> <![CDATA[
	 function getFloatingHoliday(WhichHoliday, year, context){
		if (WhichHoliday=="Thanksgiving") return getFloatingHolidayCore(11,4,4, year, context); 
		else if (WhichHoliday=="MemorialDay") return getFloatingHolidayCore(5,-1,1, year, context); 
		else if (WhichHoliday=="LaborDay") return getFloatingHolidayCore(9,1,1, year, context); 
		else if (WhichHoliday=="MothersDay") return getFloatingHolidayCore(5,2,0, year, context); 
		else if (WhichHoliday=="FathersDay") return getFloatingHolidayCore(6,3,0, year, context); 
		else if (WhichHoliday=="PresidentsDay") return getFloatingHolidayCore(2,3,1, year, context); 
		else if (WhichHoliday=="ColumbusDay") return getFloatingHolidayCore(10,2,1, year, context); 
		else if (WhichHoliday=="MartinLutherKingDay") return getFloatingHolidayCore(1,3,1, year, context); 		 
	 }
	 ]]>
	</tag>
		<tag> <![CDATA[
	function getEasterCore(offset, year, context){
		var oToday = new Date(); 
		var oDate = new Object; oDate.Year=[]; oDate.Month=[]; oDate.Day=[];
		oDate.Year._attributes=[]; oDate.Year._attributes.name="Derived";
		oDate.Month._attributes=[]; oDate.Month._attributes.name="Derived";
		oDate.Day._attributes=[]; oDate.Day._attributes.name="Derived";
		if ((year==99) && (context==1)) year = 2;
		if ((year==99) && (context==-1)) year = -2;
		var monthOfToday= oToday.getMonth() + 1;
		var dayOfToday= oToday.getDate();
		var oHoliday = new Date();
		oHoliday.setDate(1);
		if ((year == -1) || (year == 1)) oHoliday.setFullYear(oHoliday.getFullYear()+ year);
		var whichYear = oHoliday.getFullYear();
		if (whichYear == 2000) { oHoliday.setMonth(3); oHoliday.setDate(23); } 
		else if (whichYear == 2001) { oHoliday.setMonth(3); oHoliday.setDate(15); } 
		else if (whichYear == 2002) { oHoliday.setMonth(2); oHoliday.setDate(31); } 
		else if (whichYear == 2003) { oHoliday.setMonth(3); oHoliday.setDate(20); } 
		else if (whichYear == 2004) { oHoliday.setMonth(3); oHoliday.setDate(11); } 
		else if (whichYear == 2005) { oHoliday.setMonth(2); oHoliday.setDate(27); } 
		else if (whichYear == 2006) { oHoliday.setMonth(3); oHoliday.setDate(16); } 
		else if (whichYear == 2007) { oHoliday.setMonth(3); oHoliday.setDate(8); } 
		else if (whichYear == 2008) { oHoliday.setMonth(2); oHoliday.setDate(23); } 
		else if (whichYear == 2009) { oHoliday.setMonth(3); oHoliday.setDate(12); } 
		else { oHoliday.setMonth(3); oHoliday.setDate(4); } 
		oHoliday = new Date( oHoliday.valueOf() + offset * 86400000 ); 
		oDate.Year._value = oHoliday.getFullYear(); oDate.Month._value = oHoliday.getMonth() + 1; oDate.Day._value = oHoliday.getDate();
		if (year == 2) {
			if ((oDate.Month._value > monthOfToday)||((oDate.Month._value == monthOfToday) && (oDate.Day._value >= dayOfToday))) {}
		 else { return getEasterCore(offset, 1, context); }
		}
		if (year == -2) {
			if ((oDate.Month._value < monthOfToday)||((oDate.Month._value == monthOfToday) && (oDate.Day._value <= dayOfToday))) {}
		 else { return getEasterCore(offset, -1, context); }
		}
		return oDate;
		}
	 ]]>
	</tag>
		<tag> <![CDATA[
	function getEasterHoliday(WhichHoliday, year, context){
		if (WhichHoliday=="Easter") return getEasterCore(0, year, context); 
		else if (WhichHoliday=="GoodFriday") return getEasterCore(-2, year, context); 
		else if (WhichHoliday=="EasterMonday") return getEasterCore(1, year, context); 
		}
	]]>
	</tag>
		<one-of>
			<item>
				<ruleref uri="#WhichFixedHoliday" />
				<one-of>
					<item> 
						next year 
					<tag> oRet = getFixedHoliday($$._value, 1, -1) </tag>
				</item>
					<item> 
						this year 
					<tag> oRet = getFixedHoliday($$._value, 0, -1) </tag>
				</item>
					<item> 
						last year 
					<tag> oRet = getFixedHoliday($$._value, -1, -1) </tag>
				</item>
					<item>
						<tag> oRet = getFixedHoliday($$._value, 99, -1) </tag>
					</item>
				</one-of>
			</item>
			<item>
				<ruleref uri="#WhichFloatingHoliday" />
				<one-of>
					<item> 
						next year 
					<tag> oRet = getFloatingHoliday($$._value, 1, -1) </tag>
				</item>
					<item> 
						this year 
					<tag> oRet = getFloatingHoliday($$._value, 0, -1) </tag>
				</item>
					<item> 
						last year 
					<tag> oRet = getFloatingHoliday($$._value, -1, -1) </tag>
				</item>
					<item>
						<tag> oRet = getFloatingHoliday($$._value, 99, -1) </tag>
					</item>
				</one-of>
			</item>
			<item>
				<ruleref uri="#WhichEasterHoliday" />
				<one-of>
					<item> 
						next year 
					<tag> oRet = getEasterHoliday($$._value, 1, -1) </tag>
				</item>
					<item> 
						this year 
					<tag> oRet = getEasterHoliday($$._value, 0, -1) </tag>
				</item>
					<item> 
						last year 
					<tag> oRet = getEasterHoliday($$._value, -1, -1) </tag>
				</item>
					<item>
						<tag> oRet = getEasterHoliday($$._value, 99, -1) </tag>
					</item>
				</one-of>
			</item>
			<item>
				next
			<one-of>
					<item>
						<ruleref uri="#WhichFixedHoliday" />
						<tag> oRet = getFixedHoliday($$._value, 2, -1) </tag>
					</item>
					<item>
						<ruleref uri="#WhichFloatingHoliday" />
						<tag> oRet = getFloatingHoliday($$._value, 2, -1) </tag>
					</item>
					<item>
						<ruleref uri="#WhichEasterHoliday" />
						<tag> oRet = getEasterHoliday($$._value, 2, -1) </tag>
					</item>
				</one-of>
		</item>
			<item>
				this
			<one-of>
					<item>
						<ruleref uri="#WhichFixedHoliday" />
						<tag> oRet = getFixedHoliday($$._value, 0, -1) </tag>
					</item>
					<item>
						<ruleref uri="#WhichFloatingHoliday" />
						<tag> oRet = getFloatingHoliday($$._value, 0, -1) </tag>
					</item>
					<item>
						<ruleref uri="#WhichEasterHoliday" />
						<tag> oRet = getEasterHoliday($$._value, 0, -1) </tag>
					</item>
				</one-of>
		</item>
			<item>
				last
			<one-of>
					<item>
						<ruleref uri="#WhichFixedHoliday" />
						<tag> oRet = getFixedHoliday($$._value, -2, -1) </tag>
					</item>
					<item>
						<ruleref uri="#WhichFloatingHoliday" />
						<tag> oRet = getFloatingHoliday($$._value, -2, -1) </tag>
					</item>
					<item>
						<ruleref uri="#WhichEasterHoliday" />
						<tag> oRet = getEasterHoliday($$._value, -2, -1) </tag>
					</item>
				</one-of>
		</item>
		</one-of>
		<tag> <![CDATA[
$.Year = oRet.Year;
$.Month = oRet.Month;
$.Day = oRet.Day;
$._attributes.name = "Holiday";
$.Holiday = $$ ]]></tag>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $CommonDateUnits._value : string ("Days", "Weeks", "Months", "Years") -->
	<rule id="CommonDateUnits">
		<example> days </example>
		<example> months </example>
		<example> week </example>
		<one-of>
			<item>
				<tag> $._value = "Days" </tag>
				<one-of>
					<item> days </item>
					<item> day </item>
				</one-of>
			</item>
			<item>
				<tag> $._value = "Weeks" </tag>
				<one-of>
					<item> weeks </item>
					<item> week </item>
				</one-of>
			</item>
			<item>
				<tag> $._value = "Months" </tag>
				<one-of>
					<item> months </item>
					<item> month </item>
				</one-of>
			</item>
			<item>
				<tag> $._value = "Years" </tag>
				<one-of>
					<item> years </item>
					<item> year </item>
				</one-of>
			</item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $evaluated_relative_date.Year: $Year
$evaluated_relative_date.Month._value: integer 
$evaluated_relative_date.Month._attributes.name: string ("Derived")
$evaluated_relative_date.Day._value: integer
$evaluated_relative_date.Day._attributes.name: string ("Derived")
$evaluated_relative_date._attributes.name: string ("EvaluatedRelativeDate")
$evaluated_relative_date.AlternativeDateCode: string ("Yesterday", "tomorrow")
$evaluated_relative_date.AlternativeYear: $Year
$evaluated_relative_date.AlternativeMonth._value: integer 
$evaluated_relative_date.AlternativeMonth._attributes.name: string ("Derived")
$evaluated_relative_date.AlternativeDay._value: integer
$evaluated_relative_date.AlternativeDay._attributes.name: string ("Derived")
 -->
	<rule id="evaluated_relative_date" scope="public">
		<example> next Tuesday </example>
		<example> three days ago </example>
		<example> Monday </example>
		<example> the day after tomorrow </example>
		<example> the Friday last </example>
		<tag> <![CDATA[
	function weekday2Offset(thatDayOfWeek, weekOffset, dateContext){
		var oToday=new Date();
		var todayOfWeek = oToday.getDay();
		var tomorrowOfWeek = (todayOfWeek < 6)? todayOfWeek + 1 : 0;
		var yesterdayOfWeek = (todayOfWeek > 0)? todayOfWeek - 1 : 6;
		if (weekOffset=="AfterNext") {
			if (thatDayOfWeek > todayOfWeek) { return 7 + thatDayOfWeek - todayOfWeek; }
			else { return 14 + thatDayOfWeek - todayOfWeek; }
		} else if (weekOffset=="BeforeLast") {
			if (thatDayOfWeek >= todayOfWeek) { return -14 + thatDayOfWeek - todayOfWeek; }
			else { return -7 + thatDayOfWeek - todayOfWeek; }
		} else if ((weekOffset=="ThisComing")||((dateContext==1) &&((weekOffset=="This") || ( weekOffset == "" )))) {
			if (thatDayOfWeek < todayOfWeek) { return thatDayOfWeek - todayOfWeek + 7; }
			else if (thatDayOfWeek > todayOfWeek) { return thatDayOfWeek - todayOfWeek; }
			else { return 7; }
		} else if ((weekOffset=="ThisPast")||((dateContext==-1) &&((weekOffset=="This") || ( weekOffset == "" )))) {
			if (thatDayOfWeek < todayOfWeek) { return thatDayOfWeek - todayOfWeek; }
			else if (thatDayOfWeek > todayOfWeek) { return thatDayOfWeek - todayOfWeek - 7; }
			else { return -7; }
		} else if (weekOffset=="Next") {
			if (thatDayOfWeek < tomorrowOfWeek) { return thatDayOfWeek - tomorrowOfWeek + 8; }
			else if (thatDayOfWeek > tomorrowOfWeek) { return thatDayOfWeek - tomorrowOfWeek + 1; }
			else { return 8 + 200; }
		} else if (weekOffset=="Last") {
			if (thatDayOfWeek < yesterdayOfWeek) { return thatDayOfWeek - yesterdayOfWeek - 1; }
			else if (thatDayOfWeek > yesterdayOfWeek) { return thatDayOfWeek - yesterdayOfWeek - 8; }
			else { return -8 + 100; }
		} else if ((weekOffset=="This") || ( weekOffset == "" )) {
			if (thatDayOfWeek == 0) { return 7 - todayOfWeek; }
			else { return thatDayOfWeek - todayOfWeek; }
		} else return 0;
	}
	 ]]>
	</tag>
		<tag> <![CDATA[
	function duration2Offset(number,units,offset) {
		if (number == 0) return (offset);
		else if (units == "Days") return (offset + number);
		else if (units == "Weeks") return (offset + 7 * number);
		var oToday = new Date(); 
		var oRef = new Date( oToday.valueOf() + offset * 86400000);
		if (units == "Years") { oRef.setFullYear( oRef.getFullYear() + number ); return (Math.round((oRef.valueOf() - oToday.valueOf())/86400000)); }
		else if (units == "Months") {
			var year = oRef.getFullYear(); month = oRef.getMonth();
			var multiplier = 1;
			var addyear = 0;
			if (number < 0) {
				multiplier = -1;
				number = -number;
			}
			addyear = Math.floor(number / 12);
			number = number - (addyear * 12);
			year = year + addyear * multiplier;
			month = month + number * multiplier;

			oRef.setFullYear(year); oRef.setMonth(month);
			return (Math.round((oRef.valueOf() - oToday.valueOf())/86400000)); 
		}
	}
	]]>
	</tag>
		<tag> <![CDATA[
	function alternativeDateCode(offset){
		if (offset > 170) return "Tomorrow";
		else if (offset > 70) return "Yesterday";
		else return "";
	}
	 ]]>
	</tag>
		<tag> <![CDATA[
	function trueOffset(offset){
		while (offset > 30) offset -= 100;
		return offset;
	}
	 ]]>
	</tag>
		<tag> _offset=0; _duration=0; _unit="Days"; _weekModifier="";</tag>
		<item repeat="0-1">
			<ruleref uri="#common_natural_number" />
			<ruleref uri="#CommonDateUnits" />
			<tag> _unit= $$._value; </tag>
			<one-of>
				<item>
					<one-of>
						<item> past </item>
						<item> after </item>
						<item> from </item>
						<item> since </item>
					</one-of>
					<tag> _duration = $common_natural_number._value; </tag>
				</item>
				<item>
					before
				<tag> _duration = -$common_natural_number._value; </tag>
			</item>
			</one-of>
		</item>
		<one-of>
			<item>
				the
			<ruleref uri="#DayOfWeek" />
			<one-of>
					<item>
					<item repeat="0-1"> after </item> next
					<tag> _offset = weekday2Offset($DayOfWeek._value, "AfterNext", 0 );
					</tag>
				</item>
					<item>
					<item repeat="0-1"> before </item> last
					<tag> _offset = weekday2Offset($DayOfWeek._value, "BeforeLast", 0 );
					</tag>
				</item>
				</one-of>
		</item>
			<item>
				<item repeat="0-1">
					<ruleref uri="#WeekModifier" />
					<tag> _weekModifier = $$._value </tag>
				</item>
				<ruleref uri="#DayOfWeek" />
				<tag> _offset = weekday2Offset($DayOfWeek._value, _weekModifier, 0 );
			</tag>
				<tag> 
				_alternativeDateCode = alternativeDateCode(_offset);
				_offset = trueOffset(_offset);
			</tag>
			</item>
			<item>
				<ruleref uri="#TodayTomorrow" />
				<tag> _offset = $$._value </tag>
			</item>
			<item>
			<ruleref uri="#common_natural_number" />
			<ruleref uri="#CommonDateUnits" />
				ago
			<tag> _offset = duration2Offset( -$common_natural_number._value, $CommonDateUnits._value, 0);
			</tag>
		</item>
			<item>
				in
			<ruleref uri="#common_natural_number" />
			<ruleref uri="#CommonDateUnits" />
			<tag> _offset = duration2Offset( $common_natural_number._value, $CommonDateUnits._value, 0);
			</tag>
		</item>
		</one-of>
		<tag>
		_offset= (_duration != 0)? duration2Offset( _duration, _unit, _offset ): _offset;
		$._attributes.name="EvaluatedRelativeDate";
	</tag>
		<tag> <![CDATA[
		var offset = 0;
		var oDate = new Date((new Date()).valueOf() + _offset * 86400000);
		$.Year = []; $.Month = []; $.Day = [];
		$.Year._attributes = []; $.Month._attributes = []; $.Day._attributes = []; 
		$.Year._attributes.name="Derived"; $.Month._attributes.name="Derived"; $.Day._attributes.name="Derived";
		$.Year._value = oDate.getFullYear(); $.Month._value = oDate.getMonth() + 1; $.Day._value = oDate.getDate();
		if ((typeof(_alternativeDateCode) != "undefined") && (_alternativeDateCode != "")) { 
			$.alternativeDateCode= _alternativeDateCode;
			if (_alternativeDateCode == "Yesterday") oDate = new Date(oDate.valueOf() + 7 * 86400000);
			else oDate = new Date(oDate.valueOf() - 7 * 86400000);			
			$.AlternativeYear = []; $.AlternativeMonth = []; $.AlternativeDay = [];
			$.AlternativeYear._attributes = []; $.AlternativeMonth._attributes = []; $.AlternativeDay._attributes = [];
			$.AlternativeYear._attributes.name="Derived"; $.AlternativeMonth._attributes.name="Derived"; $.AlternativeDay._attributes.name="Derived";
			$.AlternativeYear._value = oDate.getFullYear(); $.AlternativeMonth._value = oDate.getMonth() + 1; $.AlternativeDay._value = oDate.getDate();
		}
	]]>
	</tag>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $evaluated_relative_date_future.Year: $Year
$evaluated_relative_date_future.Month._value: integer 
$evaluated_relative_date_future.Month._attributes.name: string ("Derived")
$evaluated_relative_date_future.Day._value: integer
$evaluated_relative_date_future.Day._attributes.name: string ("Derived")
$evaluated_relative_date_future._attributes.name: string ("EvaluatedRelativeDate")
$evaluated_relative_date_future.AlternativeDateCode: string ("Yesterday", "tomorrow")
$evaluated_relative_date_future.AlternativeYear: $Year
$evaluated_relative_date_future.AlternativeMonth._value: integer 
$evaluated_relative_date_future.AlternativeMonth._attributes.name: string ("Derived")
$evaluated_relative_date_future.AlternativeDay._value: integer
$evaluated_relative_date_future.AlternativeDay._attributes.name: string ("Derived")
 -->
	<rule id="evaluated_relative_date_future" scope="public">
		<example> next Tuesday </example>
		<example> in three days </example>
		<example> Monday </example>
		<example> the day after tomorrow </example>
		<example> the Friday next </example>
		<tag> <![CDATA[
	function weekday2Offset(thatDayOfWeek, weekOffset, dateContext){
		var oToday=new Date();
		var todayOfWeek = oToday.getDay();
		var tomorrowOfWeek = (todayOfWeek < 6)? todayOfWeek + 1 : 0;
		var yesterdayOfWeek = (todayOfWeek > 0)? todayOfWeek - 1 : 6;
		if (weekOffset=="AfterNext") {
			if (thatDayOfWeek > todayOfWeek) { return 7 + thatDayOfWeek - todayOfWeek; }
			else { return 14 + thatDayOfWeek - todayOfWeek; }
		} else if (weekOffset=="BeforeLast") {
			if (thatDayOfWeek >= todayOfWeek) { return -14 + thatDayOfWeek - todayOfWeek; }
			else { return -7 + thatDayOfWeek - todayOfWeek; }
		} else if ((weekOffset=="ThisComing")||((dateContext==1) &&((weekOffset=="This") || ( weekOffset == "" )))) {
			if (thatDayOfWeek < todayOfWeek) { return thatDayOfWeek - todayOfWeek + 7; }
			else if (thatDayOfWeek > todayOfWeek) { return thatDayOfWeek - todayOfWeek; }
			else { return 7; }
		} else if ((weekOffset=="ThisPast")||((dateContext==-1) &&((weekOffset=="This") || ( weekOffset == "" )))) {
			if (thatDayOfWeek < todayOfWeek) { return thatDayOfWeek - todayOfWeek; }
			else if (thatDayOfWeek > todayOfWeek) { return thatDayOfWeek - todayOfWeek - 7; }
			else { return -7; }
		} else if (weekOffset=="Next") {
			if (thatDayOfWeek < tomorrowOfWeek) { return thatDayOfWeek - tomorrowOfWeek + 8; }
			else if (thatDayOfWeek > tomorrowOfWeek) { return thatDayOfWeek - tomorrowOfWeek + 1; }
			else { return 8 + 200; }
		} else if (weekOffset=="Last") {
			if (thatDayOfWeek < yesterdayOfWeek) { return thatDayOfWeek - yesterdayOfWeek - 1; }
			else if (thatDayOfWeek > yesterdayOfWeek) { return thatDayOfWeek - yesterdayOfWeek - 8; }
			else { return -8 + 100; }
		} else if ((weekOffset=="This") || ( weekOffset == "" )) {
			if (thatDayOfWeek == 0) { return 7 - todayOfWeek; }
			else { return thatDayOfWeek - todayOfWeek; }
		} else return 0;
	}
	 ]]>
	</tag>
		<tag> <![CDATA[
	function duration2Offset(number,units,offset) {
		if (number == 0) return (offset);
		else if (units == "Days") return (offset + number);
		else if (units == "Weeks") return (offset + 7 * number);
		var oToday = new Date(); 
		var oRef = new Date( oToday.valueOf() + offset * 86400000);
		if (units == "Years") { oRef.setFullYear( oRef.getFullYear() + number ); return (Math.round((oRef.valueOf() - oToday.valueOf())/86400000)); }
		else if (units == "Months") {
			var year = oRef.getFullYear(); month = oRef.getMonth();
			var multiplier = 1;
			var addyear = 0;
			if (number < 0) {
				multiplier = -1;
				number = -number;
			}
			addyear = Math.floor(number / 12);
			number = number - (addyear * 12);
			year = year + addyear * multiplier;
			month = month + number * multiplier;

			oRef.setFullYear(year); oRef.setMonth(month);
			return (Math.round((oRef.valueOf() - oToday.valueOf())/86400000)); 
		}
	}
	]]>
	</tag>
		<tag> <![CDATA[
	function alternativeDateCode(offset){
		if (offset > 170) return "Tomorrow";
		else if (offset > 70) return "Yesterday";
		else return "";
	}
	 ]]>
	</tag>
		<tag> <![CDATA[
	function trueOffset(offset){
		while (offset > 30) offset -= 100;
		return offset;
	}
	 ]]>
	</tag>
		<tag> _offset=0; _duration=0; _unit="Days"; _weekModifier="";</tag>
		<item repeat="0-1">
			<ruleref uri="#common_natural_number" />
			<ruleref uri="#CommonDateUnits" />
			<tag> _unit= $$._value; </tag>
			<one-of>
				<item>
					<one-of>
						<item> past </item>
						<item> after </item>
						<item> from </item>
						<item> since </item>
					</one-of>
					<tag> _duration = $common_natural_number._value; </tag>
				</item>
				<item>
					before
				<tag> _duration = -$common_natural_number._value; </tag>
			</item>
			</one-of>
		</item>
		<one-of>
			<item>
				the
			<ruleref uri="#DayOfWeek" />
			<one-of>
					<item>
					<item repeat="0-1"> after </item> next
					<tag> _offset = weekday2Offset($DayOfWeek._value, "AfterNext", 1 );
					</tag>
				</item>
					<item>
					<item repeat="0-1"> before </item> last
					<tag> _offset = weekday2Offset($DayOfWeek._value, "BeforeLast", 1 );
					</tag>
				</item>
				</one-of>
		</item>
			<item>
				<item repeat="0-1">
					<ruleref uri="#WeekModifier" />
					<tag> _weekModifier = $$._value </tag>
				</item>
				<ruleref uri="#DayOfWeek" />
				<tag> _offset = weekday2Offset($DayOfWeek._value, _weekModifier, 1 );
			</tag>
				<tag> 
				_alternativeDateCode = alternativeDateCode(_offset);
				_offset = trueOffset(_offset);
			</tag>
			</item>
			<item>
				<ruleref uri="#TodayTomorrow" />
				<tag> _offset = $$._value </tag>
			</item>
			<item>
			<ruleref uri="#common_natural_number" />
			<ruleref uri="#CommonDateUnits" />
				ago
			<tag> _offset = duration2Offset( -$common_natural_number._value, $CommonDateUnits._value, 1);
			</tag>
		</item>
			<item>
				in
			<ruleref uri="#common_natural_number" />
			<ruleref uri="#CommonDateUnits" />
			<tag> _offset = duration2Offset( $common_natural_number._value, $CommonDateUnits._value, 1);
			</tag>
		</item>
		</one-of>
		<tag>
		_offset= (_duration != 0)? duration2Offset( _duration, _unit, _offset ): _offset;
		$._attributes.name="EvaluatedRelativeDate";
	</tag>
		<tag> <![CDATA[
		var offset = 0;
		var oDate = new Date((new Date()).valueOf() + _offset * 86400000);
		$.Year = []; $.Month = []; $.Day = [];
		$.Year._attributes = []; $.Month._attributes = []; $.Day._attributes = []; 
		$.Year._attributes.name="Derived"; $.Month._attributes.name="Derived"; $.Day._attributes.name="Derived";
		$.Year._value = oDate.getFullYear(); $.Month._value = oDate.getMonth() + 1; $.Day._value = oDate.getDate();
		if ((typeof(_alternativeDateCode) != "undefined") && (_alternativeDateCode != "")) { 
			$.alternativeDateCode= _alternativeDateCode;
			if (_alternativeDateCode == "Yesterday") oDate = new Date(oDate.valueOf() + 7 * 86400000);
			else oDate = new Date(oDate.valueOf() - 7 * 86400000);			
			$.AlternativeYear = []; $.AlternativeMonth = []; $.AlternativeDay = [];
			$.AlternativeYear._attributes = []; $.AlternativeMonth._attributes = []; $.AlternativeDay._attributes = [];
			$.AlternativeYear._attributes.name="Derived"; $.AlternativeMonth._attributes.name="Derived"; $.AlternativeDay._attributes.name="Derived";
			$.AlternativeYear._value = oDate.getFullYear(); $.AlternativeMonth._value = oDate.getMonth() + 1; $.AlternativeDay._value = oDate.getDate();
		}
	]]>
	</tag>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $evaluated_relative_date_past.Year: $Year
$evaluated_relative_date_past.Month._value: integer 
$evaluated_relative_date_past.Month._attributes.name: string ("Derived")
$evaluated_relative_date_past.Day._value: integer
$evaluated_relative_date_past.Day._attributes.name: string ("Derived")
$evaluated_relative_date_past._attributes.name: string ("EvaluatedRelativeDate")
$evaluated_relative_date_past.AlternativeDateCode: string ("Yesterday", "tomorrow")
$evaluated_relative_date_past.AlternativeYear: $Year
$evaluated_relative_date_past.AlternativeMonth._value: integer 
$evaluated_relative_date_past.AlternativeMonth._attributes.name: string ("Derived")
$evaluated_relative_date_past.AlternativeDay._value: integer
$evaluated_relative_date_past.AlternativeDay._attributes.name: string ("Derived")
 -->
	<rule id="evaluated_relative_date_past" scope="public">
		<example> last Tuesday </example>
		<example> three days ago </example>
		<example> Monday </example>
		<example> the day before yesterday </example>
		<example> the Friday last </example>
		<tag> <![CDATA[
	function weekday2Offset(thatDayOfWeek, weekOffset, dateContext){
		var oToday=new Date();
		var todayOfWeek = oToday.getDay();
		var tomorrowOfWeek = (todayOfWeek < 6)? todayOfWeek + 1 : 0;
		var yesterdayOfWeek = (todayOfWeek > 0)? todayOfWeek - 1 : 6;
		if (weekOffset=="AfterNext") {
			if (thatDayOfWeek > todayOfWeek) { return 7 + thatDayOfWeek - todayOfWeek; }
			else { return 14 + thatDayOfWeek - todayOfWeek; }
		} else if (weekOffset=="BeforeLast") {
			if (thatDayOfWeek >= todayOfWeek) { return -14 + thatDayOfWeek - todayOfWeek; }
			else { return -7 + thatDayOfWeek - todayOfWeek; }
		} else if ((weekOffset=="ThisComing")||((dateContext==1) &&((weekOffset=="This") || ( weekOffset == "" )))) {
			if (thatDayOfWeek < todayOfWeek) { return thatDayOfWeek - todayOfWeek + 7; }
			else if (thatDayOfWeek > todayOfWeek) { return thatDayOfWeek - todayOfWeek; }
			else { return 7; }
		} else if ((weekOffset=="ThisPast")||((dateContext==-1) &&((weekOffset=="This") || ( weekOffset == "" )))) {
			if (thatDayOfWeek < todayOfWeek) { return thatDayOfWeek - todayOfWeek; }
			else if (thatDayOfWeek > todayOfWeek) { return thatDayOfWeek - todayOfWeek - 7; }
			else { return -7; }
		} else if (weekOffset=="Next") {
			if (thatDayOfWeek < tomorrowOfWeek) { return thatDayOfWeek - tomorrowOfWeek + 8; }
			else if (thatDayOfWeek > tomorrowOfWeek) { return thatDayOfWeek - tomorrowOfWeek + 1; }
			else { return 8 + 200; }
		} else if (weekOffset=="Last") {
			if (thatDayOfWeek < yesterdayOfWeek) { return thatDayOfWeek - yesterdayOfWeek - 1; }
			else if (thatDayOfWeek > yesterdayOfWeek) { return thatDayOfWeek - yesterdayOfWeek - 8; }
			else { return -8 + 100; }
		} else if ((weekOffset=="This") || ( weekOffset == "" )) {
			if (thatDayOfWeek == 0) { return 7 - todayOfWeek; }
			else { return thatDayOfWeek - todayOfWeek; }
		} else return 0;
	}
	 ]]>
	</tag>
		<tag> <![CDATA[
	function duration2Offset(number,units,offset) {
		if (number == 0) return (offset);
		else if (units == "Days") return (offset + number);
		else if (units == "Weeks") return (offset + 7 * number);
		var oToday = new Date(); 
		var oRef = new Date( oToday.valueOf() + offset * 86400000);
		if (units == "Years") { oRef.setFullYear( oRef.getFullYear() + number ); return (Math.round((oRef.valueOf() - oToday.valueOf())/86400000)); }
		else if (units == "Months") {
			var year = oRef.getFullYear(); month = oRef.getMonth();
			var multiplier = 1;
			var addyear = 0;
			if (number < 0) {
				multiplier = -1;
				number = -number;
			}
			addyear = Math.floor(number / 12);
			number = number - (addyear * 12);
			year = year + addyear * multiplier;
			month = month + number * multiplier;

			oRef.setFullYear(year); oRef.setMonth(month);
			return (Math.round((oRef.valueOf() - oToday.valueOf())/86400000)); 
		}
	}
	]]>
	</tag>
		<tag> <![CDATA[
	function alternativeDateCode(offset){
		if (offset > 170) return "Tomorrow";
		else if (offset > 70) return "Yesterday";
		else return "";
	}
	 ]]>
	</tag>
		<tag> <![CDATA[
	function trueOffset(offset){
		while (offset > 30) offset -= 100;
		return offset;
	}
	 ]]>
	</tag>
		<tag> _offset=0; _duration=0; _unit="Days"; _weekModifier="";</tag>
		<item repeat="0-1">
			<ruleref uri="#common_natural_number" />
			<ruleref uri="#CommonDateUnits" />
			<tag> _unit= $$._value; </tag>
			<one-of>
				<item>
					<one-of>
						<item> past </item>
						<item> after </item>
						<item> from </item>
						<item> since </item>
					</one-of>
					<tag> _duration = $common_natural_number._value; </tag>
				</item>
				<item>
					before
				<tag> _duration = -$common_natural_number._value; </tag>
			</item>
			</one-of>
		</item>
		<one-of>
			<item>
				the
			<ruleref uri="#DayOfWeek" />
			<one-of>
					<item>
					<item repeat="0-1"> after </item> next
					<tag> _offset = weekday2Offset($DayOfWeek._value, "AfterNext", -1 );
					</tag>
				</item>
					<item>
					<item repeat="0-1"> before </item> last
					<tag> _offset = weekday2Offset($DayOfWeek._value, "BeforeLast", -1 );
					</tag>
				</item>
				</one-of>
		</item>
			<item>
				<item repeat="0-1">
					<ruleref uri="#WeekModifier" />
					<tag> _weekModifier = $$._value </tag>
				</item>
				<ruleref uri="#DayOfWeek" />
				<tag> _offset = weekday2Offset($DayOfWeek._value, _weekModifier, -1 );
			</tag>
				<tag> 
				_alternativeDateCode = alternativeDateCode(_offset);
				_offset = trueOffset(_offset);
			</tag>
			</item>
			<item>
				<ruleref uri="#TodayTomorrow" />
				<tag> _offset = $$._value </tag>
			</item>
			<item>
			<ruleref uri="#common_natural_number" />
			<ruleref uri="#CommonDateUnits" />
				ago
			<tag> _offset = duration2Offset( -$common_natural_number._value, $CommonDateUnits._value, -1);
			</tag>
		</item>
			<item>
				in
			<ruleref uri="#common_natural_number" />
			<ruleref uri="#CommonDateUnits" />
			<tag> _offset = duration2Offset( $common_natural_number._value, $CommonDateUnits._value, -1);
			</tag>
		</item>
		</one-of>
		<tag>
		_offset= (_duration != 0)? duration2Offset( _duration, _unit, _offset ): _offset;
		$._attributes.name="EvaluatedRelativeDate";
	</tag>
		<tag> <![CDATA[
		var offset = 0;
		var oDate = new Date((new Date()).valueOf() + _offset * 86400000);
		$.Year = []; $.Month = []; $.Day = [];
		$.Year._attributes = []; $.Month._attributes = []; $.Day._attributes = []; 
		$.Year._attributes.name="Derived"; $.Month._attributes.name="Derived"; $.Day._attributes.name="Derived";
		$.Year._value = oDate.getFullYear(); $.Month._value = oDate.getMonth() + 1; $.Day._value = oDate.getDate();
		if ((typeof(_alternativeDateCode) != "undefined") && (_alternativeDateCode != "")) { 
			$.alternativeDateCode= _alternativeDateCode;
			if (_alternativeDateCode == "Yesterday") oDate = new Date(oDate.valueOf() + 7 * 86400000);
			else oDate = new Date(oDate.valueOf() - 7 * 86400000);			
			$.AlternativeYear = []; $.AlternativeMonth = []; $.AlternativeDay = [];
			$.AlternativeYear._attributes = []; $.AlternativeMonth._attributes = []; $.AlternativeDay._attributes = [];
			$.AlternativeYear._attributes.name="Derived"; $.AlternativeMonth._attributes.name="Derived"; $.AlternativeDay._attributes.name="Derived";
			$.AlternativeYear._value = oDate.getFullYear(); $.AlternativeMonth._value = oDate.getMonth() + 1; $.AlternativeDay._value = oDate.getDate();
		}
	]]>
	</tag>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $TodayTomorrow._value : integer -->
	<rule id="TodayTomorrow">
		<example> today </example>
		<example> the day before yesterday </example>
		<example> tomorrow </example>
		<one-of>
			<item> the day before yesterday <tag> $._value = -2 </tag> </item>
			<item> yesterday <tag> $._value = -1 </tag> </item>
			<item> today <tag> $._value = 0 </tag> </item>
			<item> now <tag> $._value = 0 </tag> </item>
			<item> tomorrow <tag> $._value = 1 </tag> </item>
			<item> the day after tomorrow <tag> $._value = 2 </tag> </item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $WeekModifier._value : string ("Last", "ThisPast", "This", "ThisComing", "Next") -->
	<rule id="WeekModifier">
		<example> last </example>
		<example> this coming </example>
		<example> next </example>
		<one-of>
			<item> last <tag> $._value = "Last" </tag> </item>
			<item> this <tag> $._value = "This" </tag> </item>
			<item> this coming <tag> $._value = "ThisComing" </tag> </item>
			<item> this past <tag> $._value = "ThisPast" </tag> </item>
			<item> next <tag> $._value = "Next" </tag> </item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $DayOfWeek._value : integer -->
	<rule id="DayOfWeek" scope="public">
		<example> Sunday </example>
		<example> Saturday </example>
		<one-of>
			<item> Sunday <tag> $._value = 0 </tag> </item>
			<item> Monday <tag> $._value = 1 </tag> </item>
			<item> Tuesday <tag> $._value = 2 </tag> </item>
			<item> Wednesday <tag> $._value = 3 </tag> </item>
			<item> Thursday <tag> $._value = 4 </tag> </item>
			<item> Friday <tag> $._value = 5 </tag> </item>
			<item> Saturday <tag> $._value = 6 </tag> </item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $RelativeMonth.Month._value : integer
$RelativeMonth.Year: $Year (optional)
 -->
	<rule id="RelativeMonth" scope="public">
		<example> July </example>
		<example> next month </example>
		<example> last month </example>
		<one-of>
			<item>
				<ruleref uri="#Month" />
				<tag> $.Month = $$ </tag>
			</item>
			<item>
				<one-of>
					<item> next month <tag> _Month = 1 </tag> </item>
					<item> this month <tag> _Month = 0 </tag> </item>
					<item> last month <tag> _Month = -1 </tag> </item>
				</one-of>
				<tag> <![CDATA[
oDate = new Date();
var month=oDate.getMonth()+1;
var year=oDate.getFullYear();
$.Year=[]; $.Month=[];
$.Year._attributes=[]; $.Month._attributes=[];
$.Year._attributes.name="Derived"; $.Month._attributes.name="Derived";
if (_Month== 1) {
 month++;
	if (month == 13) { month= 1; year++;}
} else if (_Month== -1) {
	month--; 
	if (month == 0) { month= 12; year--;}
}
$.Year._value = year; $.Month._value = month; 
			]]>
			</tag>
			</item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $MonthWithOptionalYear.Month._value : integer
$MonthWithOptionalYear.Year: $Year (optional)
 -->
	<rule id="MonthWithOptionalYear" scope="public">
		<example> July </example>
		<example> next month </example>
		<example> last month </example>
		<example> December nineteen ninety nine </example>
		<one-of>
			<item>
				<ruleref uri="#Month" />
				<tag> $.Month = $$ </tag>
				<item repeat="0-1">
					<ruleref uri="#Year" />
					<tag> $.Year= $$ </tag>
				</item>
			</item>
			<item>
				<one-of>
					<item> this coming month <tag> _Month = 1 </tag> </item>
					<item> the coming month <tag> _Month = 1 </tag> </item>
					<item> next month <tag> _Month = 1 </tag> </item>
					<item> this month <tag> _Month = 0 </tag> </item>
					<item> last month <tag> _Month = -1 </tag> </item>
					<item> the previous month <tag> _Month = -1 </tag> </item>
				</one-of>
				<tag> <![CDATA[
	oDate = new Date(); var month=oDate.getMonth()+1; var year=oDate.getFullYear();
	$.Year=[]; $.Month=[];
	$.Year._attributes=[]; $.Month._attributes=[];
	$.Year._attributes.name="Derived"; $.Month._attributes.name="Derived";
	if (_Month== 1) {
	 month++;
	 if (month == 13) { month= 1; year++;}
	} else if (_Month== -1) {
	 month--; 
	 if (month == 0) { month= 12; year--;}
	}
	$.Year._value = year; $.Month._value = month; 
			]]>
			</tag>
			</item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- DateBlock
 -->
	<!-- $DateBlock.StartDate: $Date (optional)
$DateBlock.EndDate: $Date (optional)
$DateBlock.Deadline: $Date (optional)
$DateBlock.ApproximatedDateBlock: string (optional)
 -->
	<rule id="DateBlock" scope="public">
		<example> since ten days ago </example>
		<example> later than this Christmas </example>
		<example> in the first week of June </example>
		<example> the second half of next month </example>
		<example> between today and next Wednesday </example>
		<example> from New Year this year to Labor Day </example>
		<example> in the first week of June </example>
		<example> the second half of next month </example>
		<example> this coming weekend </example>
		<example> the weekend before last </example>
		<example> within a couple of months </example>
		<example> soon </example>
		<one-of>
			<item>
				<ruleref uri="#ApproximatedDB" />
			</item>
			<item>
				<ruleref uri="#HardDBwDeadline" />
			</item>
			<item>
				<ruleref uri="#HardDBwStartDate" />
			</item>
			<item>
				<ruleref uri="#SoftClosedDB" />
			</item>
			<item>
				<ruleref uri="#HardClosedDB" />
			</item>
			<item>
				<ruleref uri="#EvaluatedRelativeDB" />
			</item>
		</one-of>
		<tag> $ = $$ </tag>
	</rule>
	<!-- $PreviousWords._value : string ("Last") -->
	<rule id="PreviousWords">
		<example> the previous </example>
		<example> past </example>
		<example> the last </example>
		<tag> $._value = "Last" </tag>
		<item>
			<item repeat="0-1"> the </item>
			<one-of>
				<item> previous </item>
				<item> past </item>
				<item> last </item>
			</one-of>
		</item>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $NextWords._value : string ("Next") -->
	<rule id="NextWords">
		<example> the next </example>
		<example> coming </example>
		<example> the following </example>
		<tag> $._value = "Next" </tag>
		<item>
			<item repeat="0-1"> the </item>
			<one-of>
				<item> next </item>
				<item> coming </item>
				<item> following </item>
			</one-of>
		</item>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $InWords._value : string ("In") -->
	<rule id="InWords">
		<example> in </example>
		<example> within </example>
		<tag> $._value = "In" </tag>
		<item>
			<one-of>
				<item> in </item>
				<item> within </item>
			</one-of>
		</item>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $ImprecisePrep._value : string ("About") -->
	<rule id="ImprecisePrep">
		<example> about </example>
		<example> around </example>
		<example> approximately </example>
		<tag> $._value = "About" </tag>
		<item>
			<one-of>
				<item> about </item>
				<item> around </item>
				<item> approximately </item>
			</one-of>
		</item>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $ImpreciseQuantifier._value : string ("Several") -->
	<rule id="ImpreciseQuantifier">
		<example> a few </example>
		<example> couple of </example>
		<example> several </example>
		<tag> $._value = "Several" </tag>
		<item>
			<item repeat="0-1"> a </item>
			<one-of>
				<item> few </item>
				<item> couple <item repeat="0-1"> of </item> </item>
				<item> several </item>
			</one-of>
		</item>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $BeforePrep._value : string ("Before") -->
	<rule id="BeforePrep">
		<example> before </example>
		<example> sooner than </example>
		<example> until </example>
		<tag> $._value = "Before" </tag>
		<item>
			<one-of>
				<item> before </item>
				<item> earlier than </item>
				<item> sooner than </item>
				<item> until </item>
				<item> by </item>
			</one-of>
		</item>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $AfterPrep._value : string ("After") -->
	<rule id="AfterPrep">
		<example> after </example>
		<example> since </example>
		<example> past </example>
		<tag> $._value = "After" </tag>
		<item>
			<one-of>
				<item> after </item>
				<item> past </item>
				<item> later than </item>
				<item> since </item>
				<item> from </item>
			</one-of>
		</item>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $HardDBwDeadline.Deadline: $DateFuture -->
	<rule id="HardDBwDeadline" scope="public">
		<example> in about three weeks </example>
		<example> in the next ten days </example>
		<example> before this Christmas </example>
		<example> by next Monday </example>
		<example> sooner than September first </example>
		<tag> <![CDATA[
	function duration2Offset(number,units,offset) {
		if (number == 0) return (offset);
		else if (units == "Days") return (offset + number);
		else if (units == "Weeks") return (offset + 7 * number);
		var oToday = new Date(); 
		var oRef = new Date( oToday.valueOf() + offset * 86400000);
		if (units == "Years") { oRef.setFullYear( oRef.getFullYear() + number ); return (Math.round((oRef.valueOf() - oToday.valueOf())/86400000)); }
		else if (units == "Months") {
			var year = oRef.getFullYear(); month = oRef.getMonth();
			var multiplier = 1;
			var addyear = 0;
			if (number < 0) {
				multiplier = -1;
				number = -number;
			}
			addyear = Math.floor(number / 12);
			number = number - (addyear * 12);
			year = year + addyear * multiplier;
			month = month + number * multiplier;

			oRef.setFullYear(year); oRef.setMonth(month);
			return (Math.round((oRef.valueOf() - oToday.valueOf())/86400000)); 
		}
	}
	]]>
	</tag>
		<tag> $.Deadline = [] </tag>
		<one-of>
			<item>
				<ruleref uri="#InWords" />
				<item repeat="0-1">
					<ruleref uri="#ImprecisePrep" />
				</item>
				<item repeat="0-1">
					<ruleref uri="#NextWords" />
				</item>
				<item repeat="0-1">
					<ruleref uri="#ImprecisePrep" />
				</item>
				<ruleref uri="#common_natural_number" />
				<ruleref uri="#CommonDateUnits" />
				<tag>
					_offset = duration2Offset($common_natural_number._value, $CommonDateUnits._value, 0);
			</tag>
				<tag> <![CDATA[
		var offset = 0;
		var oDate = new Date((new Date()).valueOf() + _offset * 86400000);
		$.Deadline.Year = []; $.Deadline.Month = []; $.Deadline.Day = [];
		$.Deadline.Year._attributes = []; $.Deadline.Month._attributes = []; $.Deadline.Day._attributes = []; 
		$.Deadline.Year._attributes.name="Derived"; $.Deadline.Month._attributes.name="Derived"; $.Deadline.Day._attributes.name="Derived";
		$.Deadline.Year._value = oDate.getFullYear(); $.Deadline.Month._value = oDate.getMonth() + 1; $.Deadline.Day._value = oDate.getDate();
	]]>
			</tag>
			</item>
			<item>
				<ruleref uri="#BeforePrep" />
				<ruleref uri="#DateFuture" />
				<tag>
					$.Deadline = $$;
			</tag>
			</item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $HardDBwStartDate.StartDate: $DatePast -->
	<rule id="HardDBwStartDate" scope="public">
		<example> in about the last three weeks </example>
		<example> in the past ten days </example>
		<example> later than this Christmas </example>
		<example> after next Thursday </example>
		<example> since September eleventh </example>
		<tag> <![CDATA[
	function duration2Offset(number,units,offset) {
		if (number == 0) return (offset);
		else if (units == "Days") return (offset + number);
		else if (units == "Weeks") return (offset + 7 * number);
		var oToday = new Date(); 
		var oRef = new Date( oToday.valueOf() + offset * 86400000);
		if (units == "Years") { oRef.setFullYear( oRef.getFullYear() + number ); return (Math.round((oRef.valueOf() - oToday.valueOf())/86400000)); }
		else if (units == "Months") {
			var year = oRef.getFullYear(); month = oRef.getMonth();
			var multiplier = 1;
			var addyear = 0;
			if (number < 0) {
				multiplier = -1;
				number = -number;
			}
			addyear = Math.floor(number / 12);
			number = number - (addyear * 12);
			year = year + addyear * multiplier;
			month = month + number * multiplier;

			oRef.setFullYear(year); oRef.setMonth(month);
			return (Math.round((oRef.valueOf() - oToday.valueOf())/86400000)); 
		}
	}
	]]>
	</tag>
		<tag> $.StartDate = [] </tag>
		<one-of>
			<item>
				<ruleref uri="#InWords" />
				<item repeat="0-1">
					<ruleref uri="#ImprecisePrep" />
				</item>
				<ruleref uri="#PreviousWords" />
				<item repeat="0-1">
					<ruleref uri="#ImprecisePrep" />
				</item>
				<ruleref uri="#common_natural_number" />
				<ruleref uri="#CommonDateUnits" />
				<tag>
					_offset = duration2Offset(-$common_natural_number._value, $CommonDateUnits._value, 0);
			</tag>
				<tag> <![CDATA[
		var offset = 0;
		var oDate = new Date((new Date()).valueOf() + _offset * 86400000);
		$.StartDate.Year = []; $.StartDate.Month = []; $.StartDate.Day = [];
		$.StartDate.Year._attributes = []; $.StartDate.Month._attributes = []; $.StartDate.Day._attributes = []; 
		$.StartDate.Year._attributes.name="Derived"; $.StartDate.Month._attributes.name="Derived"; $.StartDate.Day._attributes.name="Derived";
		$.StartDate.Year._value = oDate.getFullYear(); $.StartDate.Month._value = oDate.getMonth() + 1; $.StartDate.Day._value = oDate.getDate();
	]]>
			</tag>
			</item>
			<item>
				<ruleref uri="#AfterPrep" />
				<ruleref uri="#DatePast" />
				<tag>
					$.StartDate = $$;
			</tag>
			</item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $HardClosedDB.StartDate: $Date
$HardClosedDB.EndDate: $Date
 -->
	<rule id="HardClosedDB" scope="public">
		<example> between today and next Wednesday </example>
		<example> from New Year this year to Labor Day </example>
		<example> start from Labor Day to New Year </example>
		<example> between July first to September thirtieth </example>
		<one-of>
			<item> 
			<one-of>
					<item> start </item>
					<item> starts </item>
					<item></item>
				</one-of>
				from
		</item>
			<item> between </item>
		</one-of>
		<ruleref uri="#Date" />
		<tag> $.StartDate = $$; </tag>
		<one-of>
			<item> to </item>
			<item> till </item>
			<item> until </item>
			<item> and </item>
		</one-of>
		<ruleref uri="#Date" />
		<tag> $.EndDate = $$; </tag>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $SoftClosedDB.StartDate: $Date
$SoftClosedDB.EndDate: $Date
 -->
	<rule id="SoftClosedDB" scope="public">
		<example> in the first week of June </example>
		<example> the second half of next month </example>
		<example> the first half of next year </example>
		<example> the first quarter of year two oh oh four </example>
		<example> the last week of next month </example>
		<example> next month </example>
		<example> year two thousand </example>
		<item repeat="0-1">
			<ruleref uri="#InWords" />
		</item>
		<one-of>
			<item> 
				the
				<one-of>
					<item> first half of 
						<tag> portion="1_2"; </tag>
					</item>
					<item> second half of 
						<tag> portion="2_2"; </tag>
					</item>
					<item> first quarter of 
						<tag> portion="1_4"; </tag>
					</item>
					<item> second quarter of 
						<tag> portion="2_4"; </tag>
					</item>
					<item> third quarter of 
						<tag> portion="3_4"; </tag>
					</item>
					<item> <one-of>
							<item> fourth </item>
							<item> last </item>
						</one-of> quarter of 
						<tag> portion="4_4"; </tag>
					</item>
				</one-of>
				<ruleref uri="#Year" />
				<tag> fullYear = $$ </tag>
			</item>
			<item>
				<one-of>
					<item>
						the
						<one-of>
							<item> first half of 
								<tag> portion="1_2"; </tag>
							</item>
							<item> second half of 
								<tag> portion="2_2"; </tag>
							</item>
							<item> first week of 
								<tag> portion="week1"; </tag>
							</item>
							<item> second week of 
								<tag> portion="week2"; </tag>
							</item>
							<item> third week of 
								<tag> portion="week3"; </tag>
							</item>
							<item> fourth week of 
								<tag> portion="week4"; </tag>
							</item>
							<item> last week of 
								<tag> portion="weekLast"; </tag>
							</item>
						</one-of>
					</item>
					<item>
						<tag> portion="Full"; </tag>
					</item>
				</one-of>
				<ruleref uri="#MonthWithOptionalYear" />
				<tag> month = $$.Month; fullYear = $$.Year; </tag>
			</item>
			<item>
				<ruleref uri="#YearEx" />
				<tag>
					portion="Full";
					fullYear=$$;
				</tag>
			</item>
		</one-of>
		<tag> <![CDATA[
	var oDate= new Date();
	oDate.setDate(1);
	$.StartDate= []; $.EndDate = [];
	$.StartDate.Month=[]; $.StartDate.Month._attributes=[]; $.StartDate.Month._attributes.name="Derived";
	$.EndDate.Month=[]; $.EndDate.Month._attributes=[]; $.EndDate.Month._attributes.name="Derived";
	$.StartDate.Day=[]; $.StartDate.Day._attributes=[]; $.StartDate.Day._attributes.name="Derived";
	$.EndDate.Day=[]; $.EndDate.Day._attributes=[]; $.EndDate.Day._attributes.name="Derived";
	if (typeof(fullYear) != "undefined") { oDate.setFullYear(fullYear._value); $.StartDate.Year=fullYear; $.EndDate.Year=fullYear;}
	else {
	 var oYear = []; oYear._attributes=[]; oYear._attributes.name="Assumed"; oYear._value=oDate.getFullYear();
	 $.StartDate.Year=oYear; $.EndDate.Year=oYear;
	}
	if (portion=="Full"){ $.StartDate.Day._value=1;}
	else if (portion == "1_4"){ $.StartDate.Day._value=1; $.StartDate.Month._value=1; $.EndDate.Day._value=31; $.EndDate.Month._value=3; }
	else if (portion == "2_4"){ $.StartDate.Day._value=1; $.StartDate.Month._value=4; $.EndDate.Day._value=30; $.EndDate.Month._value=6; }
	else if (portion == "3_4"){ $.StartDate.Day._value=1; $.StartDate.Month._value=7; $.EndDate.Day._value=30; $.EndDate.Month._value=9; }
	else if (portion == "4_4"){ $.StartDate.Day._value=1; $.StartDate.Month._value=10; $.EndDate.Day._value=31; $.EndDate.Month._value=12; }
	else if (portion == "week1"){ $.StartDate.Day._value=1; $.EndDate.Day._value=7; }
	else if (portion == "week2"){ $.StartDate.Day._value=8; $.EndDate.Day._value=14; }
	else if (portion == "week3"){ $.StartDate.Day._value=15; $.EndDate.Day._value=21; }
	else if (portion == "week4"){ $.StartDate.Day._value=22; $.EndDate.Day._value=28; }
	if (typeof (month) != "undefined") {
		var oMonth=[]; oMonth= month; $.StartDate.Month=oMonth;
	 $.EndDate.Month=oMonth; oDate.setMonth(month._value-1);
		if (portion=="weekLast") { oDate.setMonth(oDate.getMonth()+1); oDate.setDate(1); oDate=new Date(oDate.valueOf()-7*86400000); $.StartDate.Day._value=oDate.getDate(); $.EndDate.Day._value=oDate.getDate()+6; }
		else if (portion == "1_2"){ $.StartDate.Day._value=1; $.StartDate.Month=month; $.EndDate.Day._value=15; $.EndDate.Month=month;}
		else if (portion == "Full"){ $.StartDate.Day._value=1; $.StartDate.Month=month;}
		else if (portion == "2_2"){ $.StartDate.Day._value=16; $.StartDate.Monthe=month;}
		if ((portion=="2_2")||(portion == "Full")) { oDate.setMonth(oDate.getMonth()+1); oDate.setDate(1); oDate=new Date(oDate.valueOf()-1*86400000); $.EndDate.Day._value=oDate.getDate(); }
	} else {
		if (portion == "1_2"){ $.StartDate.Day._value=1; $.StartDate.Month._value=1; $.EndDate.Day._value=30; $.EndDate.Month._value=6;}
		else if (portion == "2_2"){ $.StartDate.Day._value=1; $.StartDate.Month._value=7; $.EndDate.Day._value=31; $.EndDate.Month._value=12;}
		else if (portion == "Full"){$.StartDate.Month._value=1;$.EndDate.Day._value=31; $.EndDate.Month._value=12;}
	}
	]]> </tag>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $EvaluatedRelativeDB.StartDate: $Date
$EvaluatedRelativeDB.EndDate: $Date
 -->
	<rule id="EvaluatedRelativeDB" scope="public">
		<example> this week </example>
		<example> this coming weekend </example>
		<example> the weekend before last </example>
		<example> last week </example>
		<example> next weekend </example>
		<one-of>
			<item>
				<one-of>
					<item> this 
						<tag> WhichWeek="This" </tag>
					</item>
					<item> this coming
						<tag> WhichWeek="ThisComing" </tag>
					</item>
					<item> this past
						<tag> WhichWeek="ThisPast" </tag>
					</item>
					<item> last
						<tag> WhichWeek="Last" </tag>
					</item>
					<item> <item repeat="0-1"> the </item>
 previous
 <tag> WhichWeek="Last" </tag>
					</item>
					<item> next 
						<tag> WhichWeek="Next" </tag>
					</item>
				</one-of>
				<one-of>
					<item> week <tag> WhichDB="Week" </tag>
					</item>
					<item> weekend <tag> WhichDB="Weekend" </tag>
					</item>
				</one-of>
			</item>
			<item>
				the
				<one-of>
					<item> week <tag> WhichDB="Week" </tag>
					</item>
					<item> weekend <tag> WhichDB="Weekend" </tag>
					</item>
				</one-of>
				<one-of>
					<item> <item repeat="0-1"> after </item> next 
						<tag> WhichWeek="AfterNext" </tag>
					</item>
					<item> <item repeat="0-1"> before </item> last 
						<tag> WhichWeek="BeforeLast" </tag>
					</item>
				</one-of>
			</item>
		</one-of>
		<tag> <![CDATA[
	var oDate= new Date();
	$.StartDate= []; $.EndDate = [];
	var offsetBegin;
	var length;
	var todayOfWeek=oDate.getDay();
	$.StartDate.Year=[]; $.StartDate.Year._attributes=[]; $.StartDate.Year._attributes.name="Derived";
	$.EndDate.Year=[]; $.EndDate.Year._attributes=[]; $.EndDate.Year._attributes.name="Derived";
	$.StartDate.Month=[]; $.StartDate.Month._attributes=[]; $.StartDate.Month._attributes.name="Derived";
	$.EndDate.Month=[]; $.EndDate.Month._attributes=[]; $.EndDate.Month._attributes.name="Derived";
	$.StartDate.Day=[]; $.StartDate.Day._attributes=[]; $.StartDate.Day._attributes.name="Derived";
	$.EndDate.Day=[]; $.EndDate.Day._attributes=[]; $.EndDate.Day._attributes.name="Derived";
	if (WhichDB == "Weekend") { 
		if (todayOfWeek < 2) offsetBegin=-1 - todayOfWeek; else offsetBegin= 6 - todayOfWeek;
		if ((WhichWeek == "ThisComing")||(WhichWeek == "Next")||(WhichWeek == "AfterNext")) {
			if (offsetBegin < 1) offsetBegin += 7; }
		if ((WhichWeek == "ThisPast")||(WhichWeek == "Last")||(WhichWeek == "BeforeLast")) { 
			if (offsetBegin > -2) offsetBegin -= 7; }
		if (WhichWeek == "AfterNext") { offsetBegin += 7; }
		if (WhichWeek == "BeforeLast") { offsetBegin -= 7; }
		length = 1;
	} else {
	 length = 6;
		offsetBegin = -todayOfWeek;
		if (WhichWeek == "ThisComing")
		 { offsetBegin=1;
		 if (todayOfWeek<6) {length= 5-todayOfWeek; }
		 }
		else if (WhichWeek == "ThisPast") 
		 { if (todayOfWeek==0) {offsetBegin=-7;}
		 else {offsetBegin=-todayOfWeek; length= todayOfWeek - 1; }
		 }
		else if (WhichWeek == "Next") { offsetBegin += 7; }
		else if (WhichWeek == "AfterNext") { offsetBegin += 14; }
		else if (WhichWeek == "Last") { offsetBegin -= 7; }
		else if (WhichWeek == "BeforeLast") { offsetBegin -= 14; }
	}
	var oDate=new Date(oDate.valueOf()+ offsetBegin * 86400000);
	$.StartDate.Year._value=oDate.getFullYear(); $.StartDate.Month._value=oDate.getMonth()+1;
	$.StartDate.Day._value = oDate.getDate();
	oDate=new Date(oDate.valueOf()+ length * 86400000);
	$.EndDate.Year._value=oDate.getFullYear(); $.EndDate.Month._value=oDate.getMonth()+1; 
	$.EndDate.Day._value = oDate.getDate();
	]]> </tag>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
	<!-- $ApproximatedDB.ApproximatedDateBlock._value: string ("WithinAFewDays", "WithinAFewWeeks", "WithinAFewMonths", "WithinAFewYears", "Soon", "InThePastFewDays", "InThePastFewWeeks", "InThePastFewMonths", "InThePastFewYears", "Recently")
 -->
	<rule id="ApproximatedDB" scope="public">
		<example> in a few days </example>
		<example> in the next several weeks </example>
		<example> within a couple of months </example>
		<example> soon </example>
		<example> in the last several years </example>
		<tag> $.ApproximatedDateBlock = [] </tag>
		<one-of>
			<item>
				<ruleref uri="#InWords" />
				<item repeat="0-1">
					<ruleref uri="#NextWords" />
				</item>
				<item repeat="0-1">
					<ruleref uri="#ImpreciseQuantifier" />
				</item>
				<ruleref uri="#CommonDateUnits" />
				<tag> $.ApproximatedDateBlock._value = "WithinAFew" + $$._value </tag>
			</item>
			<item>
				<ruleref uri="#InWords" />
				<ruleref uri="#PreviousWords" />
				<item repeat="0-1">
					<ruleref uri="#ImpreciseQuantifier" />
				</item>
				<ruleref uri="#CommonDateUnits" />
				<tag> $.ApproximatedDateBlock._value = "InThePastFew" + $$._value </tag>
			</item>
			<item>
				soon
				<tag> $.ApproximatedDateBlock._value = "Soon" </tag>
			</item>
			<item>
				recently
				<tag> $.ApproximatedDateBlock._value = "Recently" </tag>
			</item>
		</one-of>
		<tag> $._attributes.text = $recognized.text; </tag>
	</rule>
</grammar>
