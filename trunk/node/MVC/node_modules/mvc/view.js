var mustache = require("mustache"),
	handlebars = require("handlebars"),
   url = require("url"),
	libpath = require("path"),
   fs = require("fs");

exports.templateExtension = ".mu";
exports.masterTemplate = "masters/index";

var path = "./Views/";

exports.render = function(dir, model, callback)
{	
	var fileName = libpath.resolve(path + dir + exports.templateExtension);
	var master = libpath.resolve(path + exports.masterTemplate + exports.templateExtension);

	libpath.exists(fileName, function (exists)
	{
		if(exists)
		{
			fs.readFile(master, "binary", function (err, masterFile)
			{
				if(err == null)
				{
					fs.readFile(fileName, "binary", function (err, file)
					{
						if(err == null)
						{
							switch(exports.templateExtension)
							{
								case ".mu"://mustache
									var defaultHTML = mustache.to_html(file, model);
									var mashedJSON =
									{
									  Title: libpath.basename(dir),
									  defaultHTML: defaultHTML
									};
									callback(mustache.to_html(masterFile, mashedJSON), false);
								break;
								case ".hbs"://handlebars
									var template = handlebars.compile(file);
									callback(template(model), false);
								break;
							}
						}
						else
						{
							callback(err, true);
						}
					});
				}
				else
				{
					callback(err, true);
				}
			});
		}
		else
		{
			callback("", true);
		}
	});
}
