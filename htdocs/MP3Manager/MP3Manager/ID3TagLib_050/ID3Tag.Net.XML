<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ID3Tag.Net</name>
    </assembly>
    <members>
        <member name="T:ID3Tag.HighLevel.ITagController">
            <summary>
            Represents a highlevel tag controller.
            </summary>
        </member>
        <member name="M:ID3Tag.HighLevel.ITagController.Decode(ID3Tag.LowLevel.Id3TagInfo)">
            <summary>
            Decodes a low level tag into a high level.
            </summary>
            <param name="info">the low level tag.</param>
            <returns>the high level tag representation.</returns>
        </member>
        <member name="M:ID3Tag.HighLevel.ITagController.Encode(ID3Tag.HighLevel.TagContainer)">
            <summary>
            Encodes a high level tag to a low level.
            </summary>
            <param name="container">the high level tag.</param>
            <returns>a low level tag.</returns>
        </member>
        <member name="T:ID3Tag.HighLevel.IId3V1Controller">
            <summary>
            Converts the ID3v1 tags to ID3v2 tags.
            </summary>
        </member>
        <member name="M:ID3Tag.HighLevel.IId3V1Controller.Read(System.IO.Stream)">
            <summary>
            Reads the ID3v1 tag.
            </summary>
            <param name="inputStream">the input stream (i.e. the file.)</param>
            <returns>An ID3v1 container.</returns>
        </member>
        <member name="M:ID3Tag.HighLevel.IId3V1Controller.Read(System.IO.FileInfo)">
            <summary>
            Reads the ID3v1 tag.
            </summary>
            <param name="file">the file.</param>
            <returns>An ID3v1 container.</returns>
        </member>
        <member name="T:ID3Tag.LowLevel.RawFrame">
            <summary>
            Represents a raw ID3 tag frame.
            </summary>
        </member>
        <member name="P:ID3Tag.LowLevel.RawFrame.Payload">
            <summary>
            The payload of the frame.
            </summary>
        </member>
        <member name="P:ID3Tag.LowLevel.RawFrame.ID">
            <summary>
            The frame ID.
            </summary>
        </member>
        <member name="P:ID3Tag.LowLevel.RawFrame.TagAlterPreservation">
            <summary>
            The TagAlterPreservation flag.
            </summary>
        </member>
        <member name="P:ID3Tag.LowLevel.RawFrame.FileAlterPreservation">
            <summary>
            The FileAlterPreservation flag.
            </summary>
        </member>
        <member name="P:ID3Tag.LowLevel.RawFrame.ReadOnly">
            <summary>
            The ReadOnly flag.
            </summary>
        </member>
        <member name="P:ID3Tag.LowLevel.RawFrame.Compression">
            <summary>
            The Compression flag.
            </summary>
        </member>
        <member name="P:ID3Tag.LowLevel.RawFrame.Encryption">
            <summary>
            The Encryption flag.
            </summary>
        </member>
        <member name="P:ID3Tag.LowLevel.RawFrame.GroupingIdentify">
            <summary>
            The GroupingIdentify flag.
            </summary>
        </member>
        <member name="T:ID3Tag.ID3IOException">
            <summary>
            This exception is thrown if an internal I/O error occured.
            </summary>
        </member>
        <member name="T:ID3Tag.ID3TagException">
            <summary>
            Base exception for all ID3Tag specific exceptions.
            </summary>
        </member>
        <member name="M:ID3Tag.ID3TagException.#ctor(System.String)">
            <summary>
            Creates a new instance of ID3TagException.
            </summary>
            <param name="message">the message.</param>
        </member>
        <member name="M:ID3Tag.ID3TagException.#ctor(System.String,System.Exception)">
            <summary>
            Creates a new instance of ID3TagException.
            </summary>
            <param name="message">the message.</param>
            <param name="innerEx">the inner exception.</param>
        </member>
        <member name="M:ID3Tag.ID3IOException.#ctor(System.String)">
            <summary>
            Creates a new instance of ID3IOException.
            </summary>
            <param name="message">the message.</param>
        </member>
        <member name="M:ID3Tag.ID3IOException.#ctor(System.String,System.Exception)">
            <summary>
            Creates a new instance of ID3IOException.
            </summary>
            <param name="message">the message.</param>
            <param name="innerEx">the previous exception.</param>
        </member>
        <member name="T:ID3Tag.HighLevel.TagDescriptor">
            <summary>
            Represents the tag header.
            </summary>
        </member>
        <member name="M:ID3Tag.HighLevel.TagDescriptor.#ctor">
            <summary>
            Creates a new instance of TagDescriptor.
            </summary>
        </member>
        <member name="M:ID3Tag.HighLevel.TagDescriptor.SetVersion(System.Int32,System.Int32)">
            <summary>
            Sets the version of the ID3 tag.
            </summary>
            <param name="major">the major version.</param>
            <param name="revision">the revision.</param>
        </member>
        <member name="M:ID3Tag.HighLevel.TagDescriptor.SetExtendedHeader(System.Int32,System.Boolean,System.Byte[])">
            <summary>
            Sets the extended header values.
            </summary>
            <param name="paddingSize">the padding size.</param>
            <param name="crcDataPresent">the CRC data present flag</param>
            <param name="crcData">the CRC data.</param>
        </member>
        <member name="M:ID3Tag.HighLevel.TagDescriptor.SetHeaderFlags(System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Set the header flags.
            </summary>
            <param name="unsynchronisation">the unsynchronisation flag.</param>
            <param name="extendedHeader">the extended header flag.</param>
            <param name="experimentalIndicator">the experimental indicator flag.</param>
        </member>
        <member name="M:ID3Tag.HighLevel.TagDescriptor.ToString">
            <summary>
            Overwrites ToString
            </summary>
            <returns></returns>
        </member>
        <member name="P:ID3Tag.HighLevel.TagDescriptor.MajorVersion">
            <summary>
            The major version.
            </summary>
        </member>
        <member name="P:ID3Tag.HighLevel.TagDescriptor.Revision">
            <summary>
            The  revision.
            </summary>
        </member>
        <member name="P:ID3Tag.HighLevel.TagDescriptor.Unsynchronisation">
            <summary>
            The unsynchronisation flag.
            </summary>
        </member>
        <member name="P:ID3Tag.HighLevel.TagDescriptor.ExtendedHeader">
            <summary>
            The extended header flag.
            </summary>
        </member>
        <member name="P:ID3Tag.HighLevel.TagDescriptor.ExperimentalIndicator">
            <summary>
            The experimental indicator flag.
            </summary>
        </member>
        <member name="P:ID3Tag.HighLevel.TagDescriptor.PaddingSize">
            <summary>
            The padding size.
            </summary>
        </member>
        <member name="P:ID3Tag.HighLevel.TagDescriptor.CrcDataPresent">
            <summary>
            The CRC data present flag.
            </summary>
        </member>
        <member name="P:ID3Tag.HighLevel.TagDescriptor.Crc">
            <summary>
            The CRC data.
            </summary>
        </member>
        <member name="T:ID3Tag.HighLevel.ID3Frame.PictureFrame">
            <summary>
            This frame contains a picture directly related to the audio file. Image format is the MIME type and 
            subtype for the image. In the event that the MIME media type name is omitted, "image/" will be implied.
            The "image/png" or "image/jpeg" picture format should be used when interoperability is wanted. 
            Description is a short description of the picture, represented as a terminated textstring. 
            The description has a maximum length of 64 characters, but may be empty. There may be several 
            pictures attached to one file, each in their individual "APIC" frame, but only one with the 
            same content descriptor. There may only be one picture with the picture type declared as 
            picture type $01 and $02 respectively. There is the possibility to put only a link to the image 
            file by using the 'MIME type' "-->" and having a complete URL instead of picture data. 
            The use of linked files should however be used sparingly since there is the risk of separation of files.
            </summary>
        </member>
        <member name="T:ID3Tag.HighLevel.Frame">
            <summary>
            This class implements the IFrame interface and provides infrastructure code for the
            concrete Frame implementations.
            </summary>
        </member>
        <member name="T:ID3Tag.HighLevel.IFrame">
            <summary>
            Represents an high level frame.
            </summary>
        </member>
        <member name="M:ID3Tag.HighLevel.IFrame.Convert">
            <summary>
            Convert a high level frame into a raw frame.
            </summary>
            <returns>the raw frame.</returns>
        </member>
        <member name="M:ID3Tag.HighLevel.IFrame.Import(ID3Tag.LowLevel.RawFrame)">
            <summary>
            Imports a raw frame values into a high level frame.
            </summary>
            <param name="rawFrame">the raw frame.</param>
        </member>
        <member name="P:ID3Tag.HighLevel.IFrame.Type">
            <summary>
            The frame type.
            </summary>
        </member>
        <member name="P:ID3Tag.HighLevel.IFrame.Descriptor">
            <summary>
            The descriptor.
            </summary>
        </member>
        <member name="M:ID3Tag.HighLevel.Frame.Convert">
            <summary>
            Convert the values from the high level frame to a raw frame.
            </summary>
            <returns>the raw frame.</returns>
        </member>
        <member name="M:ID3Tag.HighLevel.Frame.Import(ID3Tag.LowLevel.RawFrame)">
            <summary>
            Import the raw content to a high level frame.
            </summary>
            <param name="rawFrame">the raw frame.</param>
        </member>
        <member name="M:ID3Tag.HighLevel.Frame.ImportRawFrameHeader(ID3Tag.LowLevel.RawFrame)">
            <summary>
            Import the header flags from a raw frame.
            </summary>
            <param name="rawFrame"></param>
        </member>
        <member name="P:ID3Tag.HighLevel.Frame.Type">
            <summary>
            The frame type.
            </summary>
        </member>
        <member name="P:ID3Tag.HighLevel.Frame.Descriptor">
            <summary>
            The description of the frame.
            </summary>
        </member>
        <member name="M:ID3Tag.HighLevel.ID3Frame.PictureFrame.#ctor">
            <summary>
            Creates a new instance of PictureFrame.
            </summary>
        </member>
        <member name="M:ID3Tag.HighLevel.ID3Frame.PictureFrame.#ctor(ID3Tag.HighLevel.TextEncodingType,System.String,System.String,ID3Tag.HighLevel.PictureType,System.Byte[])">
            <summary>
            Creates a new instance of PictureFrame.
            </summary>
            <param name="encoding">the text encoding</param>
            <param name="mimeType">the MIME type</param>
            <param name="description">the description</param>
            <param name="picture">the picture type</param>
            <param name="data">the picture bytes</param>
        </member>
        <member name="M:ID3Tag.HighLevel.ID3Frame.PictureFrame.ToString">
            <summary>
            Overwrites ToString.
            </summary>
            <returns></returns>
        </member>
        <member name="P:ID3Tag.HighLevel.ID3Frame.PictureFrame.TextEncoding">
            <summary>
            The Text Encoding.
            </summary>
        </member>
        <member name="P:ID3Tag.HighLevel.ID3Frame.PictureFrame.MimeType">
            <summary>
            The MIME Type.
            </summary>
        </member>
        <member name="P:ID3Tag.HighLevel.ID3Frame.PictureFrame.Description">
            <summary>
            The Description of the frame.
            </summary>
        </member>
        <member name="P:ID3Tag.HighLevel.ID3Frame.PictureFrame.PictureCoding">
            <summary>
            The Picture coding.
            </summary>
        </member>
        <member name="P:ID3Tag.HighLevel.ID3Frame.PictureFrame.PictureData">
            <summary>
            The Picture bytes.
            </summary>
        </member>
        <member name="T:ID3Tag.LowLevel.ExtendedTagHeader">
            <summary>
            Represents the extended tag header of the ID3 tag.
            </summary>
        </member>
        <member name="P:ID3Tag.LowLevel.ExtendedTagHeader.CRCDataPresent">
            <summary>
            True if CRC data is present.
            </summary>
        </member>
        <member name="P:ID3Tag.LowLevel.ExtendedTagHeader.PaddingSize">
            <summary>
            The padding size.
            </summary>
        </member>
        <member name="P:ID3Tag.LowLevel.ExtendedTagHeader.CRC">
            <summary>
            The CRC bytes.
            </summary>
        </member>
        <member name="T:ID3Tag.HighLevel.ID3Frame.UserDefinedURLLinkFrame">
            <summary>
            This frame is intended for URL links concerning the audiofile in a similar way to the 
            other "W"-frames. The frame body consists of a description of the string, represented 
            as a terminated string, followed by the actual URL. The URL is always encoded with ISO-8859-1. 
            There may be more than one "WXXX" frame in each tag, but only one with the same description.
            </summary>
        </member>
        <member name="M:ID3Tag.HighLevel.ID3Frame.UserDefinedURLLinkFrame.#ctor">
            <summary>
            Creates a new UserDefinedURLLinkFrame
            </summary>
        </member>
        <member name="M:ID3Tag.HighLevel.ID3Frame.UserDefinedURLLinkFrame.#ctor(System.String,System.String,ID3Tag.HighLevel.TextEncodingType)">
            <summary>
            Creates a new UserDefinedURLLinkFrame
            </summary>
            <param name="description">the Description</param>
            <param name="url">The URL</param>
            <param name="type">The text encoding type.</param>
        </member>
        <member name="M:ID3Tag.HighLevel.ID3Frame.UserDefinedURLLinkFrame.Convert">
            <summary>
            Convert the values to a raw frame.
            </summary>
            <returns>the raw frame.</returns>
        </member>
        <member name="M:ID3Tag.HighLevel.ID3Frame.UserDefinedURLLinkFrame.Import(ID3Tag.LowLevel.RawFrame)">
            <summary>
            Import the raw frame.
            </summary>
            <param name="rawFrame">the raw frame.</param>
        </member>
        <member name="M:ID3Tag.HighLevel.ID3Frame.UserDefinedURLLinkFrame.ToString">
            <summary>
            Overwrite ToString
            </summary>
            <returns></returns>
        </member>
        <member name="P:ID3Tag.HighLevel.ID3Frame.UserDefinedURLLinkFrame.TextEncoding">
            <summary>
            The text encoding
            </summary>
        </member>
        <member name="P:ID3Tag.HighLevel.ID3Frame.UserDefinedURLLinkFrame.Description">
            <summary>
            The description
            </summary>
        </member>
        <member name="P:ID3Tag.HighLevel.ID3Frame.UserDefinedURLLinkFrame.URL">
            <summary>
            The URL.
            </summary>
        </member>
        <member name="P:ID3Tag.HighLevel.ID3Frame.UserDefinedURLLinkFrame.Type">
            <summary>
            The frame type.
            </summary>
        </member>
        <member name="T:ID3Tag.HighLevel.ID3Frame.PrivateFrame">
            <summary>
            This frame is used to contain information from a software producer that its program uses 
            and does not fit into the other frames. The frame consists of an 'Owner identifier' string 
            and the binary data. The 'Owner identifier' is a null-terminated string with a URL 
            containing an email address, or a link to a location where an email address can be found, 
            that belongs to the organisation responsible for the frame. Questions regarding the 
            frame should be sent to the indicated email address. The tag may contain more than 
            one "PRIV" frame but only with different contents. It is recommended to keep the 
            number of "PRIV" frames as low as possible.
            </summary>
        </member>
        <member name="M:ID3Tag.HighLevel.ID3Frame.PrivateFrame.#ctor">
            <summary>
            Creates a new instance of PrivateFrame.
            </summary>
        </member>
        <member name="M:ID3Tag.HighLevel.ID3Frame.PrivateFrame.#ctor(System.String,System.Byte[])">
            <summary>
            Creates a new instance of PrivateFrame.
            </summary>
            <param name="owner">the owner.</param>
            <param name="data">the data.</param>
        </member>
        <member name="M:ID3Tag.HighLevel.ID3Frame.PrivateFrame.Convert">
            <summary>
            Convert the values to a raw frame.
            </summary>
            <returns>the raw frame.</returns>
        </member>
        <member name="M:ID3Tag.HighLevel.ID3Frame.PrivateFrame.Import(ID3Tag.LowLevel.RawFrame)">
            <summary>
            Import the raw frame.
            </summary>
            <param name="rawFrame">the raw frame.</param>
        </member>
        <member name="M:ID3Tag.HighLevel.ID3Frame.PrivateFrame.ToString">
            <summary>
            Overwrite ToString
            </summary>
            <returns></returns>
        </member>
        <member name="P:ID3Tag.HighLevel.ID3Frame.PrivateFrame.Owner">
            <summary>
            The owner.
            </summary>
        </member>
        <member name="P:ID3Tag.HighLevel.ID3Frame.PrivateFrame.Data">
            <summary>
            The data.
            </summary>
        </member>
        <member name="P:ID3Tag.HighLevel.ID3Frame.PrivateFrame.Type">
            <summary>
            The frame type.
            </summary>
        </member>
        <member name="T:ID3Tag.HighLevel.ID3Frame.UrlLinkFrame">
            <summary>
            This frame is intended for URL links concerning the audiofile in a similar way to 
            the other "W"-frames. The frame body consists of a description of the string, 
            represented as a terminated string, followed by the actual URL. The URL is always 
            encoded with ISO-8859-1. There may be more than one "WXXX" frame in each tag, but 
            only one with the same description.
            </summary>
        </member>
        <member name="M:ID3Tag.HighLevel.ID3Frame.UrlLinkFrame.#ctor">
            <summary>
            Creates a new instance of UrlLinkFrame.
            </summary>
        </member>
        <member name="M:ID3Tag.HighLevel.ID3Frame.UrlLinkFrame.#ctor(System.String,System.String)">
            <summary>
            Creates a new instance of UrlLinkFrame.
            </summary>
            <param name="id">the frame ID.</param>
            <param name="url">the url.</param>
        </member>
        <member name="M:ID3Tag.HighLevel.ID3Frame.UrlLinkFrame.Convert">
            <summary>
            Convert the URLLinkFrame.
            </summary>
            <returns>the RawFrame.</returns>
        </member>
        <member name="M:ID3Tag.HighLevel.ID3Frame.UrlLinkFrame.Import(ID3Tag.LowLevel.RawFrame)">
            <summary>
            Import the raw frame data.
            </summary>
            <param name="rawFrame">the raw frame.</param>
        </member>
        <member name="M:ID3Tag.HighLevel.ID3Frame.UrlLinkFrame.ToString">
            <summary>
            Overwrite ToString.
            </summary>
            <returns></returns>
        </member>
        <member name="P:ID3Tag.HighLevel.ID3Frame.UrlLinkFrame.URL">
            <summary>
            The URL.
            </summary>
        </member>
        <member name="P:ID3Tag.HighLevel.ID3Frame.UrlLinkFrame.Type">
            <summary>
            The frame Type.
            </summary>
        </member>
        <member name="T:ID3Tag.Version">
            <summary>
            Returns the current version of this library.
            </summary>
        </member>
        <member name="M:ID3Tag.Version.GetReadableVersion">
            <summary>
            Gets the current assemly version.
            </summary>
            <returns>a readable string.</returns>
        </member>
        <member name="T:ID3Tag.InvalidTagFormatException">
            <summary>
            This exception is thrown if the tag format is invalid.
            </summary>
        </member>
        <member name="M:ID3Tag.InvalidTagFormatException.#ctor(System.String)">
            <summary>
            Creates a new instance of InvalidTagFormatException.
            </summary>
            <param name="message">the message.</param>
        </member>
        <member name="M:ID3Tag.InvalidTagFormatException.#ctor(System.String,System.Exception)">
            <summary>
            Creates a new instance of InvalidTagFormatException.
            </summary>
            <param name="message">the message.</param>
            <param name="innerEx">the previous exception.</param>
        </member>
        <member name="T:ID3Tag.HighLevel.ID3Frame.CommentFrame">
            <summary>
            This frame is indended for any kind of full text information that does not fit in any other frame. 
            It consists of a frame header followed by encoding, language and content descriptors and is 
            ended with the actual comment as a text string. Newline characters are allowed in the 
            comment text string. There may be more than one comment frame in each tag, but 
            only one with the same language and content descriptor.
            </summary>
        </member>
        <member name="M:ID3Tag.HighLevel.ID3Frame.CommentFrame.#ctor">
            <summary>
            Creates a new instance of CommentFrame.
            </summary>
        </member>
        <member name="M:ID3Tag.HighLevel.ID3Frame.CommentFrame.#ctor(System.String,System.String,System.String,ID3Tag.HighLevel.TextEncodingType)">
            <summary>
            Creates a new instance of CommentFrame.
            </summary>
            <param name="descriptor">the descriptor.</param>
            <param name="language">the language.</param>
            <param name="text">the text.</param>
            <param name="type">the text encoding.</param>
        </member>
        <member name="M:ID3Tag.HighLevel.ID3Frame.CommentFrame.Convert">
            <summary>
            Convert the values to a raw frame.
            </summary>
            <returns>the raw frame.</returns>
        </member>
        <member name="M:ID3Tag.HighLevel.ID3Frame.CommentFrame.Import(ID3Tag.LowLevel.RawFrame)">
            <summary>
            Import the raw frame.
            </summary>
            <param name="rawFrame">the raw frame.</param>
        </member>
        <member name="M:ID3Tag.HighLevel.ID3Frame.CommentFrame.ToString">
            <summary>
            Overwrites ToString
            </summary>
            <returns></returns>
        </member>
        <member name="P:ID3Tag.HighLevel.ID3Frame.CommentFrame.TextEncoding">
            <summary>
            The text encoding.
            </summary>
        </member>
        <member name="P:ID3Tag.HighLevel.ID3Frame.CommentFrame.Language">
            <summary>
            The language.
            </summary>
        </member>
        <member name="P:ID3Tag.HighLevel.ID3Frame.CommentFrame.ContentDescriptor">
            <summary>
            The content descriptor.
            </summary>
        </member>
        <member name="P:ID3Tag.HighLevel.ID3Frame.CommentFrame.Text">
            <summary>
            The text.
            </summary>
        </member>
        <member name="P:ID3Tag.HighLevel.ID3Frame.CommentFrame.Type">
            <summary>
            The frame type.
            </summary>
        </member>
        <member name="M:ID3Tag.HighLevel.Converter.DecodeDescriptionValuePairs(System.Char[],System.String@,System.String@)">
            <summary>
            Splits an array of chars in a description/value pair. 
            </summary>
            <param name="data"></param>
            <param name="description"></param>
            <param name="value"></param>
        </member>
        <member name="T:ID3Tag.HighLevel.Id3V1Tag">
            <summary>
            Represents the ID3V1 Tag block.
            </summary>
        </member>
        <member name="P:ID3Tag.HighLevel.Id3V1Tag.Title">
            <summary>
            The Title.
            </summary>
        </member>
        <member name="P:ID3Tag.HighLevel.Id3V1Tag.Artist">
            <summary>
            The Artist.
            </summary>
        </member>
        <member name="P:ID3Tag.HighLevel.Id3V1Tag.Album">
            <summary>
            The Album.
            </summary>
        </member>
        <member name="P:ID3Tag.HighLevel.Id3V1Tag.Year">
            <summary>
            The Year.
            </summary>
        </member>
        <member name="P:ID3Tag.HighLevel.Id3V1Tag.Comment">
            <summary>
            The Comment.
            </summary>
        </member>
        <member name="P:ID3Tag.HighLevel.Id3V1Tag.Genre">
            <summary>
            The Genre.
            </summary>
        </member>
        <member name="P:ID3Tag.HighLevel.Id3V1Tag.TrackNr">
            <summary>
            The Track Nr.
            </summary>
        </member>
        <member name="P:ID3Tag.HighLevel.Id3V1Tag.IsID3V1_1Compliant">
            <summary>
            True if ID3V1.1 is supported otherwise false
            </summary>
        </member>
        <member name="T:ID3Tag.HighLevel.ID3Frame.UnknownFrame">
            <summary>
            Represents a frame that cannot be identified by the reader.
            </summary>
        </member>
        <member name="M:ID3Tag.HighLevel.ID3Frame.UnknownFrame.#ctor">
            <summary>
            Creates a new Unknown frame.
            </summary>
        </member>
        <member name="M:ID3Tag.HighLevel.ID3Frame.UnknownFrame.Convert">
            <summary>
            Convert the Unknownframe.
            </summary>
            <returns>a RawFrame.</returns>
        </member>
        <member name="M:ID3Tag.HighLevel.ID3Frame.UnknownFrame.Import(ID3Tag.LowLevel.RawFrame)">
            <summary>
            Import the the raw frame data.
            </summary>
            <param name="rawFrame">the raw frame.</param>
        </member>
        <member name="M:ID3Tag.HighLevel.ID3Frame.UnknownFrame.ToString">
            <summary>
            Overwrite ToString.
            </summary>
            <returns></returns>
        </member>
        <member name="P:ID3Tag.HighLevel.ID3Frame.UnknownFrame.Content">
            <summary>
            The payload.
            </summary>
        </member>
        <member name="P:ID3Tag.HighLevel.ID3Frame.UnknownFrame.Type">
            <summary>
            The frame type.
            </summary>
        </member>
        <member name="T:ID3Tag.HighLevel.PictureType">
            <summary>
            Defines the Picture type.
            </summary>
        </member>
        <member name="F:ID3Tag.HighLevel.PictureType.Other">
            <summary>
            Other.
            </summary>
        </member>
        <member name="F:ID3Tag.HighLevel.PictureType.FileIcon32X32">
            <summary>
            File Icon 32x32
            </summary>
        </member>
        <member name="F:ID3Tag.HighLevel.PictureType.FileIconOther">
            <summary>
            File Icon Other
            </summary>
        </member>
        <member name="F:ID3Tag.HighLevel.PictureType.CoverFront">
            <summary>
            Cover front
            </summary>
        </member>
        <member name="F:ID3Tag.HighLevel.PictureType.CoverBack">
            <summary>
            Cover back
            </summary>
        </member>
        <member name="F:ID3Tag.HighLevel.PictureType.LeafletPage">
            <summary>
            Leaflet Page
            </summary>
        </member>
        <member name="F:ID3Tag.HighLevel.PictureType.Media">
            <summary>
            Media
            </summary>
        </member>
        <member name="F:ID3Tag.HighLevel.PictureType.LeadArtist">
            <summary>
            Lead Artist
            </summary>
        </member>
        <member name="F:ID3Tag.HighLevel.PictureType.Artist">
            <summary>
            Artist
            </summary>
        </member>
        <member name="F:ID3Tag.HighLevel.PictureType.Conductor">
            <summary>
            Conductor
            </summary>
        </member>
        <member name="F:ID3Tag.HighLevel.PictureType.Band">
            <summary>
            Band
            </summary>
        </member>
        <member name="F:ID3Tag.HighLevel.PictureType.Composer">
            <summary>
            Composer
            </summary>
        </member>
        <member name="F:ID3Tag.HighLevel.PictureType.TextWriter">
            <summary>
            Text Writer
            </summary>
        </member>
        <member name="F:ID3Tag.HighLevel.PictureType.RecordingLocation">
            <summary>
            Recording Location
            </summary>
        </member>
        <member name="F:ID3Tag.HighLevel.PictureType.DuringRecording">
            <summary>
            During Recording
            </summary>
        </member>
        <member name="F:ID3Tag.HighLevel.PictureType.DuringPerformance">
            <summary>
            During Performance
            </summary>
        </member>
        <member name="F:ID3Tag.HighLevel.PictureType.MovieScreenCapture">
            <summary>
            Movie Screen Capture
            </summary>
        </member>
        <member name="F:ID3Tag.HighLevel.PictureType.ABrightColouredFish">
            <summary>
            A bright coloured fish
            </summary>
        </member>
        <member name="F:ID3Tag.HighLevel.PictureType.Illustration">
            <summary>
            Illustration
            </summary>
        </member>
        <member name="F:ID3Tag.HighLevel.PictureType.BandLogotype">
            <summary>
            Band logotype
            </summary>
        </member>
        <member name="F:ID3Tag.HighLevel.PictureType.PublisherLogotype">
            <summary>
            Publisher logotype
            </summary>
        </member>
        <member name="T:ID3Tag.HighLevel.FrameUtils">
            <summary>
            Provides some static helper methods.
            </summary>
        </member>
        <member name="M:ID3Tag.HighLevel.FrameUtils.Convert(ID3Tag.HighLevel.IFrame)">
            <summary>
            Convert a abstract frame to an UnknownFrame.
            </summary>
            <param name="frame">the abstract frame.</param>
            <returns>the concrecte type.</returns>
        </member>
        <member name="M:ID3Tag.HighLevel.FrameUtils.ConvertToText(ID3Tag.HighLevel.IFrame)">
            <summary>
            Convert a abstract frame to an TextFrame.
            </summary>
            <param name="frame">the abstract frame.</param>
            <returns>the concrecte type.</returns>
        </member>
        <member name="M:ID3Tag.HighLevel.FrameUtils.ConvertToUserDefinedText(ID3Tag.HighLevel.IFrame)">
            <summary>
            Convert a abstract frame to an UserDefinedTextFrame.
            </summary>
            <param name="frame">the abstract frame.</param>
            <returns>the concrecte type.</returns>
        </member>
        <member name="M:ID3Tag.HighLevel.FrameUtils.ConvertToPrivateFrame(ID3Tag.HighLevel.IFrame)">
            <summary>
            Convert a abstract frame to an PrivateFrame.
            </summary>
            <param name="frame">the abstract frame.</param>
            <returns>the concrecte type.</returns>
        </member>
        <member name="M:ID3Tag.HighLevel.FrameUtils.ConvertToMusicCDIdentifierFrame(ID3Tag.HighLevel.IFrame)">
            <summary>
            Convert a abstract frame to an MusicCdIdentifierFrame.
            </summary>
            <param name="frame">the abstract frame.</param>
            <returns>the concrecte type.</returns>
        </member>
        <member name="M:ID3Tag.HighLevel.FrameUtils.ConvertToCommentFrame(ID3Tag.HighLevel.IFrame)">
            <summary>
            Convert a abstract frame to an CommentFrame.
            </summary>
            <param name="frame">the abstract frame.</param>
            <returns>the concrecte type.</returns>
        </member>
        <member name="M:ID3Tag.HighLevel.FrameUtils.ConvertToURLLinkFrame(ID3Tag.HighLevel.IFrame)">
            <summary>
            Convert a abstract frame to an UrlLinkFrame.
            </summary>
            <param name="frame">the abstract frame.</param>
            <returns>the concrecte type.</returns>
        </member>
        <member name="M:ID3Tag.HighLevel.FrameUtils.ConvertToUserDefinedURLLinkFrame(ID3Tag.HighLevel.IFrame)">
            <summary>
            Convert a abstract frame to an UserDefinedURLLinkFrame.
            </summary>
            <param name="frame">the abstract frame.</param>
            <returns>the concrecte type.</returns>
        </member>
        <member name="M:ID3Tag.HighLevel.FrameUtils.ConvertToAudioEncryptionFrame(ID3Tag.HighLevel.IFrame)">
            <summary>
            Convert a abstract frame to an AudioEncryptionFrame.
            </summary>
            <param name="frame">the abstract frame.</param>
            <returns>the concrecte type.</returns>
        </member>
        <member name="M:ID3Tag.HighLevel.FrameUtils.ConvertToPictureFrame(ID3Tag.HighLevel.IFrame)">
            <summary>
            Convert a abstract frame to a PictureFrame.
            </summary>
            <param name="frame">the abstract frame.</param>
            <returns>the concrete type.</returns>
        </member>
        <member name="T:ID3Tag.HighLevel.FrameType">
            <summary>
            Defines the ID3 Frame types.
            </summary>
        </member>
        <member name="F:ID3Tag.HighLevel.FrameType.Unknown">
            <summary>
            Unknown frame.
            </summary>
        </member>
        <member name="F:ID3Tag.HighLevel.FrameType.Text">
            <summary>
            Text frame.
            </summary>
        </member>
        <member name="F:ID3Tag.HighLevel.FrameType.UserDefinedText">
            <summary>
            Userdefined frame.
            </summary>
        </member>
        <member name="F:ID3Tag.HighLevel.FrameType.Private">
            <summary>
            Private frame.
            </summary>
        </member>
        <member name="F:ID3Tag.HighLevel.FrameType.MusicCDIdentifier">
            <summary>
            Music CD Identifier frame.
            </summary>
        </member>
        <member name="F:ID3Tag.HighLevel.FrameType.Comment">
            <summary>
            Comment frame.
            </summary>
        </member>
        <member name="F:ID3Tag.HighLevel.FrameType.URLLink">
            <summary>
            URL link frame.
            </summary>
        </member>
        <member name="F:ID3Tag.HighLevel.FrameType.UserDefindedURLLink">
            <summary>
            Userdefinded URL link frame.
            </summary>
        </member>
        <member name="F:ID3Tag.HighLevel.FrameType.AudoEncryption">
            <summary>
            AudioEncryption Frame.
            </summary>
        </member>
        <member name="F:ID3Tag.HighLevel.FrameType.Picture">
            <summary>
            Picture Frame
            </summary>
        </member>
        <member name="T:ID3Tag.LowLevel.IIoController">
            <summary>
            Represents a low level tag controller.
            </summary>
        </member>
        <member name="M:ID3Tag.LowLevel.IIoController.Read(System.IO.FileInfo)">
            <summary>
            Read the tag from file.
            </summary>
            <param name="file">the file.</param>
            <returns>a low level tag.</returns>
        </member>
        <member name="M:ID3Tag.LowLevel.IIoController.Read(System.IO.Stream)">
            <summary>
            Read the tag from an input stream.
            </summary>
            <param name="inputStream">the input stream.</param>
            <returns>a low level tag.</returns>
        </member>
        <member name="M:ID3Tag.LowLevel.IIoController.Write(ID3Tag.HighLevel.TagContainer,System.IO.Stream,System.IO.Stream)">
            <summary>
            Writes a high level tag container to a output stream.
            </summary>
            <param name="tagContainer">the tag.</param>
            <param name="input">the input stream (i.e. audio file)</param>
            <param name="output">the output stream (temp. file)</param>
        </member>
        <member name="M:ID3Tag.LowLevel.IIoController.DetermineTagStatus(System.IO.Stream)">
            <summary>
            Determine the ID3Tag status.
            </summary>
            <param name="audioStream">the audio stream.</param>
            <returns>the ID3Tag state</returns>
        </member>
        <member name="M:ID3Tag.LowLevel.IIoController.DetermineTagStatus(System.IO.FileInfo)">
            <summary>
            Determine the ID3Tag status.
            </summary>
            <param name="file">the file.</param>
            <returns>the ID3Tag state</returns>
        </member>
        <member name="T:ID3Tag.HighLevel.ID3Frame.TextFrame">
            <summary>
            The text information frames are the most important frames, containing information like artist, 
            album and more. There may only be one text information frame of its kind in an tag. 
            If the textstring is followed by a termination ($00 (00)) all the following information 
            should be ignored and not be displayed. All text frame identifiers begin with "T". 
            Only text frame identifiers begin with "T", with the exception of the "TXXX" frame. 
            </summary>
        </member>
        <member name="M:ID3Tag.HighLevel.ID3Frame.TextFrame.#ctor">
            <summary>
            Creates a new TextFrame.
            </summary>
        </member>
        <member name="M:ID3Tag.HighLevel.ID3Frame.TextFrame.#ctor(System.String,System.String,ID3Tag.HighLevel.TextEncodingType)">
            <summary>
            Creates a new TextFrame.
            </summary>
            <param name="id">the frame id.</param>
            <param name="content">the content.</param>
            <param name="type">the text encoding.</param>
        </member>
        <member name="M:ID3Tag.HighLevel.ID3Frame.TextFrame.Convert">
            <summary>
            Convert the values to a raw frame.
            </summary>
            <returns>the raw frame.</returns>
        </member>
        <member name="M:ID3Tag.HighLevel.ID3Frame.TextFrame.Import(ID3Tag.LowLevel.RawFrame)">
            <summary>
            Import the raw frame.
            </summary>
            <param name="rawFrame">the raw frame.</param>
        </member>
        <member name="M:ID3Tag.HighLevel.ID3Frame.TextFrame.ToString">
            <summary>
            Overwrites ToString.
            </summary>
            <returns></returns>
        </member>
        <member name="P:ID3Tag.HighLevel.ID3Frame.TextFrame.TextEncoding">
            <summary>
            The text encoding.
            </summary>
        </member>
        <member name="P:ID3Tag.HighLevel.ID3Frame.TextFrame.Content">
            <summary>
            The content.
            </summary>
        </member>
        <member name="P:ID3Tag.HighLevel.ID3Frame.TextFrame.Type">
            <summary>
            The frame type.
            </summary>
        </member>
        <member name="T:ID3Tag.HighLevel.TextEncodingType">
            <summary>
            Defines the Text Encoding.
            </summary>
        </member>
        <member name="F:ID3Tag.HighLevel.TextEncodingType.ISO_8859_1">
            <summary>
            ISO-8859-1 coding.
            </summary>
        </member>
        <member name="F:ID3Tag.HighLevel.TextEncodingType.UTF16">
            <summary>
            Unicode UTF16 coding.
            </summary>
        </member>
        <member name="F:ID3Tag.HighLevel.TextEncodingType.UTF16_BE">
            <summary>
            Unicode UTF16 Big Endian coding.
            </summary>
        </member>
        <member name="F:ID3Tag.HighLevel.TextEncodingType.UTF8">
            <summary>
            Unicode UTF8 coding.
            </summary>
        </member>
        <member name="T:ID3Tag.HighLevel.ID3Frame.AudioEncryptionFrame">
            <summary>
            This frame indicates if the actual audio stream is encrypted, and by whom. Since standardisation 
            of such encrypion scheme is beyond this document, all "AENC" frames begin with a terminated string 
            with a URL containing an email address, or a link to a location where an email address can be found, 
            that belongs to the organisation responsible for this specific encrypted audio file. 
            Questions regarding the encrypted audio should be sent to the email address specified. 
            If a $00 is found directly after the 'Frame size' and the audiofile indeed is encrypted, 
            the whole file may be considered useless.
            After the 'Owner identifier', a pointer to an unencrypted part of the audio can be specified. 
            The 'Preview start' and 'Preview length' is described in frames. If no part is unencrypted, 
            these fields should be left zeroed. After the 'preview length' field follows optionally a 
            datablock required for decryption of the audio. There may be more than one "AENC" frames in a tag, 
            but only one with the same 'Owner identifier'. 
            </summary>
        </member>
        <member name="M:ID3Tag.HighLevel.ID3Frame.AudioEncryptionFrame.#ctor">
            <summary>
            Creates a new instance of AudioEncryptionFrame.
            </summary>
        </member>
        <member name="M:ID3Tag.HighLevel.ID3Frame.AudioEncryptionFrame.#ctor(System.String,System.UInt16,System.UInt16,System.Byte[])">
            <summary>
            Creates a new instance of AudioEncryptionFrame.
            </summary>
            <param name="owner">the owner.</param>
            <param name="previewStart">the preview start.</param>
            <param name="previewLength">the preview length.</param>
            <param name="encryption">the encryption bytes</param>
        </member>
        <member name="M:ID3Tag.HighLevel.ID3Frame.AudioEncryptionFrame.Convert">
            <summary>
            Convert the values to a raw frame.
            </summary>
            <returns>the raw frame.</returns>
        </member>
        <member name="M:ID3Tag.HighLevel.ID3Frame.AudioEncryptionFrame.Import(ID3Tag.LowLevel.RawFrame)">
            <summary>
            Import the raw frame.
            </summary>
            <param name="rawFrame">the raw frame.</param>
        </member>
        <member name="M:ID3Tag.HighLevel.ID3Frame.AudioEncryptionFrame.ToString">
            <summary>
            Overwrite ToString
            </summary>
            <returns></returns>
        </member>
        <member name="P:ID3Tag.HighLevel.ID3Frame.AudioEncryptionFrame.Owner">
            <summary>
            The owner.
            </summary>
        </member>
        <member name="P:ID3Tag.HighLevel.ID3Frame.AudioEncryptionFrame.PreviewStart">
            <summary>
            The preview start value.
            </summary>
        </member>
        <member name="P:ID3Tag.HighLevel.ID3Frame.AudioEncryptionFrame.PreviewLength">
            <summary>
            The preview length value.
            </summary>
        </member>
        <member name="P:ID3Tag.HighLevel.ID3Frame.AudioEncryptionFrame.Encryption">
            <summary>
            The encryption data.
            </summary>
        </member>
        <member name="P:ID3Tag.HighLevel.ID3Frame.AudioEncryptionFrame.Type">
            <summary>
            The frame type.
            </summary>
        </member>
        <member name="T:ID3Tag.HighLevel.TagContainer">
            <summary>
            Represents a high level ID3 tag.
            </summary>
        </member>
        <member name="M:ID3Tag.HighLevel.TagContainer.#ctor">
            <summary>
            Creates a new TagContainer.
            </summary>
        </member>
        <member name="M:ID3Tag.HighLevel.TagContainer.Add(ID3Tag.HighLevel.IFrame)">
            <summary>
            Add a new frame.
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:ID3Tag.HighLevel.TagContainer.Clear">
            <summary>
            Clear the collection.
            </summary>
        </member>
        <member name="M:ID3Tag.HighLevel.TagContainer.Contains(ID3Tag.HighLevel.IFrame)">
            <summary>
            Search for a specific frame.
            </summary>
            <param name="item">the frame.</param>
            <returns>True if the items exists otherwise false.</returns>
        </member>
        <member name="M:ID3Tag.HighLevel.TagContainer.CopyTo(ID3Tag.HighLevel.IFrame[],System.Int32)">
            <summary>
            Add a number of frames to the list.
            </summary>
            <param name="array">the frames.</param>
            <param name="arrayIndex">the array index.</param>
        </member>
        <member name="M:ID3Tag.HighLevel.TagContainer.Remove(ID3Tag.HighLevel.IFrame)">
            <summary>
            Remove an item.
            </summary>
            <param name="item">the item.</param>
            <returns>true if the item can be removed otherwise false.</returns>
        </member>
        <member name="M:ID3Tag.HighLevel.TagContainer.GetEnumerator">
            <summary>
            Gets the enumerator of the frames.
            </summary>
            <returns>the enumerator.</returns>
        </member>
        <member name="M:ID3Tag.HighLevel.TagContainer.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Gets the enumerator of the frames.
            </summary>
            <returns>the enumerator.</returns>
        </member>
        <member name="M:ID3Tag.HighLevel.TagContainer.SearchFrame(System.String)">
            <summary>
            Search for a specific frame.
            </summary>
            <param name="id">the ID of the frame.</param>
            <returns>the frame instance if available otherwise null.</returns>
        </member>
        <member name="M:ID3Tag.HighLevel.TagContainer.ToString">
            <summary>
            Overwrites the ToString.
            </summary>
            <returns></returns>
        </member>
        <member name="P:ID3Tag.HighLevel.TagContainer.Tag">
            <summary>
            The tag descriptor.
            </summary>
        </member>
        <member name="P:ID3Tag.HighLevel.TagContainer.Item(System.Int32)">
            <summary>
            Get a specific IFrame from the container.
            </summary>
            <param name="index">the index.</param>
            <returns>the IFrame instance.</returns>
        </member>
        <member name="P:ID3Tag.HighLevel.TagContainer.Count">
            <summary>
            The number of frames.
            </summary>
        </member>
        <member name="P:ID3Tag.HighLevel.TagContainer.IsReadOnly">
            <summary>
            Determine whether this collection is read only.
            </summary>
        </member>
        <member name="T:ID3Tag.HighLevel.FrameDescriptor">
            <summary>
            Represents the ID3 Frame header.
            </summary>
        </member>
        <member name="M:ID3Tag.HighLevel.FrameDescriptor.#ctor">
            <summary>
            Creates a new instance of FrameDescriptor
            </summary>
        </member>
        <member name="M:ID3Tag.HighLevel.FrameDescriptor.GetFlagBytes">
            <summary>
            Gets the flag coding of the frame.
            </summary>
            <returns>the byte array with the coding.</returns>
        </member>
        <member name="M:ID3Tag.HighLevel.FrameDescriptor.ToString">
            <summary>
            Overwrites ToString.
            </summary>
            <returns></returns>
        </member>
        <member name="P:ID3Tag.HighLevel.FrameDescriptor.ID">
            <summary>
            The frame ID.
            </summary>
        </member>
        <member name="P:ID3Tag.HighLevel.FrameDescriptor.TagAlterPreservation">
            <summary>
            The TagAlterPreservation flag.
            </summary>
        </member>
        <member name="P:ID3Tag.HighLevel.FrameDescriptor.FileAlterPreservation">
            <summary>
            The FileAlterPreservation flag.
            </summary>
        </member>
        <member name="P:ID3Tag.HighLevel.FrameDescriptor.ReadOnly">
            <summary>
            The ReadOnly flag.
            </summary>
        </member>
        <member name="P:ID3Tag.HighLevel.FrameDescriptor.Compression">
            <summary>
            The Compression flag.
            </summary>
        </member>
        <member name="P:ID3Tag.HighLevel.FrameDescriptor.Encryption">
            <summary>
            The Encryption flag.
            </summary>
        </member>
        <member name="P:ID3Tag.HighLevel.FrameDescriptor.GroupingIdentify">
            <summary>
            The GroupingIdentify flag.
            </summary>
        </member>
        <member name="T:ID3Tag.FileState">
            <summary>
            Represents the ID3Tag state of a file.
            </summary>
        </member>
        <member name="M:ID3Tag.FileState.ToString">
            <summary>
            Overwrites the ToString()
            </summary>
            <returns></returns>
        </member>
        <member name="P:ID3Tag.FileState.Id3V1TagFound">
            <summary>
            True if a ID3V1 tag is found otherwise false.
            </summary>
        </member>
        <member name="P:ID3Tag.FileState.Id3V2TagFound">
            <summary>
            True if a ID3V2 tag is found otherwise false.
            </summary>
        </member>
        <member name="T:ID3Tag.ID3HeaderNotFoundException">
            <summary>
            This exception is thrown if no valid ID3 header is found.
            </summary>
        </member>
        <member name="M:ID3Tag.ID3HeaderNotFoundException.#ctor">
            <summary>
            Creates a new instance of ID3HeaderNotFoundException.
            </summary>
        </member>
        <member name="M:ID3Tag.ID3HeaderNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Creates a new instance of ID3HeaderNotFoundException.
            </summary>
            <param name="message">the message.</param>
            <param name="ex">the previous exception.</param>
        </member>
        <member name="M:ID3Tag.ID3HeaderNotFoundException.#ctor(System.String)">
            <summary>
            Creates a new instance of ID3HeaderNotFoundException.
            </summary>
            <param name="message">the message.</param>
        </member>
        <member name="M:ID3Tag.ID3HeaderNotFoundException.#ctor(System.Exception)">
            <summary>
            Creates a new instance of ID3HeaderNotFoundException.
            </summary>
            <param name="ex">the previous exception.</param>
        </member>
        <member name="T:ID3Tag.LowLevel.Id3TagInfo">
            <summary>
            Represents a low level ID3Tag.
            </summary>
        </member>
        <member name="P:ID3Tag.LowLevel.Id3TagInfo.MajorVersion">
            <summary>
            The major version.
            </summary>
        </member>
        <member name="P:ID3Tag.LowLevel.Id3TagInfo.Revision">
            <summary>
            The revision.
            </summary>
        </member>
        <member name="P:ID3Tag.LowLevel.Id3TagInfo.UnsynchronisationFlag">
            <summary>
            The unsynchronisation flag.
            </summary>
        </member>
        <member name="P:ID3Tag.LowLevel.Id3TagInfo.ExtendedHeaderAvailable">
            <summary>
            True if the extended header is available, otherwise false.
            </summary>
        </member>
        <member name="P:ID3Tag.LowLevel.Id3TagInfo.Experimental">
            <summary>
            The experminental flag.
            </summary>
        </member>
        <member name="P:ID3Tag.LowLevel.Id3TagInfo.ExtendHeader">
            <summary>
            The extended header.
            </summary>
        </member>
        <member name="P:ID3Tag.LowLevel.Id3TagInfo.Frames">
            <summary>
            The frames of the tag in raw format.
            </summary>
        </member>
        <member name="T:ID3Tag.Factory.Id3TagFactory">
            <summary>
            Factory for the ID3 tag controller.
            </summary>
        </member>
        <member name="M:ID3Tag.Factory.Id3TagFactory.CreateIoController">
            <summary>
            Creates a new I/O controller.
            </summary>
            <returns>a new I/O controller.</returns>
        </member>
        <member name="M:ID3Tag.Factory.Id3TagFactory.CreateTagController">
            <summary>
            Creates a new tag controller.
            </summary>
            <returns>a new ITagController.</returns>
        </member>
        <member name="M:ID3Tag.Factory.Id3TagFactory.CreateId3V1Controller">
            <summary>
            Creates a new ID3v1 converter.
            </summary>
            <returns>a new converter.</returns>
        </member>
        <member name="T:ID3Tag.HighLevel.ID3Frame.MusicCdIdentifierFrame">
            <summary>
            This frame is intended for music that comes from a CD, so that the CD can be identified 
            in databases such as the CDDB. The frame consists of a binary dump of the Table Of Contents, 
            TOC, from the CD, which is a header of 4 bytes and then 8 bytes/track on the CD plus 8 bytes 
            for the 'lead out' making a maximum of 804 bytes. The offset to the beginning of every 
            track on the CD should be described with a four bytes absolute CD-frame address per 
            track, and not with absolute time. This frame requires a present and valid "TRCK" frame, 
            even if the CD's only got one track. There may only be one "MCDI" frame in each tag.
            </summary>
        </member>
        <member name="M:ID3Tag.HighLevel.ID3Frame.MusicCdIdentifierFrame.#ctor">
            <summary>
            Creates a new instance of MusicCdIdentifierFrame
            </summary>
        </member>
        <member name="M:ID3Tag.HighLevel.ID3Frame.MusicCdIdentifierFrame.#ctor(System.Byte[])">
            <summary>
            Creates a new instance of MusicCdIdentifierFrame
            </summary>
            <param name="toc">the toc.</param>
        </member>
        <member name="M:ID3Tag.HighLevel.ID3Frame.MusicCdIdentifierFrame.Convert">
            <summary>
            Convert the frame.
            </summary>
            <returns>the raw frame.</returns>
        </member>
        <member name="M:ID3Tag.HighLevel.ID3Frame.MusicCdIdentifierFrame.Import(ID3Tag.LowLevel.RawFrame)">
            <summary>
            Import the raw frame.
            </summary>
            <param name="rawFrame">the raw frame.</param>
        </member>
        <member name="M:ID3Tag.HighLevel.ID3Frame.MusicCdIdentifierFrame.ToString">
            <summary>
            Overwrites ToString
            </summary>
            <returns></returns>
        </member>
        <member name="P:ID3Tag.HighLevel.ID3Frame.MusicCdIdentifierFrame.TOC">
            <summary>
            The TOC of CD.
            </summary>
        </member>
        <member name="P:ID3Tag.HighLevel.ID3Frame.MusicCdIdentifierFrame.Type">
            <summary>
            The Frame type.
            </summary>
        </member>
        <member name="T:ID3Tag.HighLevel.ID3Frame.UserDefinedTextFrame">
            <summary>
            This frame is intended for one-string text information concerning the 
            audiofile in a similar way to the other "T"-frames. The frame body consists 
            of a description of the string, represented as a terminated string, 
            followed by the actual string. There may be more than one "TXXX" frame in each tag, 
            but only one with the same description.
            </summary>
        </member>
        <member name="M:ID3Tag.HighLevel.ID3Frame.UserDefinedTextFrame.#ctor">
            <summary>
            Creates a new UserDefindedTextFrame.
            </summary>
        </member>
        <member name="M:ID3Tag.HighLevel.ID3Frame.UserDefinedTextFrame.#ctor(System.String,System.String,ID3Tag.HighLevel.TextEncodingType)">
            <summary>
            Creates a new UserDefindedTextFrame.
            </summary>
            <param name="description">the description.</param>
            <param name="value">the value.</param>
            <param name="type">the text encoding.</param>
        </member>
        <member name="M:ID3Tag.HighLevel.ID3Frame.UserDefinedTextFrame.Convert">
            <summary>
            Convert the values to a raw frame.
            </summary>
            <returns>a raw frame.</returns>
        </member>
        <member name="M:ID3Tag.HighLevel.ID3Frame.UserDefinedTextFrame.Import(ID3Tag.LowLevel.RawFrame)">
            <summary>
            Import the raw frame.
            </summary>
            <param name="rawFrame">the raw frame.</param>
        </member>
        <member name="M:ID3Tag.HighLevel.ID3Frame.UserDefinedTextFrame.ToString">
            <summary>
            Overwrite ToString
            </summary>
            <returns></returns>
        </member>
        <member name="P:ID3Tag.HighLevel.ID3Frame.UserDefinedTextFrame.TextEncoding">
            <summary>
            The text encoding.
            </summary>
        </member>
        <member name="P:ID3Tag.HighLevel.ID3Frame.UserDefinedTextFrame.Description">
            <summary>
            The description.
            </summary>
        </member>
        <member name="P:ID3Tag.HighLevel.ID3Frame.UserDefinedTextFrame.Value">
            <summary>
            The value.
            </summary>
        </member>
        <member name="P:ID3Tag.HighLevel.ID3Frame.UserDefinedTextFrame.Type">
            <summary>
            The frame type.
            </summary>
        </member>
    </members>
</doc>
